{
	"id": "6e6bfd7452360d6e66a8b0eec8721552",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CakeToken.sol": {
				"content": "pragma solidity 0.6.12;\n\nimport \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\";\n\n// CakeToken with Governance.\ncontract CakeToken is BEP20('PancakeSwap Token', 'Cake') {\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"CAKE::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"CAKE::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"CAKE::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"CAKE::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying CAKEs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}"
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.0;\n\nimport '../../access/Ownable.sol';\nimport '../../GSN/Context.sol';\nimport './IBEP20.sol';\nimport '../../math/SafeMath.sol';\nimport '../../utils/Address.sol';\n\n/**\n * @dev Implementation of the {IBEP20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {BEP20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of BEP20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IBEP20-approve}.\n */\ncontract BEP20 is Context, IBEP20, Ownable {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external override view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() public override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() public override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() public override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() public override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) public override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) public override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance')\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero')\n        );\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), 'BEP20: transfer from the zero address');\n        require(recipient != address(0), 'BEP20: transfer to the zero address');\n\n        _balances[sender] = _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance');\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), 'BEP20: mint to the zero address');\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), 'BEP20: burn from the zero address');\n\n        _balances[account] = _balances[account].sub(amount, 'BEP20: burn amount exceeds balance');\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(owner != address(0), 'BEP20: approve from the zero address');\n        require(spender != address(0), 'BEP20: approve to the zero address');\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(amount, 'BEP20: burn amount exceeds allowance')\n        );\n    }\n}\n"
			},
			"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, 'Address: insufficient balance');\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}('');\n        require(success, 'Address: unable to send value, recipient may have reverted');\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, 'Address: low-level call failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, 'Address: insufficient balance for call');\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), 'Address: call to non-contract');\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, 'SafeMath: addition overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, 'SafeMath: subtraction overflow');\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, 'SafeMath: multiplication overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, 'SafeMath: division by zero');\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, 'SafeMath: modulo by zero');\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.4.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.4.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor() internal {}\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.4.0;\n\nimport '../GSN/Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), 'Ownable: new owner is the zero address');\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b\",\"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b\",\"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo\"]},\"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe4099b9c99c22b28d8c1676803e2ff6f34ddc043d1e8631476e8e417c81aa7a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dc140c98056178b731be974f42d523134258162fdf379ef6ed2eeb234fc067df\",\"dweb:/ipfs/QmZNQ3FNYS17E2HjyX4eqk7RYfSJtaG5b47W27xatJjNeo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":623:5816  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":623:5816  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ae7504e846b54ae565edc86e059263dbfbc116e53587fd018d2057e202c5241d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae7504e846b54ae565edc86e059263dbfbc116e53587fd018d2057e202c5241d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE PUSH22 0x4E846B54AE565EDC86E059263DBFBC116E53587FD01 DUP14 KECCAK256 JUMPI 0xE2 MUL 0xC5 0x24 SAR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "623:5193:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae7504e846b54ae565edc86e059263dbfbc116e53587fd018d2057e202c5241d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE PUSH22 0x4E846B54AE565EDC86E059263DBFBC116E53587FD01 DUP14 KECCAK256 JUMPI 0xE2 MUL 0xC5 0x24 SAR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "623:5193:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 623,
									"end": 5816,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae7504e846b54ae565edc86e059263dbfbc116e53587fd018d2057e202c5241d64736f6c634300060c0033",
									".code": [
										{
											"begin": 623,
											"end": 5816,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 623,
											"end": 5816,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a\",\"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":1381:10005  contract BEP20 is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2055:2195  constructor(string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":879:896  address msgSender */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:911  _msgSender() */\n  tag_22\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:909  _msgSender */\n  shl(0x20, tag_23)\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:911  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":879:911  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":930:939  msgSender */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":921:927  _owner */\n  0x00\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":921:939  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":987:996  msgSender */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":954:997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":983:984  0 */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":954:997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":846:1004  constructor() internal {... */\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2134:2138  name */\n  dup2\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2126:2131  _name */\n  0x04\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2126:2138  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2158:2164  symbol */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2148:2155  _symbol */\n  0x05\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2148:2164  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_27\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2186:2188  18 */\n  0x12\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2174:2183  _decimals */\n  0x06\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2174:2188  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2055:2195  constructor(string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":1381:10005  contract BEP20 is Context, IBEP20, Ownable {... */\n  jump(tag_28)\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\ntag_23:\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":825:840  address payable */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":859:869  msg.sender */\n  caller\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":852:869  return msg.sender */\n  swap1\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":1381:10005  contract BEP20 is Context, IBEP20, Ownable {... */\ntag_26:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_30)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\ntag_30:\n  pop\n  swap1\n  pop\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_37\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_36)\ntag_37:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":1381:10005  contract BEP20 is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_24:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_24)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_52:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_52)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n    tag_23:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2454:2467  string memory */\n      0x60\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2486:2491  _name */\n      0x04\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2479:2491  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_30:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3911:3915  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3966  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3948  _msgSender() */\n      tag_77\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3946  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3948  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3950:3957  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3959:3965  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3935  _approve */\n      tag_79\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3966  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3983:3987  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3976:3987  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n    tag_32:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2916:2923  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2942:2954  _totalSupply */\n      sload(0x03)\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2935:2954  return _totalSupply */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n    tag_35:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4579:4583  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4631  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4605:4611  sender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4613:4622  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4624:4630  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4604  _transfer */\n      tag_83\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4631  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4808  _approve(... */\n      tag_84\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4663:4669  sender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4695  _msgSender() */\n      tag_85\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4693  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4695  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      tag_86\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4747:4753  amount */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4720  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4728  _allowances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4721:4727  sender */\n      dup12\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4728  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4742  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4741  _msgSender() */\n      tag_87\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4739  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4741  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4742  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4746  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4649  _approve */\n      tag_79\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4808  _approve(... */\n      jump\t// in\n    tag_84:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4825:4829  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4818:4829  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n    tag_37:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2610:2615  uint8 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2634:2643  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2627:2643  return _decimals */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5310:5314  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5409  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5347  _msgSender() */\n      tag_92\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5345  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5347  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5349:5356  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5408  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5397:5407  addedValue */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5369  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5383  _allowances[_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5382  _msgSender() */\n      tag_94\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5380  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5382  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5383  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5392  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5384:5391  spender */\n      dup10\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5392  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5396  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5408  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5334  _approve */\n      tag_79\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5409  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5426:5430  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5419:5430  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_43:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3084:3091  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3119  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3128  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3120:3127  account */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3128  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3103:3128  return _balances[account] */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n    tag_45:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_98\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1801:1802  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1764:1804  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1785:1791  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1764:1804  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1831:1832  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1814:1820  _owner */\n      dup1\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1814:1833  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n    tag_47:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2310:2317  address */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2343  owner() */\n      tag_102\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2341  owner */\n      tag_49\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2343  owner() */\n      jump\t// in\n    tag_102:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2329:2343  return owner() */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n    tag_49:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1118:1125  address */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1144:1150  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1137:1150  return _owner */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n    tag_51:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2758:2771  string memory */\n      0x60\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2790:2797  _symbol */\n      0x05\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2783:2797  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_58:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6491:6495  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_109\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6534  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6525  _msgSender() */\n      tag_113\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6523  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6525  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6527:6533  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6512  _mint */\n      tag_114\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6534  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6551:6555  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6544:6555  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_61:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6008:6012  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6199  _approve(... */\n      tag_116\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6058  _msgSender() */\n      tag_117\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6056  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6058  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6072:6079  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      tag_118\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6132:6147  subtractedValue */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6104  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6118  _allowances[_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6117  _msgSender() */\n      tag_119\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6115  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6117  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6118  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6127  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6119:6126  spender */\n      dup11\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6127  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6131  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6032  _approve */\n      tag_79\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6199  _approve(... */\n      jump\t// in\n    tag_116:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6216:6220  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6209:6220  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_64:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3415:3419  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3473  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3453  _msgSender() */\n      tag_122\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3451  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3453  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3455:3464  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3466:3472  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3440  _transfer */\n      tag_83\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3473  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3490:3494  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3483:3494  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_67:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3639:3646  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3676  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3683  _allowances[owner] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3677:3682  owner */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3683  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3692  _allowances[owner][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3684:3691  spender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3692  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3658:3692  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_125\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_78\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2089  _transferOwnership(newOwner) */\n      tag_128\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2080:2088  newOwner */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2079  _transferOwnership */\n      tag_129\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2089  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n    tag_78:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":825:840  address payable */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":859:869  msg.sender */\n      caller\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":852:869  return msg.sender */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9188:9550  function _approve(... */\n    tag_79:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9328:9329  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9330  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9316  owner */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9330  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9303:9371  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9408:9409  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9410  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9396  spender */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9410  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9381:9449  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9490:9496  amount */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9471  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9478  _allowances[owner] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9472:9477  owner */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9478  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9487  _allowances[owner][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9479:9486  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9487  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9496  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9527:9534  spender */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9520:9525  owner */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9536:9542  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9188:9550  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7036:7530  function _transfer(... */\n    tag_83:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7181:7182  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7169  sender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7155:7225  require(sender != address(0), 'BEP20: transfer from the zero address') */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7264:7265  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7266  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7252  recipient */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7266  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7235:7306  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      tag_137\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7359:7365  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7346  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7354  _balances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7347:7353  sender */\n      dup8\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7354  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7358  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7326  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7334  _balances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7327:7333  sender */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7334  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7408  _balances[sender] = _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7473  _balances[recipient].add(amount) */\n      tag_138\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7466:7472  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7450  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7461  _balances[recipient] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7451:7460  recipient */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7461  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7465  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7473  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7427  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7438  _balances[recipient] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7428:7437  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7438  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7473  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7505:7514  recipient */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7497:7503  sender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7516:7522  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7036:7530  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1747:1964  function sub(... */\n    tag_88:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1863:1870  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1895:1896  a */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1890:1891  b */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1890:1896  b <= a */\n      gt\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1898:1910  errorMessage */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1882:1911  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_141:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_141)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1921:1930  uint256 c */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1937:1938  b */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1933:1934  a */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1933:1938  a - b */\n      sub\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1921:1938  uint256 c = a - b */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1956:1957  c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1949:1957  return c */\n      swap2\n      pop\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1747:1964  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":875:1051  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":933:940  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":952:961  uint256 c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":968:969  b */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":964:965  a */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":964:969  a + b */\n      add\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":952:969  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":992:993  a */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":987:988  c */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":987:993  c >= a */\n      lt\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":979:1025  require(c >= a, 'SafeMath: addition overflow') */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1043:1044  c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1036:1044  return c */\n      swap2\n      pop\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":875:1051  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7800:8102  function _mint(address account, uint256 amount) internal {... */\n    tag_114:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7894:7895  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7896  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7882  account */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7896  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7867:7932  require(account != address(0), 'BEP20: mint to the zero address') */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7982  _totalSupply.add(amount) */\n      tag_149\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7975:7981  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7970  _totalSupply */\n      sload(0x03)\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7974  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7982  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7943:7955  _totalSupply */\n      0x03\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7943:7982  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8043  _balances[account].add(amount) */\n      tag_150\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8036:8042  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8022  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8031  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8023:8030  account */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8031  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8035  _balances[account].add */\n      tag_95\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8043  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8001  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8010  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8002:8009  account */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8010  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8043  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8079:8086  account */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8075:8076  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8088:8094  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7800:8102  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2197:2422  function _transferOwnership(address newOwner) internal {... */\n    tag_129:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2290:2291  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2292  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2278  newOwner */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2292  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2262:2335  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2379:2387  newOwner */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2350:2388  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2350:2388  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2407:2415  newOwner */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2398:2404  _owner */\n      0x00\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2398:2415  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2197:2422  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220a3432f6748adfad02be3e3e449c888edcdb7291d7ca9ba35c23bdebe8f7b00f564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C3F CODESIZE SUB DUP1 PUSH3 0x1C3F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x0 PUSH3 0x1C7 PUSH3 0x2BB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x27D SWAP3 SWAP2 SWAP1 PUSH3 0x2C3 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x296 SWAP3 SWAP2 SWAP1 PUSH3 0x2C3 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x369 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x306 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x337 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x337 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x336 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x319 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x346 SWAP2 SWAP1 PUSH3 0x34A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x365 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x34B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x18C6 DUP1 PUSH3 0x379 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E4 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x460 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x452 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD94 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH2 0x6D7 PUSH2 0xE68 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF DUP5 DUP5 DUP5 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x7C0 DUP5 PUSH2 0x70B PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x7BB DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17D9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x771 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B PUSH2 0x7EF PUSH2 0xE68 JUMP JUMPDEST DUP5 PUSH2 0x886 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x800 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E6 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6E PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB17 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC19 PUSH2 0xC13 PUSH2 0xE68 JUMP JUMPDEST DUP4 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH2 0xC2F PUSH2 0xE68 JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC59 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH2 0xCFC PUSH2 0xE68 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9C PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0x1626 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x178F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x186F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x176A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1827 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1801 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1274 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1393 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1378 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1521 DUP2 PUSH1 0x3 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1579 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17B3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220A3432F6748AD STATICCALL 0xD0 0x2B 0xE3 0xE3 0xE4 0x49 0xC8 DUP9 0xED 0xCD 0xB7 0x29 SAR PUSH29 0xA9BA35C23BDEBE8F7B00F564736F6C634300060C003300000000000000 ",
							"sourceMap": "1381:8624:3:-:0;;;2055:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:17:1;899:12;:10;;;:12;;:::i;:::-;879:32;;930:9;921:6;;:18;;;;;;;;;;;;;;;;;;987:9;954:43;;983:1;954:43;;;;;;;;;;;;846:158;2134:4:3;2126:5;:12;;;;;;;;;;;;:::i;:::-;;2158:6;2148:7;:16;;;;;;;;;;;;:::i;:::-;;2186:2;2174:9;;:14;;;;;;;;;;;;;;;;;;2055:140;;1381:8624;;780:96:0;825:15;859:10;852:17;;780:96;:::o;1381:8624:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104a4578063a9059cbb14610508578063dd62ed3e1461056c578063f2fde38b146105e457610100565b8063893d20e8146103755780638da5cb5b146103a957806395d89b41146103dd578063a0712d681461046057610100565b8063313ce567116100d3578063313ce5671461028e57806339509351146102af57806370a0823114610313578063715018a61461036b57610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec57806323b872dd1461020a575b600080fd5b61010d610628565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ca565b60405180821515815260200191505060405180910390f35b6101f46106e8565b6040518082815260200191505060405180910390f35b6102766004803603606081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f2565b60405180821515815260200191505060405180910390f35b6102966107cb565b604051808260ff16815260200191505060405180910390f35b6102fb600480360360408110156102c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107e2565b60405180821515815260200191505060405180910390f35b6103556004803603602081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610895565b6040518082815260200191505060405180910390f35b6103736108de565b005b61037d610a64565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b1610a73565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e5610a9c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042557808201518184015260208101905061040a565b50505050905090810190601f1680156104525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61048c6004803603602081101561047657600080fd5b8101908080359060200190929190505050610b3e565b60405180821515815260200191505060405180910390f35b6104f0600480360360408110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c22565b60405180821515815260200191505060405180910390f35b6105546004803603604081101561051e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cef565b60405180821515815260200191505060405180910390f35b6105ce6004803603604081101561058257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d0d565b6040518082815260200191505060405180910390f35b610626600480360360208110156105fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d94565b005b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b60006106de6106d7610e68565b8484610e70565b6001905092915050565b6000600354905090565b60006106ff848484611067565b6107c08461070b610e68565b6107bb856040518060600160405280602881526020016117d960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610771610e68565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113219092919063ffffffff16565b610e70565b600190509392505050565b6000600660009054906101000a900460ff16905090565b600061088b6107ef610e68565b846108868560026000610800610e68565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e190919063ffffffff16565b610e70565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108e6610e68565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610a6e610a73565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b345780601f10610b0957610100808354040283529160200191610b34565b820191906000526020600020905b815481529060010190602001808311610b1757829003601f168201915b5050505050905090565b6000610b48610e68565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c19610c13610e68565b83611469565b60019050919050565b6000610ce5610c2f610e68565b84610ce08560405180606001604052806025815260200161184a6025913960026000610c59610e68565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113219092919063ffffffff16565b610e70565b6001905092915050565b6000610d03610cfc610e68565b8484611067565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d9c610e68565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e6581611626565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ef6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061178f6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061186f6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061176a6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611173576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118276023913960400191505060405180910390fd5b6111df8160405180606001604052806026815260200161180160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113219092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061127481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906113ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611393578082015181840152602081019050611378565b50505050905090810190601f1680156113c05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611521816003546113e190919063ffffffff16565b60038190555061157981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117b36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220a3432f6748adfad02be3e3e449c888edcdb7291d7ca9ba35c23bdebe8f7b00f564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E4 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x460 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x40A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x452 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD94 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x695 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH2 0x6D7 PUSH2 0xE68 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF DUP5 DUP5 DUP5 PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x7C0 DUP5 PUSH2 0x70B PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x7BB DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17D9 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x771 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88B PUSH2 0x7EF PUSH2 0xE68 JUMP JUMPDEST DUP5 PUSH2 0x886 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x800 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E6 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6E PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB17 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC19 PUSH2 0xC13 PUSH2 0xE68 JUMP JUMPDEST DUP4 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH2 0xC2F PUSH2 0xE68 JUMP JUMPDEST DUP5 PUSH2 0xCE0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC59 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD03 PUSH2 0xCFC PUSH2 0xE68 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9C PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0x1626 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x178F PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x186F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x176A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1827 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1801 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1321 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1274 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1393 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1378 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1521 DUP2 PUSH1 0x3 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1579 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17B3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220A3432F6748AD STATICCALL 0xD0 0x2B 0xE3 0xE3 0xE4 0x49 0xC8 DUP9 0xED 0xCD 0xB7 0x29 SAR PUSH29 0xA9BA35C23BDEBE8F7B00F564736F6C634300060C003300000000000000 ",
							"sourceMap": "1381:8624:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3836:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2863:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4451:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2560:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5230:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3018:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1703:137:1;;;:::i;:::-;;2258:92:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1080:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2710:94:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6435:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5923:304;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3337:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3558:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1989:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2408:90:3;2454:13;2486:5;2479:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:90;:::o;3836:158::-;3911:4;3927:39;3936:12;:10;:12::i;:::-;3950:7;3959:6;3927:8;:39::i;:::-;3983:4;3976:11;;3836:158;;;;:::o;2863:98::-;2916:7;2942:12;;2935:19;;2863:98;:::o;4451:385::-;4579:4;4595:36;4605:6;4613:9;4624:6;4595:9;:36::i;:::-;4641:167;4663:6;4683:12;:10;:12::i;:::-;4709:89;4747:6;4709:89;;;;;;;;;;;;;;;;;:11;:19;4721:6;4709:19;;;;;;;;;;;;;;;:33;4729:12;:10;:12::i;:::-;4709:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;4641:8;:167::i;:::-;4825:4;4818:11;;4451:385;;;;;:::o;2560:90::-;2610:5;2634:9;;;;;;;;;;;2627:16;;2560:90;:::o;5230:207::-;5310:4;5326:83;5335:12;:10;:12::i;:::-;5349:7;5358:50;5397:10;5358:11;:25;5370:12;:10;:12::i;:::-;5358:25;;;;;;;;;;;;;;;:34;5384:7;5358:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5326:8;:83::i;:::-;5426:4;5419:11;;5230:207;;;;:::o;3018:117::-;3084:7;3110:9;:18;3120:7;3110:18;;;;;;;;;;;;;;;;3103:25;;3018:117;;;:::o;1703:137:1:-;1294:12;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:1:::1;1764:40;;1785:6;::::0;::::1;;;;;;;;1764:40;;;;;;;;;;;;1831:1;1814:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1703:137::o:0;2258:92:3:-;2310:7;2336;:5;:7::i;:::-;2329:14;;2258:92;:::o;1080:77:1:-;1118:7;1144:6;;;;;;;;;;;1137:13;;1080:77;:::o;2710:94:3:-;2758:13;2790:7;2783:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:94;:::o;6435:127::-;6491:4;1294:12:1;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6507:27:3::1;6513:12;:10;:12::i;:::-;6527:6;6507:5;:27::i;:::-;6551:4;6544:11;;6435:127:::0;;;:::o;5923:304::-;6008:4;6024:175;6046:12;:10;:12::i;:::-;6072:7;6093:96;6132:15;6093:96;;;;;;;;;;;;;;;;;:11;:25;6105:12;:10;:12::i;:::-;6093:25;;;;;;;;;;;;;;;:34;6119:7;6093:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6024:8;:175::i;:::-;6216:4;6209:11;;5923:304;;;;:::o;3337:164::-;3415:4;3431:42;3441:12;:10;:12::i;:::-;3455:9;3466:6;3431:9;:42::i;:::-;3490:4;3483:11;;3337:164;;;;:::o;3558:141::-;3639:7;3665:11;:18;3677:5;3665:18;;;;;;;;;;;;;;;:27;3684:7;3665:27;;;;;;;;;;;;;;;;3658:34;;3558:141;;;;:::o;1989:107:1:-;1294:12;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:28:::1;2080:8;2061:18;:28::i;:::-;1989:107:::0;:::o;780:96:0:-;825:15;859:10;852:17;;780:96;:::o;9188:362:3:-;9328:1;9311:19;;:5;:19;;;;9303:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9408:1;9389:21;;:7;:21;;;;9381:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9490:6;9460:11;:18;9472:5;9460:18;;;;;;;;;;;;;;;:27;9479:7;9460:27;;;;;;;;;;;;;;;:36;;;;9527:7;9511:32;;9520:5;9511:32;;;9536:6;9511:32;;;;;;;;;;;;;;;;;;9188:362;;;:::o;7036:494::-;7181:1;7163:20;;:6;:20;;;;7155:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7264:1;7243:23;;:9;:23;;;;7235:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7337;7359:6;7337:71;;;;;;;;;;;;;;;;;:9;:17;7347:6;7337:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7317:9;:17;7327:6;7317:17;;;;;;;;;;;;;;;:91;;;;7441:32;7466:6;7441:9;:20;7451:9;7441:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7418:9;:20;7428:9;7418:20;;;;;;;;;;;;;;;:55;;;;7505:9;7488:35;;7497:6;7488:35;;;7516:6;7488:35;;;;;;;;;;;;;;;;;;7036:494;;;:::o;1747:217:2:-;1863:7;1895:1;1890;:6;;1898:12;1882:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:9;1937:1;1933;:5;1921:17;;1956:1;1949:8;;;1747:217;;;;;:::o;875:176::-;933:7;952:9;968:1;964;:5;952:17;;992:1;987;:6;;979:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:1;1036:8;;;875:176;;;;:::o;7800:302:3:-;7894:1;7875:21;;:7;:21;;;;7867:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7958:24;7975:6;7958:12;;:16;;:24;;;;:::i;:::-;7943:12;:39;;;;8013:30;8036:6;8013:9;:18;8023:7;8013:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;7992:9;:18;8002:7;7992:18;;;;;;;;;;;;;;;:51;;;;8079:7;8058:37;;8075:1;8058:37;;;8088:6;8058:37;;;;;;;;;;;;;;;;;;7800:302;;:::o;2197:225:1:-;2290:1;2270:22;;:8;:22;;;;2262:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2379:8;2350:38;;2371:6;;;;;;;;;;2350:38;;;;;;;;;;;;2407:8;2398:6;;:17;;;;;;;;;;;;;;;;;;2197:225;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1268400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1078",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1113",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1100",
								"renounceOwnership()": "24380",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 879,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 879,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 879,
									"end": 911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 930,
									"end": 939,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 983,
									"end": 984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2131,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2186,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2174,
									"end": 2183,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2174,
									"end": 2183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 780,
									"end": 876,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 780,
									"end": 876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 825,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 859,
									"end": 869,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 852,
									"end": 869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 852,
									"end": 869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 780,
									"end": 876,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 876,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1381,
									"end": 10005,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3432f6748adfad02be3e3e449c888edcdb7291d7ca9ba35c23bdebe8f7b00f564736f6c634300060c0033",
									".code": [
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "893D20E8"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "893D20E8"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "A0712D68"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 10005,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2467,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2486,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 3987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4683,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH data",
											"source": 3,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4720,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4729,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4709,
											"end": 4746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4825,
											"end": 4829,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5335,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5397,
											"end": 5407,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5369,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5370,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5391,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6513,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6046,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6132,
											"end": 6147,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH data",
											"source": 3,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6105,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6093,
											"end": 6131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6209,
											"end": 6220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3441,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3676,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 780,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 780,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH data",
											"source": 3,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH data",
											"source": 3,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9471,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9527,
											"end": 9534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9520,
											"end": 9525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH data",
											"source": 3,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH data",
											"source": 3,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH data",
											"source": 3,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7466,
											"end": 7472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7460,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7441,
											"end": 7465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 964,
											"end": 965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 964,
											"end": 969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 993,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 987,
											"end": 993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7958,
											"end": 7970,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7958,
											"end": 7974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8036,
											"end": 8042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8030,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8009,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b\",\"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo\"]},\"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe4099b9c99c22b28d8c1676803e2ff6f34ddc043d1e8631476e8e417c81aa7a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dc140c98056178b731be974f42d523134258162fdf379ef6ed2eeb234fc067df\",\"dweb:/ipfs/QmZNQ3FNYS17E2HjyX4eqk7RYfSJtaG5b47W27xatJjNeo\"]},\"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a\",\"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL\"]},\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":{\"keccak256\":\"0x0442404a56112b52de7e4a64eb0d9fe346add08d122b52e848e43c9f22d707c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abbecb866acdd459f567efac348a519758c46ca0b53415c484b28b2d28c7b19f\",\"dweb:/ipfs/Qmdo86JSfRcqoMr6Z2H3k1NMZQ6qZCSvSihzCb5Eq7d8DJ\"]},\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol\":{\"keccak256\":\"0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1\",\"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r\"]},\"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x806c8686fdf1afac78d0828ca7941e5ac30282a358d23cf502ec39893c64d4af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be41cfa7e8aaf4c95e1517007964cef2470abd47ad578293db4cd25434ee77ea\",\"dweb:/ipfs/QmPX9qcHJNv1vA6Nxue8c46wxdXwKdLcUyXxEQ91F93u7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 439,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 445,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 447,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 449,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 451,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 453,
								"contract": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol\":{\"keccak256\":\"0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1\",\"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":126:6231  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":126:6231  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088212ae5348c8dbc9485997b4d8f427451617ccb6e8bee6d808cf9328169691e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088212ae5348c8dbc9485997b4d8f427451617ccb6e8bee6d808cf9328169691e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x21 0x2A 0xE5 CALLVALUE DUP13 DUP14 0xBC SWAP5 DUP6 SWAP10 PUSH28 0x4D8F427451617CCB6E8BEE6D808CF9328169691E64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "126:6105:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088212ae5348c8dbc9485997b4d8f427451617ccb6e8bee6d808cf9328169691e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x21 0x2A 0xE5 CALLVALUE DUP13 DUP14 0xBC SWAP5 DUP6 SWAP10 PUSH28 0x4D8F427451617CCB6E8BEE6D808CF9328169691E64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "126:6105:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 6231,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088212ae5348c8dbc9485997b4d8f427451617ccb6e8bee6d808cf9328169691e64736f6c634300060c0033",
									".code": [
										{
											"begin": 126,
											"end": 6231,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 6231,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x806c8686fdf1afac78d0828ca7941e5ac30282a358d23cf502ec39893c64d4af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be41cfa7e8aaf4c95e1517007964cef2470abd47ad578293db4cd25434ee77ea\",\"dweb:/ipfs/QmPX9qcHJNv1vA6Nxue8c46wxdXwKdLcUyXxEQ91F93u7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CakeToken.sol": {
				"CakeToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"delegates(address)": {
								"params": {
									"delegator": "The address to get delegatee for"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CakeToken.sol\":128:8812  contract CakeToken is BEP20('PancakeSwap Token', 'Cake') {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2055:2195  constructor(string memory name, string memory symbol) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x50616e63616b655377617020546f6b656e000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x43616b6500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":879:896  address msgSender */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:911  _msgSender() */\n  tag_7\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:909  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":899:911  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":879:911  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":930:939  msgSender */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":921:927  _owner */\n  0x00\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":921:939  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":987:996  msgSender */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":954:997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":983:984  0 */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":954:997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":846:1004  constructor() internal {... */\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2134:2138  name */\n  dup2\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2126:2131  _name */\n  0x04\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2126:2138  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2158:2164  symbol */\n  dup1\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2148:2155  _symbol */\n  0x05\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2148:2164  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2186:2188  18 */\n  0x12\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2174:2183  _decimals */\n  0x06\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2174:2188  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2055:2195  constructor(string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"contracts/CakeToken.sol\":128:8812  contract CakeToken is BEP20('PancakeSwap Token', 'Cake') {... */\n  jump(tag_13)\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":825:840  address payable */\n  0x00\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":859:869  msg.sender */\n  caller\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":852:869  return msg.sender */\n  swap1\n  pop\n    /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/CakeToken.sol\":128:8812  contract CakeToken is BEP20('PancakeSwap Token', 'Cake') {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CakeToken.sol\":128:8812  contract CakeToken is BEP20('PancakeSwap Token', 'Cake') {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x782d6fe1\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x782d6fe1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x39509351\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x5c19a95c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_38:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_38)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n    tag_5:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":1441:1563  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n    tag_8:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":288:447  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/CakeToken.sol\":2406:2549  function delegates(address delegator)... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":2687:2789  function delegate(address delegatee) external {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/CakeToken.sol\":1322:1371  mapping (address => uint32) public numCheckpoints */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/CakeToken.sol\":5213:6430  function getPriorVotes(address account, uint blockNumber)... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":1849:1888  mapping (address => uint) public nonces */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n    tag_19:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n    tag_20:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_86:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_86)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_89:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_21:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_22:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_23:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":4543:4791  function getCurrentVotes(address account)... */\n    tag_24:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":3212:4349  function delegateBySig(... */\n    tag_25:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_26:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":1654:1771  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_27:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CakeToken.sol\":1186:1256  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n    tag_37:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2454:2467  string memory */\n      0x60\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2486:2491  _name */\n      0x04\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2479:2491  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2408:2498  function name() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_44:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3911:3915  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3966  _approve(_msgSender(), spender, amount) */\n      tag_121\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3948  _msgSender() */\n      tag_122\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3946  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3936:3948  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3950:3957  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3959:3965  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3935  _approve */\n      tag_124\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3927:3966  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3983:3987  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3976:3987  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3836:3994  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n    tag_46:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2916:2923  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2942:2954  _totalSupply */\n      sload(0x03)\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2935:2954  return _totalSupply */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2863:2961  function totalSupply() public override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":1441:1563  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_48:\n        /* \"contracts/CakeToken.sol\":1483:1563  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/CakeToken.sol\":1441:1563  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n    tag_51:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4579:4583  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4631  _transfer(sender, recipient, amount) */\n      tag_127\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4605:4611  sender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4613:4622  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4624:4630  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4604  _transfer */\n      tag_128\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4595:4631  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_127:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4808  _approve(... */\n      tag_129\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4663:4669  sender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4695  _msgSender() */\n      tag_130\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4693  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4683:4695  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      tag_131\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4747:4753  amount */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4720  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4728  _allowances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4721:4727  sender */\n      dup12\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4728  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4742  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4741  _msgSender() */\n      tag_132\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4739  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4729:4741  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4742  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4746  _allowances[sender][_msgSender()].sub */\n      tag_133\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4709:4798  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4649  _approve */\n      tag_124\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4641:4808  _approve(... */\n      jump\t// in\n    tag_129:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4825:4829  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4818:4829  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":4451:4836  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n    tag_53:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2610:2615  uint8 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2634:2643  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2627:2643  return _decimals */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2560:2650  function decimals() public override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_56:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5310:5314  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5409  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_136\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5347  _msgSender() */\n      tag_137\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5345  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5335:5347  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5349:5356  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5408  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_138\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5397:5407  addedValue */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5369  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5383  _allowances[_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5382  _msgSender() */\n      tag_139\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5380  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5370:5382  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5383  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5392  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5384:5391  spender */\n      dup10\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5392  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5396  _allowances[_msgSender()][spender].add */\n      tag_140\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5358:5408  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5334  _approve */\n      tag_124\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5326:5409  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_136:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5426:5430  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5419:5430  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5230:5437  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":288:447  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_59:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_142\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/CakeToken.sol\":359:378  _mint(_to, _amount) */\n      tag_145\n        /* \"contracts/CakeToken.sol\":365:368  _to */\n      dup3\n        /* \"contracts/CakeToken.sol\":370:377  _amount */\n      dup3\n        /* \"contracts/CakeToken.sol\":359:364  _mint */\n      tag_146\n        /* \"contracts/CakeToken.sol\":359:378  _mint(_to, _amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/CakeToken.sol\":388:440  _moveDelegates(address(0), _delegates[_to], _amount) */\n      tag_147\n        /* \"contracts/CakeToken.sol\":411:412  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":415:425  _delegates */\n      0x07\n        /* \"contracts/CakeToken.sol\":415:430  _delegates[_to] */\n      0x00\n        /* \"contracts/CakeToken.sol\":426:429  _to */\n      dup6\n        /* \"contracts/CakeToken.sol\":415:430  _delegates[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":432:439  _amount */\n      dup4\n        /* \"contracts/CakeToken.sol\":388:402  _moveDelegates */\n      tag_148\n        /* \"contracts/CakeToken.sol\":388:440  _moveDelegates(address(0), _delegates[_to], _amount) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/CakeToken.sol\":288:447  function mint(address _to, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":2406:2549  function delegates(address delegator)... */\n    tag_62:\n        /* \"contracts/CakeToken.sol\":2491:2498  address */\n      0x00\n        /* \"contracts/CakeToken.sol\":2521:2531  _delegates */\n      0x07\n        /* \"contracts/CakeToken.sol\":2521:2542  _delegates[delegator] */\n      0x00\n        /* \"contracts/CakeToken.sol\":2532:2541  delegator */\n      dup4\n        /* \"contracts/CakeToken.sol\":2521:2542  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":2514:2542  return _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":2406:2549  function delegates(address delegator)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":2687:2789  function delegate(address delegatee) external {... */\n    tag_65:\n        /* \"contracts/CakeToken.sol\":2750:2782  _delegate(msg.sender, delegatee) */\n      tag_151\n        /* \"contracts/CakeToken.sol\":2760:2770  msg.sender */\n      caller\n        /* \"contracts/CakeToken.sol\":2772:2781  delegatee */\n      dup3\n        /* \"contracts/CakeToken.sol\":2750:2759  _delegate */\n      tag_152\n        /* \"contracts/CakeToken.sol\":2750:2782  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/CakeToken.sol\":2687:2789  function delegate(address delegatee) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":1322:1371  mapping (address => uint32) public numCheckpoints */\n    tag_68:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n    tag_71:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3084:3091  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3119  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3128  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3120:3127  account */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3110:3128  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3103:3128  return _balances[account] */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3018:3135  function balanceOf(address account) public override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n    tag_73:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_155\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1801:1802  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1764:1804  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1785:1791  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1764:1804  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1831:1832  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1814:1820  _owner */\n      dup1\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1814:1833  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1703:1840  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":5213:6430  function getPriorVotes(address account, uint blockNumber)... */\n    tag_76:\n        /* \"contracts/CakeToken.sol\":5318:5325  uint256 */\n      0x00\n        /* \"contracts/CakeToken.sol\":5363:5375  block.number */\n      number\n        /* \"contracts/CakeToken.sol\":5349:5360  blockNumber */\n      dup3\n        /* \"contracts/CakeToken.sol\":5349:5375  blockNumber < block.number */\n      lt\n        /* \"contracts/CakeToken.sol\":5341:5419  require(blockNumber < block.number, \"CAKE::getPriorVotes: not yet determined\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/CakeToken.sol\":5430:5449  uint32 nCheckpoints */\n      0x00\n        /* \"contracts/CakeToken.sol\":5452:5466  numCheckpoints */\n      0x09\n        /* \"contracts/CakeToken.sol\":5452:5475  numCheckpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5467:5474  account */\n      dup6\n        /* \"contracts/CakeToken.sol\":5452:5475  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":5430:5475  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":5505:5506  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":5489:5501  nCheckpoints */\n      dup2\n        /* \"contracts/CakeToken.sol\":5489:5506  nCheckpoints == 0 */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CakeToken.sol\":5485:5541  if (nCheckpoints == 0) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/CakeToken.sol\":5529:5530  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":5522:5530  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/CakeToken.sol\":5485:5541  if (nCheckpoints == 0) {... */\n    tag_160:\n        /* \"contracts/CakeToken.sol\":5650:5661  blockNumber */\n      dup3\n        /* \"contracts/CakeToken.sol\":5598:5609  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":5598:5618  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5610:5617  account */\n      dup7\n        /* \"contracts/CakeToken.sol\":5598:5618  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5598:5636  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5634:5635  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":5619:5631  nCheckpoints */\n      dup5\n        /* \"contracts/CakeToken.sol\":5619:5635  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":5598:5636  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5598:5646  checkpoints[account][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":5598:5661  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":5594:5739  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_161\n      jumpi\n        /* \"contracts/CakeToken.sol\":5684:5695  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":5684:5704  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5696:5703  account */\n      dup6\n        /* \"contracts/CakeToken.sol\":5684:5704  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5684:5722  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5720:5721  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":5705:5717  nCheckpoints */\n      dup4\n        /* \"contracts/CakeToken.sol\":5705:5721  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":5684:5722  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5684:5728  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/CakeToken.sol\":5677:5728  return checkpoints[account][nCheckpoints - 1].votes */\n      swap2\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/CakeToken.sol\":5594:5739  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_161:\n        /* \"contracts/CakeToken.sol\":5833:5844  blockNumber */\n      dup3\n        /* \"contracts/CakeToken.sol\":5797:5808  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":5797:5817  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5809:5816  account */\n      dup7\n        /* \"contracts/CakeToken.sol\":5797:5817  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5797:5820  checkpoints[account][0] */\n      0x00\n        /* \"contracts/CakeToken.sol\":5818:5819  0 */\n      dup1\n        /* \"contracts/CakeToken.sol\":5797:5820  checkpoints[account][0] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":5797:5830  checkpoints[account][0].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":5797:5844  checkpoints[account][0].fromBlock > blockNumber */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":5793:5879  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"contracts/CakeToken.sol\":5867:5868  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":5860:5868  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/CakeToken.sol\":5793:5879  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_162:\n        /* \"contracts/CakeToken.sol\":5889:5901  uint32 lower */\n      0x00\n        /* \"contracts/CakeToken.sol\":5915:5927  uint32 upper */\n      dup1\n        /* \"contracts/CakeToken.sol\":5945:5946  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":5930:5942  nCheckpoints */\n      dup4\n        /* \"contracts/CakeToken.sol\":5930:5946  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":5915:5946  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":5956:6374  while (upper > lower) {... */\n    tag_163:\n        /* \"contracts/CakeToken.sol\":5971:5976  lower */\n      dup2\n        /* \"contracts/CakeToken.sol\":5963:5976  upper > lower */\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":5963:5968  upper */\n      dup2\n        /* \"contracts/CakeToken.sol\":5963:5976  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":5956:6374  while (upper > lower) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/CakeToken.sol\":5992:6005  uint32 center */\n      0x00\n        /* \"contracts/CakeToken.sol\":6034:6035  2 */\n      0x02\n        /* \"contracts/CakeToken.sol\":6025:6030  lower */\n      dup4\n        /* \"contracts/CakeToken.sol\":6017:6022  upper */\n      dup4\n        /* \"contracts/CakeToken.sol\":6017:6030  upper - lower */\n      sub\n        /* \"contracts/CakeToken.sol\":6016:6035  (upper - lower) / 2 */\n      0xffffffff\n      and\n      dup2\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      div\n        /* \"contracts/CakeToken.sol\":6008:6013  upper */\n      dup3\n        /* \"contracts/CakeToken.sol\":6008:6035  upper - (upper - lower) / 2 */\n      sub\n        /* \"contracts/CakeToken.sol\":5992:6035  uint32 center = upper - (upper - lower) / 2 */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":6076:6096  Checkpoint memory cp */\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/CakeToken.sol\":6099:6110  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":6099:6119  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6111:6118  account */\n      dup10\n        /* \"contracts/CakeToken.sol\":6099:6119  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":6099:6127  checkpoints[account][center] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6120:6126  center */\n      dup4\n        /* \"contracts/CakeToken.sol\":6099:6127  checkpoints[account][center] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":6076:6127  Checkpoint memory cp = checkpoints[account][center] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":6161:6172  blockNumber */\n      dup7\n        /* \"contracts/CakeToken.sol\":6145:6147  cp */\n      dup2\n        /* \"contracts/CakeToken.sol\":6145:6157  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/CakeToken.sol\":6145:6172  cp.fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CakeToken.sol\":6141:6364  if (cp.fromBlock == blockNumber) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/CakeToken.sol\":6199:6201  cp */\n      dup1\n        /* \"contracts/CakeToken.sol\":6199:6207  cp.votes */\n      0x20\n      add\n      mload\n        /* \"contracts/CakeToken.sol\":6192:6207  return cp.votes */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/CakeToken.sol\":6141:6364  if (cp.fromBlock == blockNumber) {... */\n    tag_168:\n        /* \"contracts/CakeToken.sol\":6247:6258  blockNumber */\n      dup7\n        /* \"contracts/CakeToken.sol\":6232:6234  cp */\n      dup2\n        /* \"contracts/CakeToken.sol\":6232:6244  cp.fromBlock */\n      0x00\n      add\n      mload\n        /* \"contracts/CakeToken.sol\":6232:6258  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/CakeToken.sol\":6228:6364  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/CakeToken.sol\":6286:6292  center */\n      dup2\n        /* \"contracts/CakeToken.sol\":6278:6292  lower = center */\n      swap4\n      pop\n        /* \"contracts/CakeToken.sol\":6228:6364  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_171)\n    tag_170:\n        /* \"contracts/CakeToken.sol\":6348:6349  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":6339:6345  center */\n      dup3\n        /* \"contracts/CakeToken.sol\":6339:6349  center - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":6331:6349  upper = center - 1 */\n      swap3\n      pop\n        /* \"contracts/CakeToken.sol\":6228:6364  if (cp.fromBlock < blockNumber) {... */\n    tag_171:\n        /* \"contracts/CakeToken.sol\":5956:6374  while (upper > lower) {... */\n      pop\n      pop\n      jump(tag_163)\n    tag_164:\n        /* \"contracts/CakeToken.sol\":6390:6401  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":6390:6410  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6402:6409  account */\n      dup8\n        /* \"contracts/CakeToken.sol\":6390:6410  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":6390:6417  checkpoints[account][lower] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6411:6416  lower */\n      dup4\n        /* \"contracts/CakeToken.sol\":6390:6417  checkpoints[account][lower] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":6390:6423  checkpoints[account][lower].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/CakeToken.sol\":6383:6423  return checkpoints[account][lower].votes */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CakeToken.sol\":5213:6430  function getPriorVotes(address account, uint blockNumber)... */\n    tag_158:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":1849:1888  mapping (address => uint) public nonces */\n    tag_79:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n    tag_81:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2310:2317  address */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2343  owner() */\n      tag_173\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2341  owner */\n      tag_83\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2336:2343  owner() */\n      jump\t// in\n    tag_173:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2329:2343  return owner() */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2258:2350  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n    tag_83:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1118:1125  address */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1144:1150  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1137:1150  return _owner */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1080:1157  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n    tag_85:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2758:2771  string memory */\n      0x60\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2790:2797  _symbol */\n      0x05\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2783:2797  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_177\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_176)\n    tag_177:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_178:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_178\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":2710:2804  function symbol() public override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_92:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6491:6495  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_180\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6534  _mint(_msgSender(), amount) */\n      tag_183\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6525  _msgSender() */\n      tag_184\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6523  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6513:6525  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6527:6533  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6512  _mint */\n      tag_146\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6507:6534  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_183:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6551:6555  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6544:6555  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6435:6562  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_95:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6008:6012  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6199  _approve(... */\n      tag_186\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6058  _msgSender() */\n      tag_187\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6056  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6046:6058  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6072:6079  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      tag_188\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6132:6147  subtractedValue */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6104  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6118  _allowances[_msgSender()] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6117  _msgSender() */\n      tag_189\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6115  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6105:6117  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6118  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6127  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6119:6126  spender */\n      dup11\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6127  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6131  _allowances[_msgSender()][spender].sub */\n      tag_133\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6093:6189  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6032  _approve */\n      tag_124\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6024:6199  _approve(... */\n      jump\t// in\n    tag_186:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6216:6220  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":6209:6220  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":5923:6227  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_98:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3415:3419  bool */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3473  _transfer(_msgSender(), recipient, amount) */\n      tag_191\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3453  _msgSender() */\n      tag_192\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3451  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3441:3453  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3455:3464  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3466:3472  amount */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3440  _transfer */\n      tag_128\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3431:3473  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_191:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3490:3494  true */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3483:3494  return true */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3337:3501  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":4543:4791  function getCurrentVotes(address account)... */\n    tag_101:\n        /* \"contracts/CakeToken.sol\":4632:4639  uint256 */\n      0x00\n        /* \"contracts/CakeToken.sol\":4655:4674  uint32 nCheckpoints */\n      dup1\n        /* \"contracts/CakeToken.sol\":4677:4691  numCheckpoints */\n      0x09\n        /* \"contracts/CakeToken.sol\":4677:4700  numCheckpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":4692:4699  account */\n      dup5\n        /* \"contracts/CakeToken.sol\":4677:4700  numCheckpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":4655:4700  uint32 nCheckpoints = numCheckpoints[account] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":4732:4733  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":4717:4729  nCheckpoints */\n      dup2\n        /* \"contracts/CakeToken.sol\":4717:4733  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":4717:4784  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_194\n      jumpi\n        /* \"contracts/CakeToken.sol\":4783:4784  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":4717:4784  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_195)\n    tag_194:\n        /* \"contracts/CakeToken.sol\":4736:4747  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":4736:4756  checkpoints[account] */\n      0x00\n        /* \"contracts/CakeToken.sol\":4748:4755  account */\n      dup5\n        /* \"contracts/CakeToken.sol\":4736:4756  checkpoints[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":4736:4774  checkpoints[account][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":4772:4773  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":4757:4769  nCheckpoints */\n      dup4\n        /* \"contracts/CakeToken.sol\":4757:4773  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":4736:4774  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":4736:4780  checkpoints[account][nCheckpoints - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/CakeToken.sol\":4717:4784  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_195:\n        /* \"contracts/CakeToken.sol\":4710:4784  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/CakeToken.sol\":4543:4791  function getCurrentVotes(address account)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":3212:4349  function delegateBySig(... */\n    tag_104:\n        /* \"contracts/CakeToken.sol\":3395:3418  bytes32 domainSeparator */\n      0x00\n        /* \"contracts/CakeToken.sol\":1483:1563  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"contracts/CakeToken.sol\":3521:3527  name() */\n      tag_197\n        /* \"contracts/CakeToken.sol\":3521:3525  name */\n      tag_37\n        /* \"contracts/CakeToken.sol\":3521:3527  name() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/CakeToken.sol\":3505:3529  keccak256(bytes(name())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/CakeToken.sol\":3547:3559  getChainId() */\n      tag_198\n        /* \"contracts/CakeToken.sol\":3547:3557  getChainId */\n      tag_199\n        /* \"contracts/CakeToken.sol\":3547:3559  getChainId() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/CakeToken.sol\":3585:3589  this */\n      address\n        /* \"contracts/CakeToken.sol\":3444:3604  abi.encode(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/CakeToken.sol\":3421:3614  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/CakeToken.sol\":3395:3614  bytes32 domainSeparator = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":3625:3643  bytes32 structHash */\n      0x00\n        /* \"contracts/CakeToken.sol\":1700:1771  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/CakeToken.sol\":3734:3743  delegatee */\n      dup9\n        /* \"contracts/CakeToken.sol\":3761:3766  nonce */\n      dup9\n        /* \"contracts/CakeToken.sol\":3784:3790  expiry */\n      dup9\n        /* \"contracts/CakeToken.sol\":3669:3804  abi.encode(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/CakeToken.sol\":3646:3814  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/CakeToken.sol\":3625:3814  bytes32 structHash = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":3825:3839  bytes32 digest */\n      0x00\n        /* \"contracts/CakeToken.sol\":3927:3942  domainSeparator */\n      dup3\n        /* \"contracts/CakeToken.sol\":3960:3970  structHash */\n      dup3\n        /* \"contracts/CakeToken.sol\":3865:3984  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/CakeToken.sol\":3842:3994  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/CakeToken.sol\":3825:3994  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":4005:4022  address signatory */\n      0x00\n        /* \"contracts/CakeToken.sol\":4025:4051  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/CakeToken.sol\":4035:4041  digest */\n      dup3\n        /* \"contracts/CakeToken.sol\":4043:4044  v */\n      dup9\n        /* \"contracts/CakeToken.sol\":4046:4047  r */\n      dup9\n        /* \"contracts/CakeToken.sol\":4049:4050  s */\n      dup9\n        /* \"contracts/CakeToken.sol\":4025:4051  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/CakeToken.sol\":4005:4051  address signatory = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":4090:4091  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":4069:4092  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":4069:4078  signatory */\n      dup2\n        /* \"contracts/CakeToken.sol\":4069:4092  signatory != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/CakeToken.sol\":4061:4135  require(signatory != address(0), \"CAKE::delegateBySig: invalid signature\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/CakeToken.sol\":4162:4168  nonces */\n      0x0a\n        /* \"contracts/CakeToken.sol\":4162:4179  nonces[signatory] */\n      0x00\n        /* \"contracts/CakeToken.sol\":4169:4178  signatory */\n      dup3\n        /* \"contracts/CakeToken.sol\":4162:4179  nonces[signatory] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CakeToken.sol\":4162:4181  nonces[signatory]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/CakeToken.sol\":4153:4158  nonce */\n      dup10\n        /* \"contracts/CakeToken.sol\":4153:4181  nonce == nonces[signatory]++ */\n      eq\n        /* \"contracts/CakeToken.sol\":4145:4220  require(nonce == nonces[signatory]++, \"CAKE::delegateBySig: invalid nonce\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/CakeToken.sol\":4245:4251  expiry */\n      dup8\n        /* \"contracts/CakeToken.sol\":4238:4241  now */\n      timestamp\n        /* \"contracts/CakeToken.sol\":4238:4251  now <= expiry */\n      gt\n      iszero\n        /* \"contracts/CakeToken.sol\":4230:4294  require(now <= expiry, \"CAKE::delegateBySig: signature expired\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/CakeToken.sol\":4311:4342  _delegate(signatory, delegatee) */\n      tag_205\n        /* \"contracts/CakeToken.sol\":4321:4330  signatory */\n      dup2\n        /* \"contracts/CakeToken.sol\":4332:4341  delegatee */\n      dup12\n        /* \"contracts/CakeToken.sol\":4311:4320  _delegate */\n      tag_152\n        /* \"contracts/CakeToken.sol\":4311:4342  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/CakeToken.sol\":4304:4342  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CakeToken.sol\":3212:4349  function delegateBySig(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n    tag_107:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3639:3646  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3676  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3683  _allowances[owner] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3677:3682  owner */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3683  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3692  _allowances[owner][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3684:3691  spender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3665:3692  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3658:3692  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":3558:3699  function allowance(address owner, address spender) public override view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":1654:1771  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_109:\n        /* \"contracts/CakeToken.sol\":1700:1771  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"contracts/CakeToken.sol\":1654:1771  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":1186:1256  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_112:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_115:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      tag_208\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1304  _msgSender */\n      tag_123\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1290  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1284:1306  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1276:1343  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2089  _transferOwnership(newOwner) */\n      tag_211\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2080:2088  newOwner */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2079  _transferOwnership */\n      tag_212\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2061:2089  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_211:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":1989:2096  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n    tag_123:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":825:840  address payable */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":859:869  msg.sender */\n      caller\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":852:869  return msg.sender */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":780:876  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9188:9550  function _approve(... */\n    tag_124:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9328:9329  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9330  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9316  owner */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9311:9330  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9303:9371  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9408:9409  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9410  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9396  spender */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9389:9410  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9381:9449  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9490:9496  amount */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9471  _allowances */\n      0x02\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9478  _allowances[owner] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9472:9477  owner */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9478  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9487  _allowances[owner][spender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9479:9486  spender */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9487  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9460:9496  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9527:9534  spender */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9520:9525  owner */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9536:9542  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9511:9543  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":9188:9550  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7036:7530  function _transfer(... */\n    tag_128:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7181:7182  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7169  sender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7163:7183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7155:7225  require(sender != address(0), 'BEP20: transfer from the zero address') */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7264:7265  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7266  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7252  recipient */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7243:7266  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7235:7306  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      tag_220\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7359:7365  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7346  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7354  _balances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7347:7353  sender */\n      dup8\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7354  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7358  _balances[sender].sub */\n      tag_133\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7337:7408  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7326  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7334  _balances[sender] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7327:7333  sender */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7334  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7317:7408  _balances[sender] = _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7473  _balances[recipient].add(amount) */\n      tag_221\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7466:7472  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7450  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7461  _balances[recipient] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7451:7460  recipient */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7461  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7465  _balances[recipient].add */\n      tag_140\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7441:7473  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7427  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7438  _balances[recipient] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7428:7437  recipient */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7438  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7418:7473  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7505:7514  recipient */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7497:7503  sender */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7516:7522  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7488:7523  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7036:7530  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1747:1964  function sub(... */\n    tag_133:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1863:1870  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1895:1896  a */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1890:1891  b */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1890:1896  b <= a */\n      gt\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1898:1910  errorMessage */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1882:1911  require(b <= a, errorMessage) */\n      swap1\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_224:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_226\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_224)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_227\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_227:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1921:1930  uint256 c */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1937:1938  b */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1933:1934  a */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1933:1938  a - b */\n      sub\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1921:1938  uint256 c = a - b */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1956:1957  c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1949:1957  return c */\n      swap2\n      pop\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1747:1964  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":875:1051  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":933:940  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":952:961  uint256 c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":968:969  b */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":964:965  a */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":964:969  a + b */\n      add\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":952:969  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":992:993  a */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":987:988  c */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":987:993  c >= a */\n      lt\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":979:1025  require(c >= a, 'SafeMath: addition overflow') */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1043:1044  c */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1036:1044  return c */\n      swap2\n      pop\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":875:1051  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7800:8102  function _mint(address account, uint256 amount) internal {... */\n    tag_146:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7894:7895  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7896  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7882  account */\n      dup3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7875:7896  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7867:7932  require(account != address(0), 'BEP20: mint to the zero address') */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7982  _totalSupply.add(amount) */\n      tag_232\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7975:7981  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7970  _totalSupply */\n      sload(0x03)\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7974  _totalSupply.add */\n      tag_140\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7958:7982  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7943:7955  _totalSupply */\n      0x03\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7943:7982  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8043  _balances[account].add(amount) */\n      tag_233\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8036:8042  amount */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8022  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8031  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8023:8030  account */\n      dup6\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8031  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8035  _balances[account].add */\n      tag_140\n      swap1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8013:8043  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8001  _balances */\n      0x01\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8010  _balances[account] */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8002:8009  account */\n      dup5\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8010  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7992:8043  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8079:8086  account */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8075:8076  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8088:8094  amount */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":8058:8095  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":7800:8102  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":6870:7799  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n    tag_148:\n        /* \"contracts/CakeToken.sol\":6975:6981  dstRep */\n      dup2\n        /* \"contracts/CakeToken.sol\":6965:6981  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":6965:6971  srcRep */\n      dup4\n        /* \"contracts/CakeToken.sol\":6965:6981  srcRep != dstRep */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/CakeToken.sol\":6965:6995  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/CakeToken.sol\":6994:6995  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":6985:6991  amount */\n      dup2\n        /* \"contracts/CakeToken.sol\":6985:6995  amount > 0 */\n      gt\n        /* \"contracts/CakeToken.sol\":6965:6995  srcRep != dstRep && amount > 0 */\n    tag_235:\n        /* \"contracts/CakeToken.sol\":6961:7793  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/CakeToken.sol\":7033:7034  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":7015:7035  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":7015:7021  srcRep */\n      dup4\n        /* \"contracts/CakeToken.sol\":7015:7035  srcRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CakeToken.sol\":7011:7390  if (srcRep != address(0)) {... */\n      tag_237\n      jumpi\n        /* \"contracts/CakeToken.sol\":7102:7118  uint32 srcRepNum */\n      0x00\n        /* \"contracts/CakeToken.sol\":7121:7135  numCheckpoints */\n      0x09\n        /* \"contracts/CakeToken.sol\":7121:7143  numCheckpoints[srcRep] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7136:7142  srcRep */\n      dup6\n        /* \"contracts/CakeToken.sol\":7121:7143  numCheckpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":7102:7143  uint32 srcRepNum = numCheckpoints[srcRep] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7161:7178  uint256 srcRepOld */\n      0x00\n        /* \"contracts/CakeToken.sol\":7193:7194  0 */\n      dup1\n        /* \"contracts/CakeToken.sol\":7181:7190  srcRepNum */\n      dup3\n        /* \"contracts/CakeToken.sol\":7181:7194  srcRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":7181:7241  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_238\n      jumpi\n        /* \"contracts/CakeToken.sol\":7240:7241  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":7181:7241  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_239)\n    tag_238:\n        /* \"contracts/CakeToken.sol\":7197:7208  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":7197:7216  checkpoints[srcRep] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7209:7215  srcRep */\n      dup7\n        /* \"contracts/CakeToken.sol\":7197:7216  checkpoints[srcRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":7197:7231  checkpoints[srcRep][srcRepNum - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7229:7230  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":7217:7226  srcRepNum */\n      dup5\n        /* \"contracts/CakeToken.sol\":7217:7230  srcRepNum - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":7197:7231  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":7197:7237  checkpoints[srcRep][srcRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/CakeToken.sol\":7181:7241  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_239:\n        /* \"contracts/CakeToken.sol\":7161:7241  uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7259:7276  uint256 srcRepNew */\n      0x00\n        /* \"contracts/CakeToken.sol\":7279:7300  srcRepOld.sub(amount) */\n      tag_240\n        /* \"contracts/CakeToken.sol\":7293:7299  amount */\n      dup5\n        /* \"contracts/CakeToken.sol\":7279:7288  srcRepOld */\n      dup4\n        /* \"contracts/CakeToken.sol\":7279:7292  srcRepOld.sub */\n      tag_241\n      swap1\n        /* \"contracts/CakeToken.sol\":7279:7300  srcRepOld.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/CakeToken.sol\":7259:7300  uint256 srcRepNew = srcRepOld.sub(amount) */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7318:7375  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_242\n        /* \"contracts/CakeToken.sol\":7335:7341  srcRep */\n      dup7\n        /* \"contracts/CakeToken.sol\":7343:7352  srcRepNum */\n      dup5\n        /* \"contracts/CakeToken.sol\":7354:7363  srcRepOld */\n      dup5\n        /* \"contracts/CakeToken.sol\":7365:7374  srcRepNew */\n      dup5\n        /* \"contracts/CakeToken.sol\":7318:7334  _writeCheckpoint */\n      tag_243\n        /* \"contracts/CakeToken.sol\":7318:7375  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/CakeToken.sol\":7011:7390  if (srcRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_237:\n        /* \"contracts/CakeToken.sol\":7426:7427  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":7408:7428  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":7408:7414  dstRep */\n      dup3\n        /* \"contracts/CakeToken.sol\":7408:7428  dstRep != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CakeToken.sol\":7404:7783  if (dstRep != address(0)) {... */\n      tag_244\n      jumpi\n        /* \"contracts/CakeToken.sol\":7495:7511  uint32 dstRepNum */\n      0x00\n        /* \"contracts/CakeToken.sol\":7514:7528  numCheckpoints */\n      0x09\n        /* \"contracts/CakeToken.sol\":7514:7536  numCheckpoints[dstRep] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7529:7535  dstRep */\n      dup5\n        /* \"contracts/CakeToken.sol\":7514:7536  numCheckpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":7495:7536  uint32 dstRepNum = numCheckpoints[dstRep] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7554:7571  uint256 dstRepOld */\n      0x00\n        /* \"contracts/CakeToken.sol\":7586:7587  0 */\n      dup1\n        /* \"contracts/CakeToken.sol\":7574:7583  dstRepNum */\n      dup3\n        /* \"contracts/CakeToken.sol\":7574:7587  dstRepNum > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":7574:7634  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_245\n      jumpi\n        /* \"contracts/CakeToken.sol\":7633:7634  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":7574:7634  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_246)\n    tag_245:\n        /* \"contracts/CakeToken.sol\":7590:7601  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":7590:7609  checkpoints[dstRep] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7602:7608  dstRep */\n      dup6\n        /* \"contracts/CakeToken.sol\":7590:7609  checkpoints[dstRep] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":7590:7624  checkpoints[dstRep][dstRepNum - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":7622:7623  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":7610:7619  dstRepNum */\n      dup5\n        /* \"contracts/CakeToken.sol\":7610:7623  dstRepNum - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":7590:7624  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":7590:7630  checkpoints[dstRep][dstRepNum - 1].votes */\n      0x01\n      add\n      sload\n        /* \"contracts/CakeToken.sol\":7574:7634  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_246:\n        /* \"contracts/CakeToken.sol\":7554:7634  uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7652:7669  uint256 dstRepNew */\n      0x00\n        /* \"contracts/CakeToken.sol\":7672:7693  dstRepOld.add(amount) */\n      tag_247\n        /* \"contracts/CakeToken.sol\":7686:7692  amount */\n      dup5\n        /* \"contracts/CakeToken.sol\":7672:7681  dstRepOld */\n      dup4\n        /* \"contracts/CakeToken.sol\":7672:7685  dstRepOld.add */\n      tag_140\n      swap1\n        /* \"contracts/CakeToken.sol\":7672:7693  dstRepOld.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/CakeToken.sol\":7652:7693  uint256 dstRepNew = dstRepOld.add(amount) */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":7711:7768  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_248\n        /* \"contracts/CakeToken.sol\":7728:7734  dstRep */\n      dup6\n        /* \"contracts/CakeToken.sol\":7736:7745  dstRepNum */\n      dup5\n        /* \"contracts/CakeToken.sol\":7747:7756  dstRepOld */\n      dup5\n        /* \"contracts/CakeToken.sol\":7758:7767  dstRepNew */\n      dup5\n        /* \"contracts/CakeToken.sol\":7711:7727  _writeCheckpoint */\n      tag_243\n        /* \"contracts/CakeToken.sol\":7711:7768  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/CakeToken.sol\":7404:7783  if (dstRep != address(0)) {... */\n      pop\n      pop\n      pop\n    tag_244:\n        /* \"contracts/CakeToken.sol\":6961:7793  if (srcRep != dstRep && amount > 0) {... */\n    tag_236:\n        /* \"contracts/CakeToken.sol\":6870:7799  function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":6436:6864  function _delegate(address delegator, address delegatee)... */\n    tag_152:\n        /* \"contracts/CakeToken.sol\":6524:6547  address currentDelegate */\n      0x00\n        /* \"contracts/CakeToken.sol\":6550:6560  _delegates */\n      0x07\n        /* \"contracts/CakeToken.sol\":6550:6571  _delegates[delegator] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6561:6570  delegator */\n      dup5\n        /* \"contracts/CakeToken.sol\":6550:6571  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":6524:6571  address currentDelegate = _delegates[delegator] */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":6581:6605  uint256 delegatorBalance */\n      0x00\n        /* \"contracts/CakeToken.sol\":6608:6628  balanceOf(delegator) */\n      tag_250\n        /* \"contracts/CakeToken.sol\":6618:6627  delegator */\n      dup5\n        /* \"contracts/CakeToken.sol\":6608:6617  balanceOf */\n      tag_71\n        /* \"contracts/CakeToken.sol\":6608:6628  balanceOf(delegator) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/CakeToken.sol\":6581:6628  uint256 delegatorBalance = balanceOf(delegator) */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":6707:6716  delegatee */\n      dup3\n        /* \"contracts/CakeToken.sol\":6683:6693  _delegates */\n      0x07\n        /* \"contracts/CakeToken.sol\":6683:6704  _delegates[delegator] */\n      0x00\n        /* \"contracts/CakeToken.sol\":6694:6703  delegator */\n      dup7\n        /* \"contracts/CakeToken.sol\":6683:6704  _delegates[delegator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CakeToken.sol\":6683:6716  _delegates[delegator] = delegatee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CakeToken.sol\":6776:6785  delegatee */\n      dup3\n        /* \"contracts/CakeToken.sol\":6732:6786  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":6759:6774  currentDelegate */\n      dup3\n        /* \"contracts/CakeToken.sol\":6732:6786  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CakeToken.sol\":6748:6757  delegator */\n      dup6\n        /* \"contracts/CakeToken.sol\":6732:6786  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/CakeToken.sol\":6797:6857  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_251\n        /* \"contracts/CakeToken.sol\":6812:6827  currentDelegate */\n      dup3\n        /* \"contracts/CakeToken.sol\":6829:6838  delegatee */\n      dup5\n        /* \"contracts/CakeToken.sol\":6840:6856  delegatorBalance */\n      dup4\n        /* \"contracts/CakeToken.sol\":6797:6811  _moveDelegates */\n      tag_148\n        /* \"contracts/CakeToken.sol\":6797:6857  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/CakeToken.sol\":6436:6864  function _delegate(address delegator, address delegatee)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":8661:8810  function getChainId() internal pure returns (uint) {... */\n    tag_199:\n        /* \"contracts/CakeToken.sol\":8706:8710  uint */\n      0x00\n        /* \"contracts/CakeToken.sol\":8722:8737  uint256 chainId */\n      dup1\n        /* \"contracts/CakeToken.sol\":8769:8778  chainid() */\n      chainid\n        /* \"contracts/CakeToken.sol\":8758:8778  chainId := chainid() */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":8796:8803  chainId */\n      dup1\n        /* \"contracts/CakeToken.sol\":8789:8803  return chainId */\n      swap2\n      pop\n      pop\n        /* \"contracts/CakeToken.sol\":8661:8810  function getChainId() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2197:2422  function _transferOwnership(address newOwner) internal {... */\n    tag_212:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2290:2291  0 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2292  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2278  newOwner */\n      dup2\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2270:2292  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2262:2335  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2379:2387  newOwner */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2350:2388  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2350:2388  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2407:2415  newOwner */\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2398:2404  _owner */\n      0x00\n      dup1\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2398:2415  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":2197:2422  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1322:1456  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_241:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1380:1387  uint256 */\n      0x00\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1406:1449  sub(a, b, 'SafeMath: subtraction overflow') */\n      tag_256\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1410:1411  a */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1413:1414  b */\n      dup4\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1406:1449  sub(a, b, 'SafeMath: subtraction overflow') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1406:1409  sub */\n      tag_133\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1406:1449  sub(a, b, 'SafeMath: subtraction overflow') */\n      jump\t// in\n    tag_256:\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1399:1449  return sub(a, b, 'SafeMath: subtraction overflow') */\n      swap1\n      pop\n        /* \"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":1322:1456  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":7805:8491  function _writeCheckpoint(... */\n    tag_243:\n        /* \"contracts/CakeToken.sol\":7976:7994  uint32 blockNumber */\n      0x00\n        /* \"contracts/CakeToken.sol\":7997:8073  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_258\n        /* \"contracts/CakeToken.sol\":8004:8016  block.number */\n      number\n        /* \"contracts/CakeToken.sol\":7997:8073  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      data_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f\n      0x34\n      swap2\n      codecopy\n        /* \"contracts/CakeToken.sol\":7997:8003  safe32 */\n      tag_259\n        /* \"contracts/CakeToken.sol\":7997:8073  safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_258:\n        /* \"contracts/CakeToken.sol\":7976:8073  uint32 blockNumber = safe32(block.number, \"CAKE::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":8103:8104  0 */\n      0x00\n        /* \"contracts/CakeToken.sol\":8088:8100  nCheckpoints */\n      dup5\n        /* \"contracts/CakeToken.sol\":8088:8104  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/CakeToken.sol\":8088:8173  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n        /* \"contracts/CakeToken.sol\":8162:8173  blockNumber */\n      dup1\n        /* \"contracts/CakeToken.sol\":8108:8173  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":8108:8119  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":8108:8130  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8120:8129  delegatee */\n      dup8\n        /* \"contracts/CakeToken.sol\":8108:8130  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8108:8148  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8146:8147  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":8131:8143  nCheckpoints */\n      dup8\n        /* \"contracts/CakeToken.sol\":8131:8147  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":8108:8148  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8108:8158  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/CakeToken.sol\":8108:8173  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      and\n      eq\n        /* \"contracts/CakeToken.sol\":8088:8173  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_260:\n        /* \"contracts/CakeToken.sol\":8084:8418  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/CakeToken.sol\":8238:8246  newVotes */\n      dup2\n        /* \"contracts/CakeToken.sol\":8189:8200  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":8189:8211  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8201:8210  delegatee */\n      dup8\n        /* \"contracts/CakeToken.sol\":8189:8211  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8189:8229  checkpoints[delegatee][nCheckpoints - 1] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8227:8228  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":8212:8224  nCheckpoints */\n      dup8\n        /* \"contracts/CakeToken.sol\":8212:8228  nCheckpoints - 1 */\n      sub\n        /* \"contracts/CakeToken.sol\":8189:8229  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8189:8235  checkpoints[delegatee][nCheckpoints - 1].votes */\n      0x01\n      add\n        /* \"contracts/CakeToken.sol\":8189:8246  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CakeToken.sol\":8084:8418  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_262)\n    tag_261:\n        /* \"contracts/CakeToken.sol\":8316:8349  Checkpoint(blockNumber, newVotes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CakeToken.sol\":8327:8338  blockNumber */\n      dup3\n        /* \"contracts/CakeToken.sol\":8316:8349  Checkpoint(blockNumber, newVotes) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CakeToken.sol\":8340:8348  newVotes */\n      dup4\n        /* \"contracts/CakeToken.sol\":8316:8349  Checkpoint(blockNumber, newVotes) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/CakeToken.sol\":8277:8288  checkpoints */\n      0x08\n        /* \"contracts/CakeToken.sol\":8277:8299  checkpoints[delegatee] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8289:8298  delegatee */\n      dup8\n        /* \"contracts/CakeToken.sol\":8277:8299  checkpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8277:8313  checkpoints[delegatee][nCheckpoints] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8300:8312  nCheckpoints */\n      dup7\n        /* \"contracts/CakeToken.sol\":8277:8313  checkpoints[delegatee][nCheckpoints] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CakeToken.sol\":8277:8349  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/CakeToken.sol\":8406:8407  1 */\n      0x01\n        /* \"contracts/CakeToken.sol\":8391:8403  nCheckpoints */\n      dup5\n        /* \"contracts/CakeToken.sol\":8391:8407  nCheckpoints + 1 */\n      add\n        /* \"contracts/CakeToken.sol\":8363:8377  numCheckpoints */\n      0x09\n        /* \"contracts/CakeToken.sol\":8363:8388  numCheckpoints[delegatee] */\n      0x00\n        /* \"contracts/CakeToken.sol\":8378:8387  delegatee */\n      dup8\n        /* \"contracts/CakeToken.sol\":8363:8388  numCheckpoints[delegatee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CakeToken.sol\":8363:8407  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CakeToken.sol\":8084:8418  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_262:\n        /* \"contracts/CakeToken.sol\":8454:8463  delegatee */\n      dup5\n        /* \"contracts/CakeToken.sol\":8433:8484  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n        /* \"contracts/CakeToken.sol\":8465:8473  oldVotes */\n      dup5\n        /* \"contracts/CakeToken.sol\":8475:8483  newVotes */\n      dup5\n        /* \"contracts/CakeToken.sol\":8433:8484  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CakeToken.sol\":7805:8491  function _writeCheckpoint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CakeToken.sol\":8497:8655  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_259:\n        /* \"contracts/CakeToken.sol\":8572:8578  uint32 */\n      0x00\n        /* \"contracts/CakeToken.sol\":8602:8607  2**32 */\n      0x0100000000\n        /* \"contracts/CakeToken.sol\":8598:8599  n */\n      dup4\n        /* \"contracts/CakeToken.sol\":8598:8607  n < 2**32 */\n      lt\n        /* \"contracts/CakeToken.sol\":8609:8621  errorMessage */\n      dup3\n        /* \"contracts/CakeToken.sol\":8590:8622  require(n < 2**32, errorMessage) */\n      swap1\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_265:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_267\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_265)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_268\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_268:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n      pop\n        /* \"contracts/CakeToken.sol\":8646:8647  n */\n      dup3\n        /* \"contracts/CakeToken.sol\":8632:8648  return uint32(n) */\n      swap1\n      pop\n        /* \"contracts/CakeToken.sol\":8497:8655  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_167:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb 43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa 43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265\n    data_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f 43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474 43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f 43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220750b7e923cec528bb6930b7c3de1bc604cca543b242a76573b9dc122dc46491664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280601181526020017f50616e63616b655377617020546f6b656e0000000000000000000000000000008152506040518060400160405280600481526020017f43616b65000000000000000000000000000000000000000000000000000000008152506000620000906200018460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508160049080519060200190620001469291906200018c565b5080600590805190602001906200015f9291906200018c565b506012600660006101000a81548160ff021916908360ff160217905550505062000232565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001cf57805160ff191683800117855562000200565b8280016001018555821562000200579182015b82811115620001ff578251825591602001919060010190620001e2565b5b5090506200020f919062000213565b5090565b5b808211156200022e57600081600090555060010162000214565b5090565b61301c80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461091c578063e7a324dc14610994578063f1127ed8146109b2578063f2fde38b14610a27576101a9565b8063a9059cbb146107e7578063b4b5ea571461084b578063c3cda520146108a3576101a9565b80638da5cb5b116100d35780638da5cb5b1461068857806395d89b41146106bc578063a0712d681461073f578063a457c2d714610783576101a9565b8063782d6fe11461059a5780637ecebe00146105fc578063893d20e814610654576101a9565b806339509351116101665780635c19a95c116101405780635c19a95c146104965780636fcfff45146104da57806370a0823114610538578063715018a614610590576101a9565b8063395093511461037657806340c10f19146103da578063587cde1e14610428576101a9565b806306fdde03146101ae578063095ea7b31461023157806318160ddd1461029557806320606b70146102b357806323b872dd146102d1578063313ce56714610355575b600080fd5b6101b6610a6b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f65780820151818401526020810190506101db565b50505050905090810190601f1680156102235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561024757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b0d565b60405180821515815260200191505060405180910390f35b61029d610b2b565b6040518082815260200191505060405180910390f35b6102bb610b35565b6040518082815260200191505060405180910390f35b61033d600480360360608110156102e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b59565b60405180821515815260200191505060405180910390f35b61035d610c32565b604051808260ff16815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c49565b60405180821515815260200191505060405180910390f35b610426600480360360408110156103f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cfc565b005b61046a6004803603602081101561043e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e3d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d8600480360360208110156104ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea6565b005b61051c600480360360208110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb3565b604051808263ffffffff16815260200191505060405180910390f35b61057a6004803603602081101561054e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed6565b6040518082815260200191505060405180910390f35b610598610f1f565b005b6105e6600480360360408110156105b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110a5565b6040518082815260200191505060405180910390f35b61063e6004803603602081101561061257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611466565b6040518082815260200191505060405180910390f35b61065c61147e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61069061148d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106c46114b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107045780820151818401526020810190506106e9565b50505050905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61076b6004803603602081101561075557600080fd5b8101908080359060200190929190505050611558565b60405180821515815260200191505060405180910390f35b6107cf6004803603604081101561079957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061163c565b60405180821515815260200191505060405180910390f35b610833600480360360408110156107fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611709565b60405180821515815260200191505060405180910390f35b61088d6004803603602081101561086157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611727565b6040518082815260200191505060405180910390f35b61091a600480360360c08110156108b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506117fd565b005b61097e6004803603604081101561093257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b61565b6040518082815260200191505060405180910390f35b61099c611be8565b6040518082815260200191505060405180910390f35b610a04600480360360408110156109c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611c0c565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b610a6960048036036020811015610a3d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b005b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b035780601f10610ad857610100808354040283529160200191610b03565b820191906000526020600020905b815481529060010190602001808311610ae657829003601f168201915b5050505050905090565b6000610b21610b1a611d21565b8484611d29565b6001905092915050565b6000600354905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610b66848484611f20565b610c2784610b72611d21565b610c2285604051806060016040528060288152602001612e8c60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bd8611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b611d29565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610cf2610c56611d21565b84610ced8560026000610c67611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b611d29565b6001905092915050565b610d04611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610dce8282612322565b610e396000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836124df565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610eb0338261277c565b50565b60096020528060005260406000206000915054906101000a900463ffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f27611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60004382106110ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612f0e6027913960400191505060405180910390fd5b6000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16141561116c576000915050611460565b82600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161161125657600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060010154915050611460565b82600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156112d7576000915050611460565b6000806001830390505b8163ffffffff168163ffffffff1611156113fa576000600283830363ffffffff168161130957fe5b0482039050611316612dd6565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff1614156113d257806020015195505050505050611460565b86816000015163ffffffff1610156113ec578193506113f3565b6001820392505b50506112e1565b600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b600a6020528060005260406000206000915090505481565b600061148861148d565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561154e5780601f106115235761010080835404028352916020019161154e565b820191906000526020600020905b81548152906001019060200180831161153157829003601f168201915b5050505050905090565b6000611562611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61163361162d611d21565b83612322565b60019050919050565b60006116ff611649611d21565b846116fa85604051806060016040528060258152602001612fa06025913960026000611673611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b611d29565b6001905092915050565b600061171d611716611d21565b8484611f20565b6001905092915050565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116117915760006117f5565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866611828610a6b565b805190602001206118376128ed565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156119bb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612eb46026913960400191505060405180910390fd5b600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612f5b6022913960400191505060405180910390fd5b87421115611b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e666026913960400191505060405180910390fd5b611b55818b61277c565b50505050505050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6008602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611c55611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611d1e816128fa565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611daf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e1c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612fc56022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612df76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612f7d6023913960400191505060405180910390fd5b61209881604051806060016040528060268152602001612f3560269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612287576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561224c578082015181840152602081019050612231565b50505050905090810190601f1680156122795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6123da8160035461229a90919063ffffffff16565b60038190555061243281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561251b5750600081115b1561277757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461264b576000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125be576000612622565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006126398483612a3d90919063ffffffff16565b905061264786848484612a87565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612776576000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126e957600061274d565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612764848361229a90919063ffffffff16565b905061277285848484612a87565b5050505b5b505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006127eb84610ed6565b905082600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46128e78284836124df565b50505050565b6000804690508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e406026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612a7f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121da565b905092915050565b6000612aab43604051806060016040528060348152602001612eda60349139612d1b565b905060008463ffffffff16118015612b4057508063ffffffff16600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612bb15781600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612cbe565b60405180604001604052808263ffffffff16815260200183815250600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612dcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d91578082015181840152602081019050612d76565b50505050905090810190601f168015612dbe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343414b453a3a64656c656761746542795369673a207369676e6174757265206578706972656442455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636543414b453a3a64656c656761746542795369673a20696e76616c6964207369676e617475726543414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747343414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656442455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220750b7e923cec528bb6930b7c3de1bc604cca543b242a76573b9dc122dc46491664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B655377617020546F6B656E000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616B6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 PUSH3 0x90 PUSH3 0x184 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x146 SWAP3 SWAP2 SWAP1 PUSH3 0x18C JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15F SWAP3 SWAP2 SWAP1 PUSH3 0x18C JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x232 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1CF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x200 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1FF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x20F SWAP2 SWAP1 PUSH3 0x213 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x22E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x214 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x301C DUP1 PUSH3 0x242 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x994 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA27 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x8A3 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x783 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x654 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x590 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x428 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x223 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH2 0xF1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x704 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x163C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x833 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99C PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA04 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C4D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 PUSH2 0xB1A PUSH2 0x1D21 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0xC27 DUP5 PUSH2 0xB72 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0xC22 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E8C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xBD8 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF2 PUSH2 0xC56 PUSH2 0x1D21 JUMP JUMPDEST DUP5 PUSH2 0xCED DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xC67 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD04 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCE DUP3 DUP3 PUSH2 0x2322 JUMP JUMPDEST PUSH2 0xE39 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x24DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB0 CALLER DUP3 PUSH2 0x277C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF27 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0E PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x1256 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x1309 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x1316 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x13D2 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1460 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x13EC JUMPI DUP2 SWAP4 POP PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1488 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x154E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1523 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x154E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1562 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1633 PUSH2 0x162D PUSH2 0x1D21 JUMP JUMPDEST DUP4 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FF PUSH2 0x1649 PUSH2 0x1D21 JUMP JUMPDEST DUP5 PUSH2 0x16FA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FA0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x1673 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171D PUSH2 0x1716 PUSH2 0x1D21 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1791 JUMPI PUSH1 0x0 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x1828 PUSH2 0xA6B JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1837 PUSH2 0x28ED JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EB4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F5B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1B4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E66 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B55 DUP2 DUP12 PUSH2 0x277C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C55 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1E DUP2 PUSH2 0x28FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E1C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FC5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DF7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x202C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F7D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2098 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F35 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x212D DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x224C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2231 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2279 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23DA DUP2 PUSH1 0x3 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2432 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x251B JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264B JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x25BE JUMPI PUSH1 0x0 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2639 DUP5 DUP4 PUSH2 0x2A3D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2647 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2A87 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2776 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x26E9 JUMPI PUSH1 0x0 PUSH2 0x274D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2764 DUP5 DUP4 PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2772 DUP6 DUP5 DUP5 DUP5 PUSH2 0x2A87 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x27EB DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x28E7 DUP3 DUP5 DUP4 PUSH2 0x24DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E40 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2EDA PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2B40 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2BB1 JUMPI DUP2 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2DCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D76 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2DBE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737343414B453A3A64656C65676174654279 MSTORE8 PUSH10 0x673A207369676E617475 PUSH19 0x65206578706972656442455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x65647320616C PUSH13 0x6F77616E636543414B453A3A64 PUSH6 0x6C6567617465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964207369676E617475726543414B45 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636543414B453A3A64656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220750B7E923CEC MSTORE DUP12 0xB6 SWAP4 SIGNEXTEND PUSH29 0x3DE1BC604CCA543B242A76573B9DC122DC46491664736F6C634300060C STOP CALLER ",
							"sourceMap": "128:8684:6:-:0;;;;;;;;;;;;;2055:140:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:17:1;899:12;:10;;;:12;;:::i;:::-;879:32;;930:9;921:6;;:18;;;;;;;;;;;;;;;;;;987:9;954:43;;983:1;954:43;;;;;;;;;;;;846:158;2134:4:3;2126:5;:12;;;;;;;;;;;;:::i;:::-;;2158:6;2148:7;:16;;;;;;;;;;;;:::i;:::-;;2186:2;2174:9;;:14;;;;;;;;;;;;;;;;;;2055:140;;128:8684:6;;780:96:0;825:15;859:10;852:17;;780:96;:::o;128:8684:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e1461091c578063e7a324dc14610994578063f1127ed8146109b2578063f2fde38b14610a27576101a9565b8063a9059cbb146107e7578063b4b5ea571461084b578063c3cda520146108a3576101a9565b80638da5cb5b116100d35780638da5cb5b1461068857806395d89b41146106bc578063a0712d681461073f578063a457c2d714610783576101a9565b8063782d6fe11461059a5780637ecebe00146105fc578063893d20e814610654576101a9565b806339509351116101665780635c19a95c116101405780635c19a95c146104965780636fcfff45146104da57806370a0823114610538578063715018a614610590576101a9565b8063395093511461037657806340c10f19146103da578063587cde1e14610428576101a9565b806306fdde03146101ae578063095ea7b31461023157806318160ddd1461029557806320606b70146102b357806323b872dd146102d1578063313ce56714610355575b600080fd5b6101b6610a6b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f65780820151818401526020810190506101db565b50505050905090810190601f1680156102235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561024757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b0d565b60405180821515815260200191505060405180910390f35b61029d610b2b565b6040518082815260200191505060405180910390f35b6102bb610b35565b6040518082815260200191505060405180910390f35b61033d600480360360608110156102e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b59565b60405180821515815260200191505060405180910390f35b61035d610c32565b604051808260ff16815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c49565b60405180821515815260200191505060405180910390f35b610426600480360360408110156103f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cfc565b005b61046a6004803603602081101561043e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e3d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d8600480360360208110156104ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea6565b005b61051c600480360360208110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb3565b604051808263ffffffff16815260200191505060405180910390f35b61057a6004803603602081101561054e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed6565b6040518082815260200191505060405180910390f35b610598610f1f565b005b6105e6600480360360408110156105b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110a5565b6040518082815260200191505060405180910390f35b61063e6004803603602081101561061257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611466565b6040518082815260200191505060405180910390f35b61065c61147e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61069061148d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106c46114b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107045780820151818401526020810190506106e9565b50505050905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61076b6004803603602081101561075557600080fd5b8101908080359060200190929190505050611558565b60405180821515815260200191505060405180910390f35b6107cf6004803603604081101561079957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061163c565b60405180821515815260200191505060405180910390f35b610833600480360360408110156107fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611709565b60405180821515815260200191505060405180910390f35b61088d6004803603602081101561086157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611727565b6040518082815260200191505060405180910390f35b61091a600480360360c08110156108b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506117fd565b005b61097e6004803603604081101561093257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b61565b6040518082815260200191505060405180910390f35b61099c611be8565b6040518082815260200191505060405180910390f35b610a04600480360360408110156109c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050611c0c565b604051808363ffffffff1681526020018281526020019250505060405180910390f35b610a6960048036036020811015610a3d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4d565b005b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b035780601f10610ad857610100808354040283529160200191610b03565b820191906000526020600020905b815481529060010190602001808311610ae657829003601f168201915b5050505050905090565b6000610b21610b1a611d21565b8484611d29565b6001905092915050565b6000600354905090565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000610b66848484611f20565b610c2784610b72611d21565b610c2285604051806060016040528060288152602001612e8c60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bd8611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b611d29565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610cf2610c56611d21565b84610ced8560026000610c67611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b611d29565b6001905092915050565b610d04611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610dce8282612322565b610e396000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836124df565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610eb0338261277c565b50565b60096020528060005260406000206000915054906101000a900463ffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f27611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60004382106110ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612f0e6027913960400191505060405180910390fd5b6000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16141561116c576000915050611460565b82600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161161125657600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff16815260200190815260200160002060010154915050611460565b82600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008063ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611156112d7576000915050611460565b6000806001830390505b8163ffffffff168163ffffffff1611156113fa576000600283830363ffffffff168161130957fe5b0482039050611316612dd6565b600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481525050905086816000015163ffffffff1614156113d257806020015195505050505050611460565b86816000015163ffffffff1610156113ec578193506113f3565b6001820392505b50506112e1565b600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000206001015493505050505b92915050565b600a6020528060005260406000206000915090505481565b600061148861148d565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561154e5780601f106115235761010080835404028352916020019161154e565b820191906000526020600020905b81548152906001019060200180831161153157829003601f168201915b5050505050905090565b6000611562611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61163361162d611d21565b83612322565b60019050919050565b60006116ff611649611d21565b846116fa85604051806060016040528060258152602001612fa06025913960026000611673611d21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b611d29565b6001905092915050565b600061171d611716611d21565b8484611f20565b6001905092915050565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060008163ffffffff16116117915760006117f5565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001830363ffffffff1663ffffffff168152602001908152602001600020600101545b915050919050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866611828610a6b565b805190602001206118376128ed565b30604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120905060007fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf888888604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090506000828260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156119bb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612eb46026913960400191505060405180910390fd5b600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558914611af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612f5b6022913960400191505060405180910390fd5b87421115611b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e666026913960400191505060405180910390fd5b611b55818b61277c565b50505050505050505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6008602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900463ffffffff16908060010154905082565b611c55611d21565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611d1e816128fa565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611daf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e1c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612fc56022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612df76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561202c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612f7d6023913960400191505060405180910390fd5b61209881604051806060016040528060268152602001612f3560269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121da9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061212d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612287576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561224c578082015181840152602081019050612231565b50505050905090810190601f1680156122795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015612318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6123da8160035461229a90919063ffffffff16565b60038190555061243281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461229a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561251b5750600081115b1561277757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461264b576000600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116125be576000612622565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b905060006126398483612a3d90919063ffffffff16565b905061264786848484612a87565b5050505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612776576000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506000808263ffffffff16116126e957600061274d565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001840363ffffffff1663ffffffff168152602001908152602001600020600101545b90506000612764848361229a90919063ffffffff16565b905061277285848484612a87565b5050505b5b505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006127eb84610ed6565b905082600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46128e78284836124df565b50505050565b6000804690508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e406026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612a7f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506121da565b905092915050565b6000612aab43604051806060016040528060348152602001612eda60349139612d1b565b905060008463ffffffff16118015612b4057508063ffffffff16600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16145b15612bb15781600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001870363ffffffff1663ffffffff16815260200190815260200160002060010181905550612cbe565b60405180604001604052808263ffffffff16815260200183815250600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff1602179055506020820151816001015590505060018401600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248484604051808381526020018281526020019250505060405180910390a25050505050565b600064010000000083108290612dcc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d91578082015181840152602081019050612d76565b50505050905090810190601f168015612dbe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082905092915050565b6040518060400160405280600063ffffffff16815260200160008152509056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343414b453a3a64656c656761746542795369673a207369676e6174757265206578706972656442455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636543414b453a3a64656c656761746542795369673a20696e76616c6964207369676e617475726543414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747343414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e656442455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636543414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220750b7e923cec528bb6930b7c3de1bc604cca543b242a76573b9dc122dc46491664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x994 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA27 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7E7 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x84B JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x8A3 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x783 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x654 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x590 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x428 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x355 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x223 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x598 PUSH2 0xF1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH2 0x147E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x690 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C4 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x704 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x163C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x833 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99C PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA04 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C4D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 PUSH2 0xB1A PUSH2 0x1D21 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 DUP5 DUP5 DUP5 PUSH2 0x1F20 JUMP JUMPDEST PUSH2 0xC27 DUP5 PUSH2 0xB72 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0xC22 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E8C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xBD8 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF2 PUSH2 0xC56 PUSH2 0x1D21 JUMP JUMPDEST DUP5 PUSH2 0xCED DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xC67 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD04 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCE DUP3 DUP3 PUSH2 0x2322 JUMP JUMPDEST PUSH2 0xE39 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x24DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB0 CALLER DUP3 PUSH2 0x277C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF27 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0E PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT PUSH2 0x1256 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 SUB PUSH4 0xFFFFFFFF AND DUP2 PUSH2 0x1309 JUMPI INVALID JUMPDEST DIV DUP3 SUB SWAP1 POP PUSH2 0x1316 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x13D2 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP6 POP POP POP POP POP POP PUSH2 0x1460 JUMP JUMPDEST DUP7 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x13EC JUMPI DUP2 SWAP4 POP PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1488 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x154E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1523 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x154E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1562 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1633 PUSH2 0x162D PUSH2 0x1D21 JUMP JUMPDEST DUP4 PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FF PUSH2 0x1649 PUSH2 0x1D21 JUMP JUMPDEST DUP5 PUSH2 0x16FA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FA0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x1673 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171D PUSH2 0x1716 PUSH2 0x1D21 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1791 JUMPI PUSH1 0x0 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP4 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x1828 PUSH2 0xA6B JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1837 PUSH2 0x28ED JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EB4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0x1AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F5B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1B4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E66 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B55 DUP2 DUP12 PUSH2 0x277C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C55 PUSH2 0x1D21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1E DUP2 PUSH2 0x28FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E1C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FC5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DF7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x202C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F7D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2098 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F35 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x212D DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x224C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2231 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2279 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23DA DUP2 PUSH1 0x3 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x2432 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x251B JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264B JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x25BE JUMPI PUSH1 0x0 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2639 DUP5 DUP4 PUSH2 0x2A3D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2647 DUP7 DUP5 DUP5 DUP5 PUSH2 0x2A87 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2776 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT PUSH2 0x26E9 JUMPI PUSH1 0x0 PUSH2 0x274D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2764 DUP5 DUP4 PUSH2 0x229A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2772 DUP6 DUP5 DUP5 DUP5 PUSH2 0x2A87 JUMP JUMPDEST POP POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x27EB DUP5 PUSH2 0xED6 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x28E7 DUP3 DUP5 DUP4 PUSH2 0x24DF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E40 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x21DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAB NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2EDA PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x2D1B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2B40 JUMPI POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2BB1 JUMPI DUP2 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x1 DUP5 ADD PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP4 LT DUP3 SWAP1 PUSH2 0x2DCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D91 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D76 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2DBE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737343414B453A3A64656C65676174654279 MSTORE8 PUSH10 0x673A207369676E617475 PUSH19 0x65206578706972656442455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x65647320616C PUSH13 0x6F77616E636543414B453A3A64 PUSH6 0x6C6567617465 TIMESTAMP PUSH26 0x5369673A20696E76616C6964207369676E617475726543414B45 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 NUMBER COINBASE 0x4B GASLIMIT GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636543414B453A3A64656C656761 PUSH21 0x6542795369673A20696E76616C6964206E6F6E6365 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220750B7E923CEC MSTORE DUP12 0xB6 SWAP4 SIGNEXTEND PUSH29 0x3DE1BC604CCA543B242A76573B9DC122DC46491664736F6C634300060C STOP CALLER ",
							"sourceMap": "128:8684:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:90:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3836:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2863:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1441:122:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4451:385:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2560:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5230:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;288:159:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2406:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2687:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1322:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3018:117:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1703:137:1;;;:::i;:::-;;5213:1217:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1849:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2258:92:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1080:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2710:94:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6435:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5923:304;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3337:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4543:248:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3212:1137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3558:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1654:117:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1186:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1989:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2408:90:3;2454:13;2486:5;2479:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:90;:::o;3836:158::-;3911:4;3927:39;3936:12;:10;:12::i;:::-;3950:7;3959:6;3927:8;:39::i;:::-;3983:4;3976:11;;3836:158;;;;:::o;2863:98::-;2916:7;2942:12;;2935:19;;2863:98;:::o;1441:122:6:-;1483:80;1441:122;:::o;4451:385:3:-;4579:4;4595:36;4605:6;4613:9;4624:6;4595:9;:36::i;:::-;4641:167;4663:6;4683:12;:10;:12::i;:::-;4709:89;4747:6;4709:89;;;;;;;;;;;;;;;;;:11;:19;4721:6;4709:19;;;;;;;;;;;;;;;:33;4729:12;:10;:12::i;:::-;4709:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;4641:8;:167::i;:::-;4825:4;4818:11;;4451:385;;;;;:::o;2560:90::-;2610:5;2634:9;;;;;;;;;;;2627:16;;2560:90;:::o;5230:207::-;5310:4;5326:83;5335:12;:10;:12::i;:::-;5349:7;5358:50;5397:10;5358:11;:25;5370:12;:10;:12::i;:::-;5358:25;;;;;;;;;;;;;;;:34;5384:7;5358:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5326:8;:83::i;:::-;5426:4;5419:11;;5230:207;;;;:::o;288:159:6:-;1294:12:1;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:19:6::1;365:3;370:7;359:5;:19::i;:::-;388:52;411:1;415:10;:15;426:3;415:15;;;;;;;;;;;;;;;;;;;;;;;;;432:7;388:14;:52::i;:::-;288:159:::0;;:::o;2406:143::-;2491:7;2521:10;:21;2532:9;2521:21;;;;;;;;;;;;;;;;;;;;;;;;;2514:28;;2406:143;;;:::o;2687:102::-;2750:32;2760:10;2772:9;2750;:32::i;:::-;2687:102;:::o;1322:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;3018:117:3:-;3084:7;3110:9;:18;3120:7;3110:18;;;;;;;;;;;;;;;;3103:25;;3018:117;;;:::o;1703:137:1:-;1294:12;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:1:::1;1764:40;;1785:6;::::0;::::1;;;;;;;;1764:40;;;;;;;;;;;;1831:1;1814:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1703:137::o:0;5213:1217:6:-;5318:7;5363:12;5349:11;:26;5341:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5430:19;5452:14;:23;5467:7;5452:23;;;;;;;;;;;;;;;;;;;;;;;;;5430:45;;5505:1;5489:12;:17;;;5485:56;;;5529:1;5522:8;;;;;5485:56;5650:11;5598;:20;5610:7;5598:20;;;;;;;;;;;;;;;:38;5634:1;5619:12;:16;5598:38;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:63;;;5594:145;;5684:11;:20;5696:7;5684:20;;;;;;;;;;;;;;;:38;5720:1;5705:12;:16;5684:38;;;;;;;;;;;;;;;:44;;;5677:51;;;;;5594:145;5833:11;5797;:20;5809:7;5797:20;;;;;;;;;;;;;;;:23;5818:1;5797:23;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;5793:86;;;5867:1;5860:8;;;;;5793:86;5889:12;5915;5945:1;5930:12;:16;5915:31;;5956:418;5971:5;5963:13;;:5;:13;;;5956:418;;;5992:13;6034:1;6025:5;6017;:13;6016:19;;;;;;;;6008:5;:27;5992:43;;6076:20;;:::i;:::-;6099:11;:20;6111:7;6099:20;;;;;;;;;;;;;;;:28;6120:6;6099:28;;;;;;;;;;;;;;;6076:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6161:11;6145:2;:12;;;:27;;;6141:223;;;6199:2;:8;;;6192:15;;;;;;;;;6141:223;6247:11;6232:2;:12;;;:26;;;6228:136;;;6286:6;6278:14;;6228:136;;;6348:1;6339:6;:10;6331:18;;6228:136;5956:418;;;;;6390:11;:20;6402:7;6390:20;;;;;;;;;;;;;;;:27;6411:5;6390:27;;;;;;;;;;;;;;;:33;;;6383:40;;;;;5213:1217;;;;;:::o;1849:39::-;;;;;;;;;;;;;;;;;:::o;2258:92:3:-;2310:7;2336;:5;:7::i;:::-;2329:14;;2258:92;:::o;1080:77:1:-;1118:7;1144:6;;;;;;;;;;;1137:13;;1080:77;:::o;2710:94:3:-;2758:13;2790:7;2783:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:94;:::o;6435:127::-;6491:4;1294:12:1;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6507:27:3::1;6513:12;:10;:12::i;:::-;6527:6;6507:5;:27::i;:::-;6551:4;6544:11;;6435:127:::0;;;:::o;5923:304::-;6008:4;6024:175;6046:12;:10;:12::i;:::-;6072:7;6093:96;6132:15;6093:96;;;;;;;;;;;;;;;;;:11;:25;6105:12;:10;:12::i;:::-;6093:25;;;;;;;;;;;;;;;:34;6119:7;6093:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6024:8;:175::i;:::-;6216:4;6209:11;;5923:304;;;;:::o;3337:164::-;3415:4;3431:42;3441:12;:10;:12::i;:::-;3455:9;3466:6;3431:9;:42::i;:::-;3490:4;3483:11;;3337:164;;;;:::o;4543:248:6:-;4632:7;4655:19;4677:14;:23;4692:7;4677:23;;;;;;;;;;;;;;;;;;;;;;;;;4655:45;;4732:1;4717:12;:16;;;:67;;4783:1;4717:67;;;4736:11;:20;4748:7;4736:20;;;;;;;;;;;;;;;:38;4772:1;4757:12;:16;4736:38;;;;;;;;;;;;;;;:44;;;4717:67;4710:74;;;4543:248;;;:::o;3212:1137::-;3395:23;1483:80;3521:6;:4;:6::i;:::-;3505:24;;;;;;3547:12;:10;:12::i;:::-;3585:4;3444:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3421:193;;;;;;3395:219;;3625:18;1700:71;3734:9;3761:5;3784:6;3669:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3646:168;;;;;;3625:189;;3825:14;3927:15;3960:10;3865:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3842:152;;;;;;3825:169;;4005:17;4025:26;4035:6;4043:1;4046;4049;4025:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:46;;4090:1;4069:23;;:9;:23;;;;4061:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4162:6;:17;4169:9;4162:17;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;4153:5;:28;4145:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4245:6;4238:3;:13;;4230:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4311:31;4321:9;4332;4311;:31::i;:::-;4304:38;;;;3212:1137;;;;;;:::o;3558:141:3:-;3639:7;3665:11;:18;3677:5;3665:18;;;;;;;;;;;;;;;:27;3684:7;3665:27;;;;;;;;;;;;;;;;3658:34;;3558:141;;;;:::o;1654:117:6:-;1700:71;1654:117;:::o;1186:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1989:107:1:-;1294:12;:10;:12::i;:::-;1284:22;;:6;;;;;;;;;;:22;;;1276:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:28:::1;2080:8;2061:18;:28::i;:::-;1989:107:::0;:::o;780:96:0:-;825:15;859:10;852:17;;780:96;:::o;9188:362:3:-;9328:1;9311:19;;:5;:19;;;;9303:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9408:1;9389:21;;:7;:21;;;;9381:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9490:6;9460:11;:18;9472:5;9460:18;;;;;;;;;;;;;;;:27;9479:7;9460:27;;;;;;;;;;;;;;;:36;;;;9527:7;9511:32;;9520:5;9511:32;;;9536:6;9511:32;;;;;;;;;;;;;;;;;;9188:362;;;:::o;7036:494::-;7181:1;7163:20;;:6;:20;;;;7155:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7264:1;7243:23;;:9;:23;;;;7235:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7337;7359:6;7337:71;;;;;;;;;;;;;;;;;:9;:17;7347:6;7337:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7317:9;:17;7327:6;7317:17;;;;;;;;;;;;;;;:91;;;;7441:32;7466:6;7441:9;:20;7451:9;7441:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7418:9;:20;7428:9;7418:20;;;;;;;;;;;;;;;:55;;;;7505:9;7488:35;;7497:6;7488:35;;;7516:6;7488:35;;;;;;;;;;;;;;;;;;7036:494;;;:::o;1747:217:2:-;1863:7;1895:1;1890;:6;;1898:12;1882:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:9;1937:1;1933;:5;1921:17;;1956:1;1949:8;;;1747:217;;;;;:::o;875:176::-;933:7;952:9;968:1;964;:5;952:17;;992:1;987;:6;;979:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:1;1036:8;;;875:176;;;;:::o;7800:302:3:-;7894:1;7875:21;;:7;:21;;;;7867:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7958:24;7975:6;7958:12;;:16;;:24;;;;:::i;:::-;7943:12;:39;;;;8013:30;8036:6;8013:9;:18;8023:7;8013:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;7992:9;:18;8002:7;7992:18;;;;;;;;;;;;;;;:51;;;;8079:7;8058:37;;8075:1;8058:37;;;8088:6;8058:37;;;;;;;;;;;;;;;;;;7800:302;;:::o;6870:929:6:-;6975:6;6965:16;;:6;:16;;;;:30;;;;;6994:1;6985:6;:10;6965:30;6961:832;;;7033:1;7015:20;;:6;:20;;;7011:379;;7102:16;7121:14;:22;7136:6;7121:22;;;;;;;;;;;;;;;;;;;;;;;;;7102:41;;7161:17;7193:1;7181:9;:13;;;:60;;7240:1;7181:60;;;7197:11;:19;7209:6;7197:19;;;;;;;;;;;;;;;:34;7229:1;7217:9;:13;7197:34;;;;;;;;;;;;;;;:40;;;7181:60;7161:80;;7259:17;7279:21;7293:6;7279:9;:13;;:21;;;;:::i;:::-;7259:41;;7318:57;7335:6;7343:9;7354;7365;7318:16;:57::i;:::-;7011:379;;;;7426:1;7408:20;;:6;:20;;;7404:379;;7495:16;7514:14;:22;7529:6;7514:22;;;;;;;;;;;;;;;;;;;;;;;;;7495:41;;7554:17;7586:1;7574:9;:13;;;:60;;7633:1;7574:60;;;7590:11;:19;7602:6;7590:19;;;;;;;;;;;;;;;:34;7622:1;7610:9;:13;7590:34;;;;;;;;;;;;;;;:40;;;7574:60;7554:80;;7652:17;7672:21;7686:6;7672:9;:13;;:21;;;;:::i;:::-;7652:41;;7711:57;7728:6;7736:9;7747;7758;7711:16;:57::i;:::-;7404:379;;;;6961:832;6870:929;;;:::o;6436:428::-;6524:23;6550:10;:21;6561:9;6550:21;;;;;;;;;;;;;;;;;;;;;;;;;6524:47;;6581:24;6608:20;6618:9;6608;:20::i;:::-;6581:47;;6707:9;6683:10;:21;6694:9;6683:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6776:9;6732:54;;6759:15;6732:54;;6748:9;6732:54;;;;;;;;;;;;6797:60;6812:15;6829:9;6840:16;6797:14;:60::i;:::-;6436:428;;;;:::o;8661:149::-;8706:4;8722:15;8769:9;8758:20;;8796:7;8789:14;;;8661:149;:::o;2197:225:1:-;2290:1;2270:22;;:8;:22;;;;2262:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2379:8;2350:38;;2371:6;;;;;;;;;;2350:38;;;;;;;;;;;;2407:8;2398:6;;:17;;;;;;;;;;;;;;;;;;2197:225;:::o;1322:134:2:-;1380:7;1406:43;1410:1;1413;1406:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1399:50;;1322:134;;;;:::o;7805:686:6:-;7976:18;7997:76;8004:12;7997:76;;;;;;;;;;;;;;;;;:6;:76::i;:::-;7976:97;;8103:1;8088:12;:16;;;:85;;;;;8162:11;8108:65;;:11;:22;8120:9;8108:22;;;;;;;;;;;;;;;:40;8146:1;8131:12;:16;8108:40;;;;;;;;;;;;;;;:50;;;;;;;;;;;;:65;;;8088:85;8084:334;;;8238:8;8189:11;:22;8201:9;8189:22;;;;;;;;;;;;;;;:40;8227:1;8212:12;:16;8189:40;;;;;;;;;;;;;;;:46;;:57;;;;8084:334;;;8316:33;;;;;;;;8327:11;8316:33;;;;;;8340:8;8316:33;;;8277:11;:22;8289:9;8277:22;;;;;;;;;;;;;;;:36;8300:12;8277:36;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8406:1;8391:12;:16;8363:14;:25;8378:9;8363:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;8084:334;8454:9;8433:51;;;8465:8;8475;8433:51;;;;;;;;;;;;;;;;;;;;;;;;7805:686;;;;;:::o;8497:158::-;8572:6;8602:5;8598:1;:9;8609:12;8590:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8646:1;8632:16;;8497:158;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2463200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "271",
								"DOMAIN_TYPEHASH()": "295",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"checkpoints(address,uint32)": "2243",
								"decimals()": "1189",
								"decreaseAllowance(address,uint256)": "infinite",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "1328",
								"getCurrentVotes(address)": "2334",
								"getOwner()": "1180",
								"getPriorVotes(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1237",
								"numCheckpoints(address)": "1267",
								"owner()": "1100",
								"renounceOwnership()": "24402",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint256)": "infinite",
								"_writeCheckpoint(address,uint32,uint256,uint256)": "infinite",
								"getChainId()": "35",
								"safe32(uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "50616E63616B655377617020546F6B656E000000000000000000000000000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "PUSH",
									"source": 3,
									"value": "43616B6500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 879,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 899,
									"end": 909,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 899,
									"end": 911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 879,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 879,
									"end": 911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 930,
									"end": 939,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 983,
									"end": 984,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 997,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 954,
									"end": 997,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2131,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2138,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2186,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2174,
									"end": 2183,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2174,
									"end": 2183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2188,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 780,
									"end": 876,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 780,
									"end": 876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 825,
									"end": 840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 859,
									"end": 869,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 852,
									"end": 869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 852,
									"end": 869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 780,
									"end": 876,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 876,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 8812,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220750b7e923cec528bb6930b7c3de1bc604cca543b242a76573b9dc122dc46491664736f6c634300060c0033",
									".code": [
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "782D6FE1"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "E7A324DC"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "F1127ED8"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "B4B5EA57"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "C3CDA520"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "A0712D68"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "782D6FE1"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "7ECEBE00"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "893D20E8"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "5C19A95C"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "5C19A95C"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "6FCFFF45"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "587CDE1E"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "20606B70"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 128,
											"end": 8812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 288,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2467,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2486,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2498,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3927,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 3987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3994,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1563,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4595,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4683,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH data",
											"source": 3,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4720,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4728,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4729,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4742,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4709,
											"end": 4746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4709,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4641,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4825,
											"end": 4829,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2650,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5335,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5335,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5397,
											"end": 5407,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5369,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5370,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5391,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5392,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5326,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5437,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 365,
											"end": 368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 359,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 359,
											"end": 378,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 378,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 359,
											"end": 378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 415,
											"end": 430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 432,
											"end": 439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 388,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 388,
											"end": 440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 440,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 388,
											"end": 440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 447,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2542,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2760,
											"end": 2770,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2789,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1371,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3135,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1804,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5375,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5375,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH data",
											"source": 6,
											"value": "A1BE2AA7CE8870F4C68A34627CE4514A20D52F005EDD6F8BF954781312534474"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5341,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5466,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5474,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5609,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5618,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5619,
											"end": 5631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5635,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5646,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5598,
											"end": 5661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5661,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5594,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5594,
											"end": 5739,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5703,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5704,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5722,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5684,
											"end": 5728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5728,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5677,
											"end": 5728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5594,
											"end": 5739,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5594,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5833,
											"end": 5844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5816,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5820,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5844,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5797,
											"end": 5844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5844,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5879,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5793,
											"end": 5879,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5879,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5793,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5946,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5930,
											"end": 5942,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6025,
											"end": 6030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 6035,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6127,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6172,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6157,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6145,
											"end": 6172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6172,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6141,
											"end": 6364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6207,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6192,
											"end": 6207,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6364,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6141,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6258,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6258,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6258,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6258,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6278,
											"end": 6292,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6278,
											"end": 6292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6228,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5956,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6401,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6409,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6417,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6423,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6390,
											"end": 6423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6423,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 6430,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2771,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6491,
											"end": 6495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6513,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6513,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6507,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6046,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6072,
											"end": 6079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6132,
											"end": 6147,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH data",
											"source": 3,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6105,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6093,
											"end": 6131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6093,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6024,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6209,
											"end": 6220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3441,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3441,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3431,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3501,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4691,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4774,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4717,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4543,
											"end": 4791,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1563,
											"name": "PUSH",
											"source": 6,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3521,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3547,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3589,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3444,
											"end": 3604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3614,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH",
											"source": 6,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3814,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 3970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3994,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4092,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH data",
											"source": 6,
											"value": "8C9772D8870FAF984838FDB1A6A39869B314CEDD021C20FB983E461D778F09AA"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4181,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4181,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH data",
											"source": 6,
											"value": "AA9EE17312BE9DC937C6C61D6A03A6C21827D2F9C3E6DFEA349C1095E56DB22F"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4145,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4251,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4241,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4251,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH data",
											"source": 6,
											"value": "2975FF3A9C2DF4C97FCC8BDA6FF60212C199EDFEF1308A20EFC5C659649E98EB"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4230,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4321,
											"end": 4330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4311,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 4349,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3676,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3691,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3558,
											"end": 3699,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH",
											"source": 6,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1256,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1276,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2080,
											"end": 2088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2061,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2096,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 780,
											"end": 876,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 780,
											"end": 876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 869,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9311,
											"end": 9330,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH data",
											"source": 3,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9303,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH data",
											"source": 3,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9381,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9471,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9460,
											"end": 9487,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9527,
											"end": 9534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9520,
											"end": 9525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9511,
											"end": 9543,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9550,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7183,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH data",
											"source": 3,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7155,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7243,
											"end": 7266,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH data",
											"source": 3,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH data",
											"source": 3,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7354,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7466,
											"end": 7472,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7460,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7461,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7441,
											"end": 7465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7441,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7418,
											"end": 7473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7523,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7530,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1964,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 964,
											"end": 965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 964,
											"end": 969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 993,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 987,
											"end": 993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 979,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 875,
											"end": 1051,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7867,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7958,
											"end": 7970,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7958,
											"end": 7974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7958,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7955,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8036,
											"end": 8042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8022,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8030,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8031,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8013,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8009,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7992,
											"end": 8010,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7992,
											"end": 8043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 8102,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6981,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 6995,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7793,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6961,
											"end": 7793,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7035,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7135,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7208,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7215,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7216,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7230,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7197,
											"end": 7237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7237,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7181,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7293,
											"end": 7299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7279,
											"end": 7292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7363,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7011,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7426,
											"end": 7427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7495,
											"end": 7511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7528,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7535,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7514,
											"end": 7536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7495,
											"end": 7536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7495,
											"end": 7536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7587,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7608,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7610,
											"end": 7619,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7623,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7630,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7590,
											"end": 7630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7630,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7574,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7681,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7672,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7711,
											"end": 7768,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7711,
											"end": 7768,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7711,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7404,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7793,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 6961,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 7799,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6560,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6618,
											"end": 6627,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6608,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6628,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6693,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6776,
											"end": 6785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6786,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6838,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6797,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6864,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8661,
											"end": 8810,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8661,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8737,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8769,
											"end": 8778,
											"name": "CHAINID",
											"source": 6
										},
										{
											"begin": 8758,
											"end": 8778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8758,
											"end": 8778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8803,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8810,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2262,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2388,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 1406,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1456,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH data",
											"source": 6,
											"value": "A024375C1B834D2D05951566D035F756F78479A9DC650436C3BA2937D280012F"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7997,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 8073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 8073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8119,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8147,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8143,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8108,
											"end": 8173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8173,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8088,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8200,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8210,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8211,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8212,
											"end": 8224,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8228,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8229,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8235,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8189,
											"end": 8235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8246,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8340,
											"end": 8348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8298,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8299,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8300,
											"end": 8312,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8313,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8391,
											"end": 8403,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8377,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8387,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8084,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 8465,
											"end": 8473,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8483,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8433,
											"end": 8484,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 8491,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8607,
											"name": "PUSH",
											"source": 6,
											"value": "100000000"
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8655,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2975FF3A9C2DF4C97FCC8BDA6FF60212C199EDFEF1308A20EFC5C659649E98EB": "43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"8C9772D8870FAF984838FDB1A6A39869B314CEDD021C20FB983E461D778F09AA": "43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
										"A024375C1B834D2D05951566D035F756F78479A9DC650436C3BA2937D280012F": "43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"A1BE2AA7CE8870F4C68A34627CE4514A20D52F005EDD6F8BF954781312534474": "43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"AA9EE17312BE9DC937C6C61D6A03A6C21827D2F9C3E6DFEA349C1095E56DB22F": "43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getOwner()": "893d20e8",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"delegates(address)\":{\"params\":{\"delegator\":\"The address to get delegatee for\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CakeToken.sol\":\"CakeToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b\",\"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo\"]},\"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe4099b9c99c22b28d8c1676803e2ff6f34ddc043d1e8631476e8e417c81aa7a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dc140c98056178b731be974f42d523134258162fdf379ef6ed2eeb234fc067df\",\"dweb:/ipfs/QmZNQ3FNYS17E2HjyX4eqk7RYfSJtaG5b47W27xatJjNeo\"]},\"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a\",\"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL\"]},\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol\":{\"keccak256\":\"0x0442404a56112b52de7e4a64eb0d9fe346add08d122b52e848e43c9f22d707c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abbecb866acdd459f567efac348a519758c46ca0b53415c484b28b2d28c7b19f\",\"dweb:/ipfs/Qmdo86JSfRcqoMr6Z2H3k1NMZQ6qZCSvSihzCb5Eq7d8DJ\"]},\"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol\":{\"keccak256\":\"0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1\",\"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r\"]},\"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x806c8686fdf1afac78d0828ca7941e5ac30282a358d23cf502ec39893c64d4af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be41cfa7e8aaf4c95e1517007964cef2470abd47ad578293db4cd25434ee77ea\",\"dweb:/ipfs/QmPX9qcHJNv1vA6Nxue8c46wxdXwKdLcUyXxEQ91F93u7a\"]},\"contracts/CakeToken.sol\":{\"keccak256\":\"0x19d46bc9d466325a0331a1fee85f49e307d453b8b3409cfbaaa09b020dfc055e\",\"urls\":[\"bzz-raw://08ce0b29650f0961e7684c91d1444f711cb690251ef15d22a71d27e950a7f4de\",\"dweb:/ipfs/QmYJdD24kFDukxVukKYkUZjkuZRRX24bPZUcXAZJHedE3B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 439,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 445,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 447,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 449,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 451,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 453,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 1286,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "_delegates",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1298,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "checkpoints",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1291_storage))"
							},
							{
								"astId": 1303,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 1320,
								"contract": "contracts/CakeToken.sol:CakeToken",
								"label": "nonces",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1291_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)1291_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)1291_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct CakeToken.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)1291_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Checkpoint)1291_storage": {
								"encoding": "inplace",
								"label": "struct CakeToken.Checkpoint",
								"members": [
									{
										"astId": 1288,
										"contract": "contracts/CakeToken.sol:CakeToken",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1290,
										"contract": "contracts/CakeToken.sol:CakeToken",
										"label": "votes",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/CakeToken.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/CakeToken.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "7816",
				"formattedMessage": "contracts/CakeToken.sol:19:5: Warning: Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.\n    /// @notice A record of each accounts delegate\n    ^--------------------------------------------^\n",
				"message": "Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.",
				"severity": "warning",
				"sourceLocation": {
					"end": 897,
					"file": "contracts/CakeToken.sol",
					"start": 851
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							26
						]
					},
					"id": 27,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "772:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:0:0"
									},
									"scope": 26,
									"src": "749:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "842:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 10,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "859:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "859:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 12,
												"nodeType": "Return",
												"src": "852:17:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "825:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "824:17:0"
									},
									"scope": 26,
									"src": "780:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "939:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$26",
														"typeString": "contract Context"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "949:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 21,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1089:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1089:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "1082:15:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "925:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "924:14:0"
									},
									"scope": 26,
									"src": "882:222:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 27,
							"src": "572:534:0"
						}
					],
					"src": "46:1061:0"
				},
				"id": 0
			},
			"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							146
						]
					},
					"id": 147,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 28,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 29,
							"nodeType": "ImportDirective",
							"scope": 147,
							"sourceUnit": 27,
							"src": "72:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 31,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "617:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [
								26
							],
							"contractKind": "contract",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "102:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146,
								26
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 146,
									"src": "631:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 40,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "687:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "718:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:57:1"
									},
									"src": "660:84:1"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "869:135:1",
										"statements": [
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 61,
														"src": "879:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 44,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "899:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "879:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "921:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "930:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "921:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "921:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "983:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "975:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 54,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "975:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "975:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 58,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "987:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 53,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "EmitStatement",
												"src": "949:48:1"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "750:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:2:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:0:1"
									},
									"scope": 146,
									"src": "846:158:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1127:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "1144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 69,
												"nodeType": "Return",
												"src": "1137:13:1"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1010:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1094:2:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "1118:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1117:9:1"
									},
									"scope": 146,
									"src": "1080:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1266:95:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1284:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 76,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1294:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1284:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1276:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1276:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1276:67:1"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "1353:1:1"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1163:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 84,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:2:1"
									},
									"src": "1245:116:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1749:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 91,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1801:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1793:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 92,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1793:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1793:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 90,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1764:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1764:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1759:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1814:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1831:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1823:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 99,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1823:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1823:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1814:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1814:19:1"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1367:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 88,
											"modifierName": {
												"argumentTypes": null,
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "1739:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1739:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:1"
									},
									"scope": 146,
									"src": "1703:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2051:45:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 115,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2080:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2061:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2061:28:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1846:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 112,
											"modifierName": {
												"argumentTypes": null,
												"id": 111,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "2041:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2041:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 119,
												"src": "2016:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2015:18:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:1"
									},
									"scope": 146,
									"src": "1989:107:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2252:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2270:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2290:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2282:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2282:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2282:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2270:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2294:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2262:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2262:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 136,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2371:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 137,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2379:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 135,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2350:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "EmitStatement",
												"src": "2345:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2398:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2407:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2398:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2398:17:1"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2102:90:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "2225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2224:18:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2252:0:1"
									},
									"scope": 146,
									"src": "2197:225:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 147,
							"src": "597:1827:1"
						}
					],
					"src": "46:2379:1"
				},
				"id": 1
			},
			"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							415
						]
					},
					"id": 416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "59:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 415,
							"linearizedBaseContracts": [
								415
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "942:109:2",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 174,
														"src": "952:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 161,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "964:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 162,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "964:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "952:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "987:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "992:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "987:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "995:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "979:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "979:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "1043:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 158,
												"id": 173,
												"nodeType": "Return",
												"src": "1036:8:2"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "646:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "888:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "899:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "887:22:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "933:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:9:2"
									},
									"scope": 415,
									"src": "875:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1389:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1410:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 187,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1413:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 185,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															192,
															220
														],
														"referencedDeclaration": 220,
														"src": "1406:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 190,
												"nodeType": "Return",
												"src": "1399:50:2"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1057:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "1335:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "1346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:22:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "1380:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1379:9:2"
									},
									"scope": 415,
									"src": "1322:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "1872:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1890:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 206,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "1895:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1890:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1898:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1882:29:2"
											},
											{
												"assignments": [
													212
												],
												"declarations": [
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 219,
														"src": "1921:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1933:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1937:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1933:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 212,
													"src": "1956:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 203,
												"id": 218,
												"nodeType": "Return",
												"src": "1949:8:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1462:280:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 220,
												"src": "1769:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 220,
												"src": "1788:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 220,
												"src": "1807:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1807:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1759:80:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 220,
												"src": "1863:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1862:9:2"
									},
									"scope": 415,
									"src": "1747:217:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2278:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2510:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2515:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 236,
												"nodeType": "IfStatement",
												"src": "2506:45:2",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "2518:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2539:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 229,
															"id": 234,
															"nodeType": "Return",
															"src": "2532:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 254,
														"src": "2561:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2561:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2573:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 240,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2577:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2573:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2561:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "2596:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 245,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2600:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2596:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 247,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "2605:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2596:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2608:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2588:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2588:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 252,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 238,
													"src": "2662:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 253,
												"nodeType": "Return",
												"src": "2655:8:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1970:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "2224:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "2235:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2223:22:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "2269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2268:9:2"
									},
									"scope": 415,
									"src": "2211:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3199:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 266,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 267,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3223:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3226:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 265,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															272,
															300
														],
														"referencedDeclaration": 300,
														"src": "3216:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3216:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 270,
												"nodeType": "Return",
												"src": "3209:46:2"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2676:451:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 272,
												"src": "3145:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 272,
												"src": "3156:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3144:22:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 272,
												"src": "3190:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3189:9:2"
									},
									"scope": 415,
									"src": "3132:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3869:177:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 285,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "3887:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3891:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3887:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 288,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3894:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3879:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3879:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "3879:28:2"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 299,
														"src": "3917:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3917:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "3929:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "3933:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3929:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3917:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "4038:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 283,
												"id": 298,
												"nodeType": "Return",
												"src": "4031:8:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3268:471:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "3766:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "3785:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "3804:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3804:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3756:80:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "3860:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3859:9:2"
									},
									"scope": 415,
									"src": "3744:302:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4564:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "4585:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4588:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4591:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 310,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															317,
															341
														],
														"referencedDeclaration": 341,
														"src": "4581:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 315,
												"nodeType": "Return",
												"src": "4574:44:2"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4052:440:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4510:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4521:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4509:22:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "4555:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4554:9:2"
									},
									"scope": 415,
									"src": "4497:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5221:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 330,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "5239:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5244:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5239:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 333,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5247:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5231:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5231:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "5231:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 336,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "5277:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 337,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "5281:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5277:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 339,
												"nodeType": "Return",
												"src": "5270:12:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4631:460:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "5118:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "5137:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "5156:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5156:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5108:80:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "5212:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5211:9:2"
									},
									"scope": 415,
									"src": "5096:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "5364:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 350,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "5374:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 351,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5378:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 352,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "5382:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5378:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 355,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5390:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5378:13:2",
														"trueExpression": {
															"argumentTypes": null,
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5386:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5374:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "5374:17:2"
											}
										]
									},
									"documentation": null,
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "5308:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "5319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5307:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "5353:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5352:11:2"
									},
									"scope": 415,
									"src": "5295:103:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "5572:242:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 367,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5586:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5590:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5586:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 403,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5770:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5775:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5770:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 411,
													"nodeType": "IfStatement",
													"src": "5766:42:2",
													"trueBody": {
														"id": 410,
														"nodeType": "Block",
														"src": "5778:30:2",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 406,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5792:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5796:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 409,
																"nodeType": "ExpressionStatement",
																"src": "5792:5:2"
															}
														]
													}
												},
												"id": 412,
												"nodeType": "IfStatement",
												"src": "5582:226:2",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "5593:167:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "5607:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5611:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5607:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"nodeType": "ExpressionStatement",
															"src": "5607:5:2"
														},
														{
															"assignments": [
																375
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 375,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 402,
																	"src": "5626:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5626:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 381,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 376,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "5638:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5642:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5638:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5646:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5638:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5626:21:2"
														},
														{
															"body": {
																"id": 400,
																"nodeType": "Block",
																"src": "5675:75:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 385,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "5693:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 386,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "5697:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5693:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 388,
																		"nodeType": "ExpressionStatement",
																		"src": "5693:5:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 389,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "5716:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 394,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 392,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 390,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 362,
																									"src": "5721:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 391,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 375,
																									"src": "5725:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5721:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 393,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 375,
																								"src": "5729:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5721:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 395,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5720:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5734:1:2",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "5720:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5716:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 399,
																		"nodeType": "ExpressionStatement",
																		"src": "5716:19:2"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 382,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5668:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "5672:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5668:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 401,
															"nodeType": "WhileStatement",
															"src": "5661:89:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "5527:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5526:11:2"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "5561:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5561:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5560:11:2"
									},
									"scope": 415,
									"src": "5513:301:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 416,
							"src": "623:5193:2"
						}
					],
					"src": "33:5784:2"
				},
				"id": 2
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol",
					"exportedSymbols": {
						"BEP20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 417,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol",
							"file": "../../access/Ownable.sol",
							"id": 418,
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 147,
							"src": "59:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 419,
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 27,
							"src": "94:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 420,
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 1044,
							"src": "126:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 421,
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 416,
							"src": "149:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 422,
							"nodeType": "ImportDirective",
							"scope": 943,
							"sourceUnit": 1248,
							"src": "183:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 424,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "1399:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 425,
									"nodeType": "InheritanceSpecifier",
									"src": "1399:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 426,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1043,
										"src": "1408:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1043",
											"typeString": "contract IBEP20"
										}
									},
									"id": 427,
									"nodeType": "InheritanceSpecifier",
									"src": "1408:6:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 428,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 146,
										"src": "1416:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$146",
											"typeString": "contract Ownable"
										}
									},
									"id": 429,
									"nodeType": "InheritanceSpecifier",
									"src": "1416:7:3"
								}
							],
							"contractDependencies": [
								26,
								146,
								1043
							],
							"contractKind": "contract",
							"documentation": {
								"id": 423,
								"nodeType": "StructuredDocumentation",
								"src": "218:1162:3",
								"text": " @dev Implementation of the {IBEP20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {BEP20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of BEP20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IBEP20-approve}."
							},
							"fullyImplemented": true,
							"id": 942,
							"linearizedBaseContracts": [
								942,
								146,
								1043,
								26
							],
							"name": "BEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 432,
									"libraryName": {
										"contractScope": null,
										"id": 430,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 415,
										"src": "1436:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$415",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1430:27:3",
									"typeName": {
										"id": 431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1449:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 435,
									"libraryName": {
										"contractScope": null,
										"id": 433,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1247,
										"src": "1468:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1247",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1462:26:3",
									"typeName": {
										"id": 434,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1480:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 439,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1494:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 438,
										"keyType": {
											"id": 436,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1502:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1494:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 437,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1513:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1546:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 444,
										"keyType": {
											"id": 440,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1554:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1546:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 443,
											"keyType": {
												"id": 441,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1573:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1565:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 442,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1584:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1620:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1655:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 448,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1655:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1681:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 450,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1681:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "1709:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 452,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1709:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2116:79:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 461,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2126:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 462,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2134:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2126:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "2126:12:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 465,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2158:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2148:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "2148:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 469,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "2174:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2186:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2174:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "2174:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1739:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "2067:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2067:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "2087:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2087:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2066:42:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2116:0:3"
									},
									"scope": 942,
									"src": "2055:140:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										974
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2319:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 481,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "2336:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "2329:14:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2201:52:3",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2287:8:3"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2275:2:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "2310:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2309:9:3"
									},
									"scope": 942,
									"src": "2258:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										968
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "2469:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 492,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 449,
													"src": "2486:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 491,
												"id": 493,
												"nodeType": "Return",
												"src": "2479:12:3"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2356:47:3",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 488,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2431:8:3"
									},
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2421:2:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 495,
												"src": "2454:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2454:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2453:15:3"
									},
									"scope": 942,
									"src": "2408:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										956
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2617:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 502,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "2634:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 501,
												"id": 503,
												"nodeType": "Return",
												"src": "2627:16:3"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "2504:51:3",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 498,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2587:8:3"
									},
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "2610:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 499,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2610:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2609:7:3"
									},
									"scope": 942,
									"src": "2560:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2773:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 512,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 451,
													"src": "2790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 511,
												"id": 513,
												"nodeType": "Return",
												"src": "2783:14:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2656:49:3",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2735:8:3"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:2:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2758:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2758:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2757:15:3"
									},
									"scope": 942,
									"src": "2710:94:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2925:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 522,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 447,
													"src": "2942:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 521,
												"id": 523,
												"nodeType": "Return",
												"src": "2935:19:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2810:48:3",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2893:8:3"
									},
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2883:2:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "2916:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2915:9:3"
									},
									"scope": 942,
									"src": "2863:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "3093:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 534,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "3110:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 536,
													"indexExpression": {
														"argumentTypes": null,
														"id": 535,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "3120:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3110:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 533,
												"id": 537,
												"nodeType": "Return",
												"src": "3103:25:3"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "2967:46:3",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3061:8:3"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 539,
												"src": "3037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3036:17:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 539,
												"src": "3084:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3083:9:3"
									},
									"scope": 942,
									"src": "3018:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3421:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 551,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "3441:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3441:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 553,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "3455:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 554,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3466:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "3431:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3431:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "3431:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3490:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 549,
												"id": 558,
												"nodeType": "Return",
												"src": "3483:11:3"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "3141:191:3",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 546,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3397:8:3"
									},
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "3355:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3355:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "3374:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3354:35:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "3415:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3415:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3414:6:3"
									},
									"scope": 942,
									"src": "3337:164:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1002
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "3648:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 571,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3665:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 573,
														"indexExpression": {
															"argumentTypes": null,
															"id": 572,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3677:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3665:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 575,
													"indexExpression": {
														"argumentTypes": null,
														"id": 574,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "3684:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3665:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "3658:34:3"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "3507:46:3",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 567,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3616:8:3"
									},
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "3577:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "3592:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3592:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3576:32:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "3639:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3639:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3638:9:3"
									},
									"scope": 942,
									"src": "3558:141:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1012
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3917:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 590,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "3936:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3936:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "3950:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "3959:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "3927:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3927:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3927:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3983:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 597,
												"nodeType": "Return",
												"src": "3976:11:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "3705:126:3",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3893:8:3"
									},
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "3853:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "3870:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3852:33:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 599,
												"src": "3911:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3911:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3910:6:3"
									},
									"scope": 942,
									"src": "3836:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1024
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "4585:251:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 613,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4605:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 614,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4613:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4624:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "4595:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4595:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 619,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4663:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "4683:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4683:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 629,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "4747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4755:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 622,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "4709:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 624,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "4721:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4709:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 627,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 625,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "4729:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4729:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4709:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "4709:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4709:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "4641:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4641:167:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "4641:167:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4825:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 611,
												"id": 635,
												"nodeType": "Return",
												"src": "4818:11:3"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "4000:446:3",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4561:8:3"
									},
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4506:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4533:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4533:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4472:81:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4579:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4579:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4578:6:3"
									},
									"scope": 942,
									"src": "4451:385:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5316:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 648,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "5335:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5335:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 650,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5349:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 658,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "5397:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 651,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "5358:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 654,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 652,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "5370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5370:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5358:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 656,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 655,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "5384:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5358:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "5358:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5358:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "5326:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "5326:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5426:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 646,
												"id": 663,
												"nodeType": "Return",
												"src": "5419:11:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "4842:383:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "5257:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "5274:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5256:37:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "5310:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5310:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5309:6:3"
									},
									"scope": 942,
									"src": "5230:207:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "6014:213:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6046:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6046:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "6072:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 686,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "6132:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6149:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 679,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "6093:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 682,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 680,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "6105:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6105:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6093:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 684,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 683,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "6119:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6093:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "6093:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6093:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "6024:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6024:175:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "6024:175:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6216:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 674,
												"id": 692,
												"nodeType": "Return",
												"src": "6209:11:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5443:475:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 694,
												"src": "5950:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 694,
												"src": "5967:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5949:42:3"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 694,
												"src": "6008:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6008:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6007:6:3"
									},
									"scope": 942,
									"src": "5923:304:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "6497:65:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 705,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "6513:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6513:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 707,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "6527:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "6507:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6507:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "6507:27:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6551:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 703,
												"id": 711,
												"nodeType": "Return",
												"src": "6544:11:3"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "6233:197:3",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 700,
											"modifierName": {
												"argumentTypes": null,
												"id": 699,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "6472:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6472:9:3"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "6449:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6448:16:3"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "6491:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6491:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6490:6:3"
									},
									"scope": 942,
									"src": "6435:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "7145:385:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 724,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "7163:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7181:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7173:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 725,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7173:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7173:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7163:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7185:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7155:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7155:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "7155:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 734,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "7243:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7264:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7256:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 735,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7256:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7256:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7243:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7268:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7235:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7235:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "7235:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7317:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 745,
														"indexExpression": {
															"argumentTypes": null,
															"id": 744,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "7327:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7317:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 750,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "7359:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7367:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "7337:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 748,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 747,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "7347:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7337:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "7337:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7337:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7317:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "7317:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 755,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7418:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 757,
														"indexExpression": {
															"argumentTypes": null,
															"id": 756,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "7428:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7418:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 762,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "7466:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 758,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "7441:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 760,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 759,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "7451:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7441:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "7441:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7441:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7418:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "7418:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 767,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "7497:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 768,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "7505:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "7516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "7488:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7488:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "EmitStatement",
												"src": "7483:40:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "6568:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "7064:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "7088:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "7115:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7115:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7054:81:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7145:0:3"
									},
									"scope": 942,
									"src": "7036:494:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "7857:245:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 782,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "7875:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7894:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7886:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7886:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7886:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7875:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7898:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7867:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7867:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "7867:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 791,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7943:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 794,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "7975:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 792,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7958:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "7958:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7958:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7943:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "7943:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 798,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7992:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 800,
														"indexExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8002:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7992:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 805,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "8036:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 801,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "8013:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "8023:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8013:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "8013:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8013:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7992:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "7992:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8075:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8067:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8067:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8067:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 814,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8079:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 815,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "8088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8058:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8058:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "8053:42:3"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "7536:259:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 819,
												"src": "7815:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7815:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 819,
												"src": "7832:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7814:33:3"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7857:0:3"
									},
									"scope": 942,
									"src": "7800:302:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "8478:285:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 828,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "8496:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8515:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8507:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8507:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8507:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8496:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8519:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8488:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8488:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "8488:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 837,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "8566:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 839,
														"indexExpression": {
															"argumentTypes": null,
															"id": 838,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8576:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8566:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 844,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "8610:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8618:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 840,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "8587:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 842,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 841,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "8597:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8587:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8587:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8587:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8566:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "8566:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 849,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "8665:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 852,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "8697:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 850,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "8680:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 192,
															"src": "8680:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8680:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8665:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "8665:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 857,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8728:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8745:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8737:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 858,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8737:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8737:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 862,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8749:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 856,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8719:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8719:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "EmitStatement",
												"src": "8714:42:3"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "8108:308:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "8436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "8453:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8435:33:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8478:0:3"
									},
									"scope": 942,
									"src": "8421:342:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "9293:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 877,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "9311:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9328:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9320:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 878,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9320:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9320:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9311:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9332:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9303:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9303:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "9303:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 887,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "9389:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9408:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9400:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 888,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9400:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9400:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9389:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9412:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9381:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9381:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "9381:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "9460:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 899,
															"indexExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "9472:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9460:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 900,
														"indexExpression": {
															"argumentTypes": null,
															"id": 898,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "9479:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9460:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 901,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9490:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9460:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "9460:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 905,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "9520:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 906,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "9527:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 907,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "9536:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "9511:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9511:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "EmitStatement",
												"src": "9506:37:3"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "8769:414:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "9215:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9215:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "9238:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "9263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9205:78:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9293:0:3"
									},
									"scope": 942,
									"src": "9188:362:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "9789:214:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 920,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9805:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 921,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9814:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9799:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9799:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "9799:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 925,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9853:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 926,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "9874:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9874:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 935,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "9939:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9947:38:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 928,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "9900:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 930,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 929,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 914,
																			"src": "9912:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9900:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 933,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 931,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "9921:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9921:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9900:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "9900:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:86:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "9831:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9831:165:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "9831:165:3"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "9556:167:3",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "9747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "9764:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9746:33:3"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9789:0:3"
									},
									"scope": 942,
									"src": "9728:275:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 943,
							"src": "1381:8624:3"
						}
					],
					"src": "33:9973:3"
				},
				"id": 3
			},
			"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							1043
						]
					},
					"id": 1044,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1043,
							"linearizedBaseContracts": [
								1043
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "95:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 950,
												"src": "212:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:9:4"
									},
									"scope": 1043,
									"src": "166:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "227:51:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "326:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 953,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "326:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:7:4"
									},
									"scope": 1043,
									"src": "283:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "339:49:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 962,
												"src": "434:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "434:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:15:4"
									},
									"scope": 1043,
									"src": "393:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "455:47:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:2:4"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "546:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "545:15:4"
									},
									"scope": 1043,
									"src": "507:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "567:52:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "641:2:4"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 974,
												"src": "667:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:9:4"
									},
									"scope": 1043,
									"src": "624:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "682:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 982,
												"src": "778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:17:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 982,
												"src": "818:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "817:9:4"
									},
									"scope": 1043,
									"src": "759:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "833:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "1065:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "1084:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:35:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "1118:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1117:6:4"
									},
									"scope": 1043,
									"src": "1047:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "1130:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "1418:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "1434:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1417:33:4"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1002,
												"src": "1474:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1473:9:4"
									},
									"scope": 1043,
									"src": "1399:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "1489:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1012,
												"src": "2153:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1012,
												"src": "2170:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2152:33:4"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1012,
												"src": "2204:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2204:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:6:4"
									},
									"scope": 1043,
									"src": "2136:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "2216:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2548:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2572:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2599:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2538:81:4"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1024,
												"src": "2638:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2638:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:6:4"
									},
									"scope": 1043,
									"src": "2517:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "2650:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1033,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "2828:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "2850:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "2870:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2827:57:4"
									},
									"src": "2813:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "2891:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1042,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "3059:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "3082:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1042,
												"src": "3107:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3058:63:4"
									},
									"src": "3044:78:4"
								}
							],
							"scope": 1044,
							"src": "72:3052:4"
						}
					],
					"src": "46:3079:4"
				},
				"id": 4
			},
			"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1247
						]
					},
					"id": 1248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1045,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "784:564:5",
										"statements": [
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1071,
														"src": "1036:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1054,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1036:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1036:16:5"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1071,
														"src": "1062:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1057,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1062:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1084:66:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1062:88:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1225:56:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1239:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1263:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1251:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:20:5"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1239:8:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "1263:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1055,
														"isOffset": false,
														"isSlot": false,
														"src": "1239:8:5",
														"valueSize": 1
													}
												],
												"id": 1061,
												"nodeType": "InlineAssembly",
												"src": "1216:65:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1062,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "1298:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1063,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "1310:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1298:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1065,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "1325:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1337:3:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1325:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1298:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1069,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1297:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1070,
												"nodeType": "Return",
												"src": "1290:51:5"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1072,
												"src": "738:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:17:5"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1072,
												"src": "778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:5"
									},
									"scope": 1247,
									"src": "718:630:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "2336:318:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1083,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2362:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2354:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1081,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2354:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2354:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2354:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1086,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2379:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2354:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2387:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2346:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2346:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2346:73:5"
											},
											{
												"assignments": [
													1092,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1105,
														"src": "2508:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1091,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2508:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1099,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1093,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "2526:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2526:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1095,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2548:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2526:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2507:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1101,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "2577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2586:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2569:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2569:78:5"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1354:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "2284:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2284:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "2311:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2283:43:5"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:0:5"
									},
									"scope": 1247,
									"src": "2265:389:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "3484:84:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "3514:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3522:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3528:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1116,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1123,
															1143
														],
														"referencedDeclaration": 1143,
														"src": "3501:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1121,
												"nodeType": "Return",
												"src": "3494:67:5"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "2660:730:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "3417:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "3433:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3433:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3416:35:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "3470:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3470:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3469:14:5"
									},
									"scope": 1247,
									"src": "3395:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "3937:77:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "3977:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3985:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3991:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1139,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "3994:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1135,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "3954:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3954:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1141,
												"nodeType": "Return",
												"src": "3947:60:5"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "3574:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "3821:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "3845:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3845:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "3872:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3872:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3811:93:5"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "3923:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3923:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3922:14:5"
									},
									"scope": 1247,
									"src": "3790:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "4519:111:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1156,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "4558:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1157,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "4566:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1158,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "4572:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4579:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1155,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1163,
															1196
														],
														"referencedDeclaration": 1196,
														"src": "4536:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1161,
												"nodeType": "Return",
												"src": "4529:94:5"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "4020:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "4416:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "4440:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4440:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "4467:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4406:80:5"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "4505:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4505:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4504:14:5"
									},
									"scope": 1247,
									"src": "4376:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "5057:172:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1180,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5083:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1247",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5075:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1178,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5075:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5075:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5075:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1183,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "5100:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5075:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5107:40:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5067:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "5067:81:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1189,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "5188:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "5196:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1191,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "5202:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1192,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "5209:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1188,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "5165:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5165:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1194,
												"nodeType": "Return",
												"src": "5158:64:5"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "4636:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1196,
												"src": "4918:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4918:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1196,
												"src": "4942:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4942:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1196,
												"src": "4969:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1196,
												"src": "4992:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4992:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4908:116:5"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1196,
												"src": "5043:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5042:14:5"
									},
									"scope": 1247,
									"src": "4878:351:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "5417:812:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1211,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "5446:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1210,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "5435:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5435:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5455:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5427:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "5427:60:5"
											},
											{
												"assignments": [
													1217,
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1245,
														"src": "5558:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1216,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5558:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1245,
														"src": "5572:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1218,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5572:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5628:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1220,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "5599:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5599:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1222,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "5618:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5599:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5599:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5557:76:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1227,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "5647:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "5704:519:5",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1231,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "5788:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5788:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5808:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5788:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1241,
																"nodeType": "Block",
																"src": "6160:53:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1238,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "6185:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1237,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6178:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6178:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1240,
																		"nodeType": "ExpressionStatement",
																		"src": "6178:20:5"
																	}
																]
															},
															"id": 1242,
															"nodeType": "IfStatement",
															"src": "5784:429:5",
															"trueBody": {
																"id": 1236,
																"nodeType": "Block",
																"src": "5811:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5995:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6017:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6046:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6040:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6040:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6021:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6089:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6093:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6085:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6085:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6106:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6078:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6078:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6078:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1219,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6046:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1219,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6093:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1235,
																		"nodeType": "InlineAssembly",
																		"src": "5986:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "5643:580:5",
												"trueBody": {
													"id": 1230,
													"nodeType": "Block",
													"src": "5656:42:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1228,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "5677:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1208,
															"id": 1229,
															"nodeType": "Return",
															"src": "5670:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "5276:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "5300:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5300:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "5327:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "5353:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5353:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5266:119:5"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1246,
												"src": "5403:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5403:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5402:14:5"
									},
									"scope": 1247,
									"src": "5235:994:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1248,
							"src": "126:6105:5"
						}
					],
					"src": "33:6199:5"
				},
				"id": 5
			},
			"contracts/CakeToken.sol": {
				"ast": {
					"absolutePath": "contracts/CakeToken.sol",
					"exportedSymbols": {
						"CakeToken": [
							1883
						]
					},
					"id": 1884,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1249,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol",
							"file": "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol",
							"id": 1250,
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 943,
							"src": "25:71:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "50616e63616b655377617020546f6b656e",
											"id": 1252,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "156:19:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_6fb6e6a4563b9e0948ec9f838ca98284d7540cd6666d2757085837ec6a8df2b0",
												"typeString": "literal_string \"PancakeSwap Token\""
											},
											"value": "PancakeSwap Token"
										},
										{
											"argumentTypes": null,
											"hexValue": "43616b65",
											"id": 1253,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "177:6:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_fc4fd77a70242bcf8981e2c08ac51ecb96f509c45cc339670da92f4d28b73f72",
												"typeString": "literal_string \"Cake\""
											},
											"value": "Cake"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 1251,
										"name": "BEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 942,
										"src": "150:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BEP20_$942",
											"typeString": "contract BEP20"
										}
									},
									"id": 1254,
									"nodeType": "InheritanceSpecifier",
									"src": "150:34:6"
								}
							],
							"contractDependencies": [
								26,
								146,
								942,
								1043
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883,
								942,
								146,
								1043,
								26
							],
							"name": "CakeToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "349:98:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1265,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "365:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1266,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1264,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "359:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "359:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "359:19:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "411:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "403:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1270,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "403:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "403:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1274,
																"name": "_delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "415:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1276,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1275,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "426:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "415:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1277,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "432:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1269,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "388:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "388:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "388:52:6"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "191:92:6",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1262,
											"modifierName": {
												"argumentTypes": null,
												"id": 1261,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 84,
												"src": "339:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "339:9:6"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "302:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "315:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "301:30:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:6"
									},
									"scope": 1883,
									"src": "288:159:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "851:46:6",
										"text": "@notice A record of each accounts delegate"
									},
									"id": 1286,
									"mutability": "mutable",
									"name": "_delegates",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "902:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1285,
										"keyType": {
											"id": 1283,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "911:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "902:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1284,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "922:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "CakeToken.Checkpoint",
									"id": 1291,
									"members": [
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "fromBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1291,
											"src": "1061:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1287,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1061:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1290,
											"mutability": "mutable",
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1291,
											"src": "1087:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1289,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1087:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "1033:74:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "1113:68:6",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 1298,
									"mutability": "mutable",
									"name": "checkpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "1186:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))"
									},
									"typeName": {
										"id": 1297,
										"keyType": {
											"id": 1293,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1195:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1186:51:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint))"
										},
										"valueType": {
											"id": 1296,
											"keyType": {
												"id": 1294,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1215:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "1206:30:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
												"typeString": "mapping(uint32 => struct CakeToken.Checkpoint)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1295,
												"name": "Checkpoint",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1291,
												"src": "1225:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$1291_storage_ptr",
													"typeString": "struct CakeToken.Checkpoint"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1263:54:6",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 1303,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "1322:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 1302,
										"keyType": {
											"id": 1300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1331:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1322:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueType": {
											"id": 1301,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1342:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1378:58:6",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 1309,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "1441:122:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1305,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1441:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1307,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1493:69:6",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1306,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1483:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1308,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1483:80:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "1570:79:6",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 1315,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "1654:117:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1311,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1654:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 1313,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1710:60:6",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 1312,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1700:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1314,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1700:71:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "1778:66:6",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 1320,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1883,
									"src": "1849:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1319,
										"keyType": {
											"id": 1317,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1858:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1849:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1318,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1869:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "1897:71:6",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"id": 1329,
									"name": "DelegateChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "1995:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "2022:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "2052:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1994:85:6"
									},
									"src": "1973:107:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "2086:81:6",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"id": 1338,
									"name": "DelegateVotesChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1338,
												"src": "2199:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1338,
												"src": "2225:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2225:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1338,
												"src": "2247:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2247:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2198:65:6"
									},
									"src": "2172:92:6"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "2504:45:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1346,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "2521:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1348,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1347,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2532:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2521:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1349,
												"nodeType": "Return",
												"src": "2514:28:6"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "2270:131:6",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
									},
									"functionSelector": "587cde1e",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "2425:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2424:19:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "2491:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2490:9:6"
									},
									"scope": 1883,
									"src": "2406:143:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2733:56:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2760:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2760:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1360,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "2772:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1357,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "2750:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1362,
												"nodeType": "Return",
												"src": "2743:39:6"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "2554:128:6",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1364,
												"src": "2705:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2704:19:6"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2733:0:6"
									},
									"scope": 1883,
									"src": "2687:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "3385:964:6",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1466,
														"src": "3395:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1380,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3395:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1385,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "3472:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1389,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 495,
																						"src": "3521:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3521:6:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3515:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1387,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3515:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3515:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1386,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "3505:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3505:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1393,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "3547:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3547:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1397,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "3585:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CakeToken_$1883",
																				"typeString": "contract CakeToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CakeToken_$1883",
																				"typeString": "contract CakeToken"
																			}
																		],
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3577:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1395,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3577:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3577:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1383,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3444:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3444:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3444:160:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1382,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3421:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:193:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3395:219:6"
											},
											{
												"assignments": [
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "structHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1466,
														"src": "3625:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1402,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3625:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1407,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "3697:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1408,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "3734:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1409,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "3761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1410,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "3784:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1405,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3669:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3669:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3669:135:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1404,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3646:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3646:168:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3625:189:6"
											},
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1466,
														"src": "3825:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1414,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3825:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3899:10:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 1420,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "3927:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1421,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "3960:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1417,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3865:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3865:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3865:119:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1416,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "3842:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3842:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:169:6"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "signatory",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1466,
														"src": "4005:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1425,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4005:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "4035:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1429,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "4043:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1430,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "4046:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1431,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "4049:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1427,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "4025:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4005:46:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1435,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "4069:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4090:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4082:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4082:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4082:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4069:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4094:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid signature\""
															},
															"value": "CAKE::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c9772d8870faf984838fdb1a6a39869b314cedd021c20fb983e461d778f09aa",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid signature\""
															}
														],
														"id": 1434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "4061:74:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1445,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "4153:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4162:19:6",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1446,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "4162:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1448,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1447,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "4169:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4162:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4153:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4183:36:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid nonce\""
															},
															"value": "CAKE::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa9ee17312be9dc937c6c61d6a03a6c21827d2f9c3e6dfea349c1095e56db22f",
																"typeString": "literal_string \"CAKE::delegateBySig: invalid nonce\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4145:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "4145:75:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1455,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -17,
																"src": "4238:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1456,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "4245:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4238:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4253:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb",
																"typeString": "literal_string \"CAKE::delegateBySig: signature expired\""
															},
															"value": "CAKE::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2975ff3a9c2df4c97fcc8bda6ff60212c199edfef1308a20efc5c659649e98eb",
																"typeString": "literal_string \"CAKE::delegateBySig: signature expired\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4230:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4230:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "4230:64:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1462,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4321:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1463,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "4332:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1461,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "4311:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4311:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1465,
												"nodeType": "Return",
												"src": "4304:38:6"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2795:412:6",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3244:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3271:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3271:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3291:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3291:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3312:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1372,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3312:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3329:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1467,
												"src": "3348:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:129:6"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:0:6"
									},
									"scope": 1883,
									"src": "3212:1137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "4645:146:6",
										"statements": [
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1495,
														"src": "4655:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1475,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4655:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1477,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "4677:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1479,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1478,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "4692:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4677:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4655:45:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1481,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "4717:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4732:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4717:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4783:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4717:67:6",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1484,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "4736:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1486,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "4748:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4736:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1490,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1487,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "4757:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4772:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4757:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4736:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "4736:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1494,
												"nodeType": "Return",
												"src": "4710:74:6"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "4355:183:6",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1496,
												"src": "4568:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4567:17:6"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1496,
												"src": "4632:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4631:9:6"
									},
									"scope": 1883,
									"src": "4543:248:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "5331:1099:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1507,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "5349:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1508,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "5363:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5363:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5349:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5377:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474",
																"typeString": "literal_string \"CAKE::getPriorVotes: not yet determined\""
															},
															"value": "CAKE::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1be2aa7ce8870f4c68a34627ce4514a20d52f005edd6f8bf954781312534474",
																"typeString": "literal_string \"CAKE::getPriorVotes: not yet determined\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5341:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "5341:78:6"
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1627,
														"src": "5430:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1514,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5430:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1519,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1516,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "5452:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1517,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "5467:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5452:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5430:45:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1520,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "5489:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5505:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5489:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "5485:56:6",
												"trueBody": {
													"id": 1525,
													"nodeType": "Block",
													"src": "5508:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5529:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1505,
															"id": 1524,
															"nodeType": "Return",
															"src": "5522:8:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1527,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "5598:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1529,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1528,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "5610:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5598:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1533,
															"indexExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1530,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "5619:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5634:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5619:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5598:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "5598:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1535,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "5650:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5598:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "5594:145:6",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "5663:76:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1537,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "5684:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1539,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1538,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1499,
																			"src": "5696:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5684:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																			"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1543,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1540,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "5705:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5720:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5705:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5684:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																		"typeString": "struct CakeToken.Checkpoint storage ref"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1290,
																"src": "5684:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1505,
															"id": 1545,
															"nodeType": "Return",
															"src": "5677:51:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1548,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "5797:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																	}
																},
																"id": 1550,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1549,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "5809:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5797:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																	"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																}
															},
															"id": 1552,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5818:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5797:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																"typeString": "struct CakeToken.Checkpoint storage ref"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "5797:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1554,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "5833:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5797:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "5793:86:6",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "5846:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5867:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1505,
															"id": 1557,
															"nodeType": "Return",
															"src": "5860:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1627,
														"src": "5889:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1560,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5889:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5904:1:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5889:16:6"
											},
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1627,
														"src": "5915:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1564,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "5915:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1566,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "5930:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5945:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5930:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:31:6"
											},
											{
												"body": {
													"id": 1618,
													"nodeType": "Block",
													"src": "5978:396:6",
													"statements": [
														{
															"assignments": [
																1574
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1574,
																	"mutability": "mutable",
																	"name": "center",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1618,
																	"src": "5992:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 1573,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "5992:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1583,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1575,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "6008:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1576,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1565,
																					"src": "6017:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1577,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1561,
																					"src": "6025:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6017:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 1579,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6016:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6034:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6016:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "6008:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5992:43:6"
														},
														{
															"assignments": [
																1585
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1585,
																	"mutability": "mutable",
																	"name": "cp",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1618,
																	"src": "6076:20:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1291_memory_ptr",
																		"typeString": "struct CakeToken.Checkpoint"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1584,
																		"name": "Checkpoint",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1291,
																		"src": "6076:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1291_storage_ptr",
																			"typeString": "struct CakeToken.Checkpoint"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1591,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1586,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "6099:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1588,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1587,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1499,
																		"src": "6111:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6099:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																		"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																	}
																},
																"id": 1590,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1589,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "6120:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6099:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6076:51:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1592,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "6145:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1291_memory_ptr",
																			"typeString": "struct CakeToken.Checkpoint memory"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1288,
																	"src": "6145:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1594,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "6161:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6145:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1600,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1585,
																			"src": "6232:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$1291_memory_ptr",
																				"typeString": "struct CakeToken.Checkpoint memory"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1288,
																		"src": "6232:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1602,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "6247:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6232:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1615,
																	"nodeType": "Block",
																	"src": "6313:51:6",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1609,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1565,
																					"src": "6331:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1610,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1574,
																						"src": "6339:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1611,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6348:1:6",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6339:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6331:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1614,
																			"nodeType": "ExpressionStatement",
																			"src": "6331:18:6"
																		}
																	]
																},
																"id": 1616,
																"nodeType": "IfStatement",
																"src": "6228:136:6",
																"trueBody": {
																	"id": 1608,
																	"nodeType": "Block",
																	"src": "6260:47:6",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1604,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1561,
																					"src": "6278:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 1605,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "6286:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "6278:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 1607,
																			"nodeType": "ExpressionStatement",
																			"src": "6278:14:6"
																		}
																	]
																}
															},
															"id": 1617,
															"nodeType": "IfStatement",
															"src": "6141:223:6",
															"trueBody": {
																"id": 1599,
																"nodeType": "Block",
																"src": "6174:48:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1596,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "6199:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$1291_memory_ptr",
																					"typeString": "struct CakeToken.Checkpoint memory"
																				}
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1290,
																			"src": "6199:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1505,
																		"id": 1598,
																		"nodeType": "Return",
																		"src": "6192:15:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1570,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "5963:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1571,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "5971:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5963:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"nodeType": "WhileStatement",
												"src": "5956:418:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1620,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "6390:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																}
															},
															"id": 1622,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1621,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "6402:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6390:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
															}
														},
														"id": 1624,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1623,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6411:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6390:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
															"typeString": "struct CakeToken.Checkpoint storage ref"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1290,
													"src": "6390:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1626,
												"nodeType": "Return",
												"src": "6383:40:6"
											}
										]
									},
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "4797:411:6",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "5236:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "5253:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5253:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5235:35:6"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "5318:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5318:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5317:9:6"
									},
									"scope": 1883,
									"src": "5213:1217:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "6514:350:6",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "6524:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1637,
														"name": "_delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "6550:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1639,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1638,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "6561:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6550:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:47:6"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "6581:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1644,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "6618:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1643,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "6608:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6608:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6581:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1647,
															"name": "_delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "6683:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1648,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "6694:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6683:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1650,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "6707:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6683:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "6683:33:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1654,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "6748:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1655,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "6759:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1656,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "6776:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1653,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "6732:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6732:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "EmitStatement",
												"src": "6727:59:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1660,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "6812:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1661,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "6829:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1662,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "6840:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1659,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "6797:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6797:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "6797:60:6"
											}
										]
									},
									"documentation": null,
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "delegator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "6455:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "6474:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6454:38:6"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6514:0:6"
									},
									"scope": 1883,
									"src": "6436:428:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "6951:848:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1675,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "6965:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1676,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "6975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6965:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "6985:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6985:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6965:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1771,
												"nodeType": "IfStatement",
												"src": "6961:832:6",
												"trueBody": {
													"id": 1770,
													"nodeType": "Block",
													"src": "6997:796:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1682,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "7015:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7033:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7025:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1683,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7025:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7025:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7015:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1725,
															"nodeType": "IfStatement",
															"src": "7011:379:6",
															"trueBody": {
																"id": 1724,
																"nodeType": "Block",
																"src": "7037:353:6",
																"statements": [
																	{
																		"assignments": [
																			1689
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1689,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1724,
																				"src": "7102:16:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1688,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7102:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1693,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1690,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1303,
																				"src": "7121:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1692,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1691,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1668,
																				"src": "7136:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7121:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7102:41:6"
																	},
																	{
																		"assignments": [
																			1695
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1695,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1724,
																				"src": "7161:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1694,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7161:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1709,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1696,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1689,
																					"src": "7181:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1697,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7193:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7181:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7240:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7181:60:6",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1699,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "7197:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1701,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1700,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1668,
																							"src": "7209:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7197:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																							"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1705,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1704,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1702,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1689,
																							"src": "7217:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1703,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7229:1:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7217:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7197:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																						"typeString": "struct CakeToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1706,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1290,
																				"src": "7197:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7161:80:6"
																	},
																	{
																		"assignments": [
																			1711
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1711,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1724,
																				"src": "7259:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1710,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7259:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1716,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1714,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1672,
																					"src": "7293:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1712,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1695,
																					"src": "7279:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 192,
																				"src": "7279:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7279:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7259:41:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1718,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1668,
																					"src": "7335:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1719,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1689,
																					"src": "7343:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1720,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1695,
																					"src": "7354:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1721,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1711,
																					"src": "7365:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1717,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1846,
																				"src": "7318:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7318:57:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1723,
																		"nodeType": "ExpressionStatement",
																		"src": "7318:57:6"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1726,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "7408:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7426:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7418:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1727,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7418:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7418:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "7408:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1769,
															"nodeType": "IfStatement",
															"src": "7404:379:6",
															"trueBody": {
																"id": 1768,
																"nodeType": "Block",
																"src": "7430:353:6",
																"statements": [
																	{
																		"assignments": [
																			1733
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1733,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1768,
																				"src": "7495:16:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 1732,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "7495:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1737,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1734,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1303,
																				"src": "7514:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 1736,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1735,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1670,
																				"src": "7529:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7514:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7495:41:6"
																	},
																	{
																		"assignments": [
																			1739
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1739,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1768,
																				"src": "7554:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1738,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7554:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1753,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 1742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1740,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1733,
																					"src": "7574:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7586:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "7574:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7633:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "7574:60:6",
																			"trueExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 1743,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "7590:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																							}
																						},
																						"id": 1745,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 1744,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1670,
																							"src": "7602:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7590:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																							"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																						}
																					},
																					"id": 1749,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 1748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1746,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1733,
																							"src": "7610:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1747,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7622:1:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7610:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7590:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																						"typeString": "struct CakeToken.Checkpoint storage ref"
																					}
																				},
																				"id": 1750,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1290,
																				"src": "7590:40:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7554:80:6"
																	},
																	{
																		"assignments": [
																			1755
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1755,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1768,
																				"src": "7652:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1754,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7652:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1760,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1758,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1672,
																					"src": "7686:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1756,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1739,
																					"src": "7672:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "7672:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7672:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7652:41:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1762,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1670,
																					"src": "7728:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1763,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1733,
																					"src": "7736:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1764,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1739,
																					"src": "7747:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1765,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "7758:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1761,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1846,
																				"src": "7711:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint32,uint256,uint256)"
																				}
																			},
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7711:57:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1767,
																		"nodeType": "ExpressionStatement",
																		"src": "7711:57:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "srcRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1773,
												"src": "6894:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "dstRep",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1773,
												"src": "6910:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6910:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1773,
												"src": "6926:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6893:48:6"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6951:0:6"
									},
									"scope": 1883,
									"src": "6870:929:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "7966:525:6",
										"statements": [
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "blockNumber",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1845,
														"src": "7976:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1784,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "7976:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1787,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "8004:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8004:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8018:54:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f",
																"typeString": "literal_string \"CAKE::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "CAKE::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a024375c1b834d2d05951566d035f756f78479a9dc650436c3ba2937d280012f",
																"typeString": "literal_string \"CAKE::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 1786,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "7997:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7997:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7976:97:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1792,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "8088:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8103:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8088:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1795,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "8108:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																		}
																	},
																	"id": 1797,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1796,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "8120:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8108:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																		"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																	}
																},
																"id": 1801,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1798,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "8131:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8146:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8131:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8108:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1288,
															"src": "8108:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1803,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "8162:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "8108:65:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8088:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1837,
													"nodeType": "Block",
													"src": "8263:155:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1818,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "8277:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																			}
																		},
																		"id": 1821,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1819,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1775,
																			"src": "8289:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8277:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																			"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																		}
																	},
																	"id": 1822,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1820,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "8300:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8277:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																		"typeString": "struct CakeToken.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1824,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1785,
																			"src": "8327:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1825,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "8340:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1823,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "8316:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$1291_storage_ptr_$",
																			"typeString": "type(struct CakeToken.Checkpoint storage pointer)"
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8316:33:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$1291_memory_ptr",
																		"typeString": "struct CakeToken.Checkpoint memory"
																	}
																},
																"src": "8277:72:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																	"typeString": "struct CakeToken.Checkpoint storage ref"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "8277:72:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1829,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "8363:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 1831,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1830,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "8378:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8363:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1832,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "8391:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8406:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8391:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8363:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1836,
															"nodeType": "ExpressionStatement",
															"src": "8363:44:6"
														}
													]
												},
												"id": 1838,
												"nodeType": "IfStatement",
												"src": "8084:334:6",
												"trueBody": {
													"id": 1817,
													"nodeType": "Block",
													"src": "8175:82:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1806,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1298,
																				"src": "8189:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct CakeToken.Checkpoint storage ref))"
																				}
																			},
																			"id": 1811,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1807,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1775,
																				"src": "8201:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8189:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1291_storage_$",
																				"typeString": "mapping(uint32 => struct CakeToken.Checkpoint storage ref)"
																			}
																		},
																		"id": 1812,
																		"indexExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1808,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "8212:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8227:1:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8212:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8189:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$1291_storage",
																			"typeString": "struct CakeToken.Checkpoint storage ref"
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1290,
																	"src": "8189:46:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1814,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "8238:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8189:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1816,
															"nodeType": "ExpressionStatement",
															"src": "8189:57:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1840,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "8454:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1841,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "8465:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1842,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "8475:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1839,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "8433:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8433:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "EmitStatement",
												"src": "8428:56:6"
											}
										]
									},
									"documentation": null,
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "delegatee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7840:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7867:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1776,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7867:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "oldVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7896:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "newVotes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7922:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7830:114:6"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7966:0:6"
									},
									"scope": 1883,
									"src": "7805:686:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "8580:75:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1856,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "8598:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8602:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8605:2:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "8598:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "8609:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8590:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8590:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "8590:32:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1866,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "8646:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8639:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1864,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8639:6:6",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8639:9:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1868,
												"nodeType": "Return",
												"src": "8632:16:6"
											}
										]
									},
									"documentation": null,
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1870,
												"src": "8513:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8513:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1870,
												"src": "8521:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8521:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8512:36:6"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1870,
												"src": "8572:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1852,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8572:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8571:8:6"
									},
									"scope": 1883,
									"src": "8497:158:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "8712:98:6",
										"statements": [
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1881,
														"src": "8722:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8722:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8722:15:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8756:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8758:20:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "8769:7:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:9:6"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nodeType": "YulIdentifier",
																	"src": "8758:7:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1876,
														"isOffset": false,
														"isSlot": false,
														"src": "8758:7:6",
														"valueSize": 1
													}
												],
												"id": 1878,
												"nodeType": "InlineAssembly",
												"src": "8747:33:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1879,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1876,
													"src": "8796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1874,
												"id": 1880,
												"nodeType": "Return",
												"src": "8789:14:6"
											}
										]
									},
									"documentation": null,
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8680:2:6"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1882,
												"src": "8706:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8706:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8705:6:6"
									},
									"scope": 1883,
									"src": "8661:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1884,
							"src": "128:8684:6"
						}
					],
					"src": "0:8812:6"
				},
				"id": 6
			}
		}
	}
}