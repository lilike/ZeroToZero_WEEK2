{
	"id": "e6b11e1ae36959c70497aec4fedd4856",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20MinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n\n    function __ERC20_init(string memory name, string memory symbol) internal initializer {\n        __Context_init_unchained();\n        __ERC20_init_unchained(name, symbol);\n    }\n\n    function __ERC20_init_unchained(string memory name, string memory symbol) internal initializer {\n\n\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n\n    }\n\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n\n    uint256[44] private __gap;\n}\n"
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"content": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.6.0;\nimport \"../Initializable.sol\";\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract ContextUpgradeSafe is Initializable {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n\n\n    }\n\n\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"ContextUpgradeSafe": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":556:1305  contract ContextUpgradeSafe is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":556:1305  contract ContextUpgradeSafe is Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081d929436a2f85f9d0ea8ac9ca9d1ffdc8f4607a88172038d99a772ca1dc3f2664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122081d929436a2f85f9d0ea8ac9ca9d1ffdc8f4607a88172038d99a772ca1dc3f2664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xD9 0x29 NUMBER PUSH11 0x2F85F9D0EA8AC9CA9D1FFD 0xC8 DELEGATECALL PUSH1 0x7A DUP9 OR KECCAK256 CODESIZE 0xD9 SWAP11 PUSH24 0x2CA1DC3F2664736F6C634300060C00330000000000000000 ",
							"sourceMap": "556:749:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122081d929436a2f85f9d0ea8ac9ca9d1ffdc8f4607a88172038d99a772ca1dc3f2664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xD9 0x29 NUMBER PUSH11 0x2F85F9D0EA8AC9CA9D1FFD 0xC8 DELEGATECALL PUSH1 0x7A DUP9 OR KECCAK256 CODESIZE 0xD9 SWAP11 PUSH24 0x2CA1DC3F2664736F6C634300060C00330000000000000000 ",
							"sourceMap": "556:749:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"__Context_init()": "infinite",
								"__Context_init_unchained()": "infinite",
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 1305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081d929436a2f85f9d0ea8ac9ca9d1ffdc8f4607a88172038d99a772ca1dc3f2664736f6c634300060c0033",
									".code": [
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 1305,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":\"ContextUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:ContextUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"title": "Initializable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ca7b89c48edc34aa1fa41b99c91f8c43ff5d84babee3f45486a18fa73ef9a63a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ca7b89c48edc34aa1fa41b99c91f8c43ff5d84babee3f45486a18fa73ef9a63a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH28 0x89C48EDC34AA1FA41B99C91F8C43FF5D84BABEE3F45486A18FA73EF9 0xA6 GASPRICE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "657:1357:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ca7b89c48edc34aa1fa41b99c91f8c43ff5d84babee3f45486a18fa73ef9a63a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA PUSH28 0x89C48EDC34AA1FA41B99C91F8C43FF5D84BABEE3F45486A18FA73EF9 0xA6 GASPRICE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "657:1357:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca7b89c48edc34aa1fa41b99c91f8c43ff5d84babee3f45486a18fa73ef9a63a64736f6c634300060c0033",
									".code": [
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"title\":\"Initializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220234f701c51d69967787da1e51e734603c0265cf8fd3d93eac334d3e95774068764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220234f701c51d69967787da1e51e734603c0265cf8fd3d93eac334d3e95774068764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F PUSH17 0x1C51D69967787DA1E51E734603C0265CF8 REVERT RETURNDATASIZE SWAP4 0xEA 0xC3 CALLVALUE 0xD3 0xE9 JUMPI PUSH21 0x68764736F6C634300060C00330000000000000000 ",
							"sourceMap": "589:4588:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220234f701c51d69967787da1e51e734603c0265cf8fd3d93eac334d3e95774068764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F PUSH17 0x1C51D69967787DA1E51E734603C0265CF8 REVERT RETURNDATASIZE SWAP4 0xEA 0xC3 CALLVALUE 0xD3 0xE9 JUMPI PUSH21 0x68764736F6C634300060C00330000000000000000 ",
							"sourceMap": "589:4588:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220234f701c51d69967787da1e51e734603c0265cf8fd3d93eac334d3e95774068764736f6c634300060c0033",
									".code": [
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol": {
				"ERC20UpgradeSafe": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20MinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":1340:11073  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":1340:11073  contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2469:2550  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4505:4671  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3512:3610  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5131:5448  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3371:3452  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5843:6058  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3668:3785  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2663:2748  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6545:6811  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3988:4160  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4218:4367  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2469:2550  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2506:2519  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2538:2543  _name */\n      0x68\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2531:2543  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2469:2550  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4505:4671  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4588:4592  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4604:4643  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4613:4625  _msgSender() */\n      tag_58\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4613:4623  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4613:4625  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4627:4634  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4636:4642  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4604:4612  _approve */\n      tag_60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4604:4643  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4660:4664  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4653:4664  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4505:4671  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3512:3610  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3565:3572  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3591:3603  _totalSupply */\n      sload(0x67)\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3584:3603  return _totalSupply */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3512:3610  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5131:5448  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5237:5241  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5253:5289  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5263:5269  sender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5271:5280  recipient */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5282:5288  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5253:5262  _transfer */\n      tag_64\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5253:5289  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5299:5420  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5308:5314  sender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5316:5328  _msgSender() */\n      tag_66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5316:5326  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5316:5328  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5419  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5368:5374  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5419  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5341  _allowances */\n      0x66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5349  _allowances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5342:5348  sender */\n      dup12\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5349  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5363  _allowances[sender][_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5350:5362  _msgSender() */\n      tag_68\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5350:5360  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5350:5362  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5363  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5367  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5330:5419  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5299:5307  _approve */\n      tag_60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5299:5420  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5437:5441  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5430:5441  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5131:5448  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3371:3452  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3412:3417  uint8 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3436:3445  _decimals */\n      0x6a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3429:3445  return _decimals */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3371:3452  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5843:6058  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5931:5935  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5947:6030  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5956:5968  _msgSender() */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5956:5966  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5956:5968  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5970:5977  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6029  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6018:6028  addedValue */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:5990  _allowances */\n      0x66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6004  _allowances[_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_75\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6004  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6013  _allowances[_msgSender()][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6005:6012  spender */\n      dup10\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6013  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6017  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5979:6029  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5947:5955  _approve */\n      tag_60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5947:6030  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6047:6051  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6040:6051  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":5843:6058  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3668:3785  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3734:3741  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3760:3769  _balances */\n      0x65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3760:3778  _balances[account] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3770:3777  account */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3760:3778  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3753:3778  return _balances[account] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3668:3785  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2663:2748  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2702:2715  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2734:2741  _symbol */\n      0x69\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2727:2741  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":2663:2748  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6545:6811  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6638:6642  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6654:6783  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6663:6675  _msgSender() */\n      tag_84\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6663:6673  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6663:6675  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6677:6684  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6782  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6725:6740  subtractedValue */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6782  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6697  _allowances */\n      0x66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6711  _allowances[_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6698:6710  _msgSender() */\n      tag_86\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6698:6708  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6698:6710  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6711  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6720  _allowances[_msgSender()][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6712:6719  spender */\n      dup11\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6720  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6724  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6686:6782  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6654:6662  _approve */\n      tag_60\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6654:6783  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6800:6804  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6793:6804  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":6545:6811  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3988:4160  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4074:4078  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4090:4132  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4100:4112  _msgSender() */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4100:4110  _msgSender */\n      tag_59\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4100:4112  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4114:4123  recipient */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4125:4131  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4090:4099  _transfer */\n      tag_64\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4090:4132  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4149:4153  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4142:4153  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":3988:4160  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4218:4367  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4307:4314  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4333:4344  _allowances */\n      0x66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4333:4351  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4345:4350  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4333:4351  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4333:4360  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4352:4359  spender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4333:4360  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4326:4360  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":4218:4367  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":984:999  address payable */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":1018:1028  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":1011:1028  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":931:1035  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9609:9949  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9727:9728  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9710:9729  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9710:9715  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9710:9729  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9702:9770  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9807:9808  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9788:9809  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9788:9795  spender */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9788:9809  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9780:9848  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9889:9895  amount */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9870  _allowances */\n      0x66\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9877  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9871:9876  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9877  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9886  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9878:9885  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9886  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9859:9895  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9926:9933  spender */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9910:9942  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9919:9924  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9910:9942  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9935:9941  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9910:9942  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":9609:9949  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7285:7815  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7408:7409  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7390:7396  sender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7491:7492  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7470:7479  recipient */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7544:7591  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7565:7571  sender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7573:7582  recipient */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7584:7590  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7544:7564  _beforeTokenTransfer */\n      tag_99\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7544:7591  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7693  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7644:7650  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7693  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7631  _balances */\n      0x65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7639  _balances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7632:7638  sender */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7639  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7643  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7622:7693  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7602:7611  _balances */\n      0x65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7602:7619  _balances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7612:7618  sender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7602:7619  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7602:7693  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7758  _balances[recipient].add(amount) */\n      tag_101\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7751:7757  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7735  _balances */\n      0x65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7746  _balances[recipient] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7736:7745  recipient */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7746  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7750  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7726:7758  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7703:7712  _balances */\n      0x65\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7703:7723  _balances[recipient] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7713:7722  recipient */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7703:7723  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7703:7758  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7790:7799  recipient */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7773:7808  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7782:7788  sender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7773:7808  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7801:7807  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7773:7808  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":7285:7815  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1810:1811  a */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      gt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1836:1845  uint256 c */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1852:1853  b */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1848:1849  a */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1836:1853  uint256 c = a - b */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1871:1872  c */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1864:1872  return c */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":10947:11039  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220abab5f8ee3d61c7a6764bd387ac8bab4ff504c043db2d24d9277be3fd1b2ea8c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506110e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082f565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fc565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091a565b6040518082815260200191505060405180910390f35b606060688054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a1565b84846109a9565b6001905092915050565b6000606754905090565b60006105ae848484610ba0565b61066f846105ba6109a1565b61066a8560405180606001604052806028815260200161101e60289139606660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b6109a9565b600190509392505050565b6000606a60009054906101000a900460ff16905090565b600061073a61069e6109a1565b8461073585606660006106af6109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2590919063ffffffff16565b6109a9565b6001905092915050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060698054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b60006108f261083c6109a1565b846108ed8560405180606001604052806025815260200161108f60259139606660006108666109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b6109a9565b6001905092915050565b60006109106109096109a1565b8484610ba0565b6001905092915050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd66022913960400191505060405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110466025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fb36023913960400191505060405180910390fd5b610cb7838383610fad565b610d2381604051806060016040528060268152602001610ff860269139606560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db881606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2590919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed7578082015181840152602081019050610ebc565b50505050905090810190601f168015610f045780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220abab5f8ee3d61c7a6764bd387ac8bab4ff504c043db2d24d9277be3fd1b2ea8c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x66 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A1 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x66 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF25 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x825 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x808 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH2 0x83C PUSH2 0x9A1 JUMP JUMPDEST DUP5 PUSH2 0x8ED DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x66 PUSH1 0x0 PUSH2 0x866 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 PUSH2 0x909 PUSH2 0x9A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x106B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1046 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB7 DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xD23 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x65 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB8 DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF25 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEBC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF04 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220ABAB 0x5F DUP15 0xE3 0xD6 SHR PUSH27 0x6764BD387AC8BAB4FF504C043DB2D24D9277BE3FD1B2EA8C64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1340:9733:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082f565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fc565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091a565b6040518082815260200191505060405180910390f35b606060688054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a1565b84846109a9565b6001905092915050565b6000606754905090565b60006105ae848484610ba0565b61066f846105ba6109a1565b61066a8560405180606001604052806028815260200161101e60289139606660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b6109a9565b600190509392505050565b6000606a60009054906101000a900460ff16905090565b600061073a61069e6109a1565b8461073585606660006106af6109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2590919063ffffffff16565b6109a9565b6001905092915050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060698054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b60006108f261083c6109a1565b846108ed8560405180606001604052806025815260200161108f60259139606660006108666109a1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b6109a9565b6001905092915050565b60006109106109096109a1565b8484610ba0565b6001905092915050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd66022913960400191505060405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110466025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fb36023913960400191505060405180910390fd5b610cb7838383610fad565b610d2381604051806060016040528060268152602001610ff860269139606560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e659092919063ffffffff16565b606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db881606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2590919063ffffffff16565b606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed7578082015181840152602081019050610ebc565b50505050905090810190601f168015610f045780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220abab5f8ee3d61c7a6764bd387ac8bab4ff504c043db2d24d9277be3fd1b2ea8c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x68 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x66 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A1 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x66 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF25 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x69 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x825 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x808 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F2 PUSH2 0x83C PUSH2 0x9A1 JUMP JUMPDEST DUP5 PUSH2 0x8ED DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x66 PUSH1 0x0 PUSH2 0x866 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 PUSH2 0x909 PUSH2 0x9A1 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x106B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x66 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1046 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB7 DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xD23 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x65 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE65 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB8 DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF25 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEBC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF04 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220ABAB 0x5F DUP15 0xE3 0xD6 SHR PUSH27 0x6764BD387AC8BAB4FF504C043DB2D24D9277BE3FD1B2EA8C64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1340:9733:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4505:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3512:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5131:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3371:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5843:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3668:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2663:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6545:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3988:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4218:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2469:81;2506:13;2538:5;2531:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:81;:::o;4505:166::-;4588:4;4604:39;4613:12;:10;:12::i;:::-;4627:7;4636:6;4604:8;:39::i;:::-;4660:4;4653:11;;4505:166;;;;:::o;3512:98::-;3565:7;3591:12;;3584:19;;3512:98;:::o;5131:317::-;5237:4;5253:36;5263:6;5271:9;5282:6;5253:9;:36::i;:::-;5299:121;5308:6;5316:12;:10;:12::i;:::-;5330:89;5368:6;5330:89;;;;;;;;;;;;;;;;;:11;:19;5342:6;5330:19;;;;;;;;;;;;;;;:33;5350:12;:10;:12::i;:::-;5330:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5299:8;:121::i;:::-;5437:4;5430:11;;5131:317;;;;;:::o;3371:81::-;3412:5;3436:9;;;;;;;;;;;3429:16;;3371:81;:::o;5843:215::-;5931:4;5947:83;5956:12;:10;:12::i;:::-;5970:7;5979:50;6018:10;5979:11;:25;5991:12;:10;:12::i;:::-;5979:25;;;;;;;;;;;;;;;:34;6005:7;5979:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5947:8;:83::i;:::-;6047:4;6040:11;;5843:215;;;;:::o;3668:117::-;3734:7;3760:9;:18;3770:7;3760:18;;;;;;;;;;;;;;;;3753:25;;3668:117;;;:::o;2663:85::-;2702:13;2734:7;2727:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:85;:::o;6545:266::-;6638:4;6654:129;6663:12;:10;:12::i;:::-;6677:7;6686:96;6725:15;6686:96;;;;;;;;;;;;;;;;;:11;:25;6698:12;:10;:12::i;:::-;6686:25;;;;;;;;;;;;;;;:34;6712:7;6686:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6654:8;:129::i;:::-;6800:4;6793:11;;6545:266;;;;:::o;3988:172::-;4074:4;4090:42;4100:12;:10;:12::i;:::-;4114:9;4125:6;4090:9;:42::i;:::-;4149:4;4142:11;;3988:172;;;;:::o;4218:149::-;4307:7;4333:11;:18;4345:5;4333:18;;;;;;;;;;;;;;;:27;4352:7;4333:27;;;;;;;;;;;;;;;;4326:34;;4218:149;;;;:::o;931:104:0:-;984:15;1018:10;1011:17;;931:104;:::o;9609:340:3:-;9727:1;9710:19;;:5;:19;;;;9702:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9807:1;9788:21;;:7;:21;;;;9780:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9889:6;9859:11;:18;9871:5;9859:18;;;;;;;;;;;;;;;:27;9878:7;9859:27;;;;;;;;;;;;;;;:36;;;;9926:7;9910:32;;9919:5;9910:32;;;9935:6;9910:32;;;;;;;;;;;;;;;;;;9609:340;;;:::o;7285:530::-;7408:1;7390:20;;:6;:20;;;;7382:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7491:1;7470:23;;:9;:23;;;;7462:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;7622:71;7644:6;7622:71;;;;;;;;;;;;;;;;;:9;:17;7632:6;7622:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7602:9;:17;7612:6;7602:17;;;;;;;;;;;;;;;:91;;;;7726:32;7751:6;7726:9;:20;7736:9;7726:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7703:9;:20;7713:9;7703:20;;;;;;;;;;;;;;;:55;;;;7790:9;7773:35;;7782:6;7773:35;;;7801:6;7773:35;;;;;;;;;;;;;;;;;;7285:530;;;:::o;1692:187:2:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;10947:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "865800",
								"executionCost": "903",
								"totalCost": "866703"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 11073,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abab5f8ee3d61c7a6764bd387ac8bab4ff504c043db2d24d9277be3fd1b2ea8c64736f6c634300060c0033",
									".code": [
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 11073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4613,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4613,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4613,
											"end": 4625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4625,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4613,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4642,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4604,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4505,
											"end": 4671,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3591,
											"end": 3603,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3610,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5263,
											"end": 5269,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5280,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5253,
											"end": 5289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5289,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5253,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5308,
											"end": 5314,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5316,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5341,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5349,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5350,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5350,
											"end": 5362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5362,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5350,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5363,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5330,
											"end": 5367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5330,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5299,
											"end": 5420,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5420,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5299,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5430,
											"end": 5441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5430,
											"end": 5441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5131,
											"end": 5448,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 3,
											"value": "6A"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3445,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3452,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5956,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 5990,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6012,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6013,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5979,
											"end": 6017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5979,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5947,
											"end": 6030,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5947,
											"end": 6030,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5947,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6051,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 6058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3734,
											"end": 3741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3785,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2748,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6638,
											"end": 6642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6663,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6725,
											"end": 6740,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6698,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6698,
											"end": 6710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6698,
											"end": 6710,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6698,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6719,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6720,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6686,
											"end": 6724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6686,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6654,
											"end": 6783,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6654,
											"end": 6783,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6654,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6804,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6793,
											"end": 6804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6811,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4090,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4090,
											"end": 4132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4090,
											"end": 4132,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4090,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4142,
											"end": 4153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4160,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4218,
											"end": 4367,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1028,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9715,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9729,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9702,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9807,
											"end": 9808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9780,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9889,
											"end": 9895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9876,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9878,
											"end": 9885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9895,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9926,
											"end": 9933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9919,
											"end": 9924,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9942,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9609,
											"end": 9949,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7644,
											"end": 7650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7639,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7622,
											"end": 7643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7622,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7693,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7735,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7745,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7746,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7726,
											"end": 7750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7713,
											"end": 7722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7758,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7788,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7808,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7285,
											"end": 7815,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11039,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20MinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":\"ERC20UpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x9c2d859bc9de93ced0875d226598e56067fe4d6b2dde0e1fd53ca60fa9603db0\",\"urls\":[\"bzz-raw://5df1baba4ea42a94d0e0aed4a87271369ef2cd54d86e89cab7ef1428ff387210\",\"dweb:/ipfs/QmV5ErriAFQWqEPAfWhJ6DxmujH6vBPB3F5Breaq9vUWGu\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 53,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 118,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 339,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_balances",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 345,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_allowances",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 347,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "103",
								"type": "t_uint256"
							},
							{
								"astId": 349,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_name",
								"offset": 0,
								"slot": "104",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_symbol",
								"offset": 0,
								"slot": "105",
								"type": "t_string_storage"
							},
							{
								"astId": 353,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "_decimals",
								"offset": 0,
								"slot": "106",
								"type": "t_uint8"
							},
							{
								"astId": 848,
								"contract": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:ERC20UpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "107",
								"type": "t_array(t_uint256)44_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)44_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[44]",
								"numberOfBytes": "1408"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":93:2605  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":93:2605  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009d8fe2bff736600adf4271259ea10c1f93e8978c2048dc117aa62a45ae7a5b464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009d8fe2bff736600adf4271259ea10c1f93e8978c2048dc117aa62a45ae7a5b464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xD8 INVALID 0x2B SELFDESTRUCT PUSH20 0x6600ADF4271259EA10C1F93E8978C2048DC117AA PUSH3 0xA45AE7 0xA5 0xB4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "93:2512:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009d8fe2bff736600adf4271259ea10c1f93e8978c2048dc117aa62a45ae7a5b464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xD8 INVALID 0x2B SELFDESTRUCT PUSH20 0x6600ADF4271259EA10C1F93E8978C2048DC117AA PUSH3 0xA45AE7 0xA5 0xB4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "93:2512:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009d8fe2bff736600adf4271259ea10c1f93e8978c2048dc117aa62a45ae7a5b464736f6c634300060c0033",
									".code": [
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"ContextUpgradeSafe": [
							44
						]
					},
					"id": 45,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
							"file": "../Initializable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 120,
							"src": "24:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 119,
										"src": "587:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$119",
											"typeString": "contract Initializable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "587:13:0"
								}
							],
							"contractDependencies": [
								119
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								119
							],
							"name": "ContextUpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "809:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 9,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "819:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "819:26:0"
											}
										]
									},
									"documentation": null,
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 7,
											"modifierName": {
												"argumentTypes": null,
												"id": 6,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "797:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "797:11:0"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:0:0"
									},
									"scope": 44,
									"src": "762:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "915:9:0",
										"statements": []
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 16,
											"modifierName": {
												"argumentTypes": null,
												"id": 15,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "903:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "903:11:0"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:0:0"
									},
									"scope": 44,
									"src": "858:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1001:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1018:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1018:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 23,
												"id": 26,
												"nodeType": "Return",
												"src": "1011:17:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "983:17:0"
									},
									"scope": 44,
									"src": "931:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1106:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "1116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
														"typeString": "contract ContextUpgradeSafe"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1116:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 35,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1256:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1256:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 32,
												"id": 37,
												"nodeType": "Return",
												"src": "1249:15:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "1092:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 30,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1091:14:0"
									},
									"scope": 44,
									"src": "1041:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 44,
									"src": "1277:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1277:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 42,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1285:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1277:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 45,
							"src": "556:749:0"
						}
					],
					"src": "0:1306:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							119
						]
					},
					"id": 120,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "35:621:1",
								"text": " @title Initializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors."
							},
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "685:69:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 50,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "757:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 49,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "757:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "786:87:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 53,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "876:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 52,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1010:313:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1024:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 58,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "1040:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1040:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1024:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1059:12:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1060:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1024:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1073:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1016:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1016:106:1"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 91,
														"src": "1129:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 67,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1129:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"argumentTypes": null,
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1151:13:1",
													"subExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1152:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1129:35:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 72,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "1174:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1170:80:1",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1190:60:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1198:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1213:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1198:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "1198:19:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "1225:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1239:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1225:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "1225:18:1"
														}
													]
												}
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "1256:1:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 84,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "1268:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1264:55:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1284:35:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 85,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1292:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1307:5:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1292:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 88,
															"nodeType": "ExpressionStatement",
															"src": "1292:20:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "906:78:1",
										"text": " @dev Modifier to use in the initializer function of a contract."
									},
									"id": 92,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:1"
									},
									"src": "987:336:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1462:445:1",
										"statements": [
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "1797:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 98,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1797:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 104,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 102,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "1820:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$119",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$119",
																"typeString": "contract Initializable"
															}
														],
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1812:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 100,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1812:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1797:28:1"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "1831:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1831:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:10:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1856:27:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1858:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "1876:4:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1864:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:17:1"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "1858:2:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "1858:2:1",
														"valueSize": 1
													},
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "1876:4:1",
														"valueSize": 1
													}
												],
												"id": 108,
												"nodeType": "InlineAssembly",
												"src": "1847:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1895:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1901:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 97,
												"id": 112,
												"nodeType": "Return",
												"src": "1888:14:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1327:79:1",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "1456:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1455:6:1"
									},
									"scope": 119,
									"src": "1409:498:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 119,
									"src": "1982:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 115,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1982:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 117,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 116,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1990:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1982:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 120,
							"src": "657:1357:1"
						}
					],
					"src": "0:2015:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							315
						]
					},
					"id": 316,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 121,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "25:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "901:109:2",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 147,
														"src": "911:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 134,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 135,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 139,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 140,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "951:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "938:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 145,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "1002:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 146,
												"nodeType": "Return",
												"src": "995:8:2"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "612:217:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "847:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "858:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 315,
									"src": "834:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1341:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 159,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1362:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 160,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1365:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 158,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															165,
															193
														],
														"referencedDeclaration": 193,
														"src": "1358:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 157,
												"id": 163,
												"nodeType": "Return",
												"src": "1351:50:2"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "1016:253:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "1287:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "1298:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "1332:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:2"
									},
									"scope": 315,
									"src": "1274:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1787:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 178,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1805:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 179,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 181,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "1813:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1797:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1797:29:2"
											},
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "1836:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1836:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1848:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1852:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1836:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 190,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 185,
													"src": "1871:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 176,
												"id": 191,
												"nodeType": "Return",
												"src": "1864:8:2"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1414:273:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1705:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1716:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1727:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:50:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1778:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1777:9:2"
									},
									"scope": 315,
									"src": "1692:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2186:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 203,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "2418:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2418:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 209,
												"nodeType": "IfStatement",
												"src": "2414:45:2",
												"trueBody": {
													"id": 208,
													"nodeType": "Block",
													"src": "2426:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 202,
															"id": 207,
															"nodeType": "Return",
															"src": "2440:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 227,
														"src": "2469:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2469:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 215,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "2481:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2485:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2481:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2469:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 217,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "2504:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 218,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "2508:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2504:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2513:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2496:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 225,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "2570:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 226,
												"nodeType": "Return",
												"src": "2563:8:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1885:229:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "2132:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "2143:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:22:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 228,
												"src": "2177:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2176:9:2"
									},
									"scope": 315,
									"src": "2119:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "3100:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 239,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "3121:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3124:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3127:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 238,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															245,
															273
														],
														"referencedDeclaration": 273,
														"src": "3117:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 237,
												"id": 243,
												"nodeType": "Return",
												"src": "3110:46:2"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2584:444:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "3046:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "3057:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3045:22:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "3091:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3090:9:2"
									},
									"scope": 315,
									"src": "3033:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3733:243:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "3817:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3817:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 261,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3824:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3809:28:2"
											},
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 272,
														"src": "3847:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3847:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3859:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3863:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3859:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 270,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "3968:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 271,
												"nodeType": "Return",
												"src": "3961:8:2"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "3169:464:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "3651:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "3662:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "3673:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3673:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3650:50:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "3724:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3723:9:2"
									},
									"scope": 315,
									"src": "3638:338:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "4487:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 284,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4508:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 285,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4511:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 283,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															290,
															314
														],
														"referencedDeclaration": 314,
														"src": "4504:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 288,
												"nodeType": "Return",
												"src": "4497:44:2"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "3982:433:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4433:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4444:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:22:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "4478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4477:9:2"
									},
									"scope": 315,
									"src": "4420:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "5107:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "5125:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5130:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5125:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 306,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5133:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5117:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5117:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5117:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5163:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 310,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5167:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 312,
												"nodeType": "Return",
												"src": "5156:12:2"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "4554:453:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "5025:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "5036:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "5047:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5024:50:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "5098:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:9:2"
									},
									"scope": 315,
									"src": "5012:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "589:4588:2"
						}
					],
					"src": "0:5178:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20UpgradeSafe": [
							849
						]
					},
					"id": 850,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 318,
							"nodeType": "ImportDirective",
							"scope": 850,
							"sourceUnit": 45,
							"src": "25:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 319,
							"nodeType": "ImportDirective",
							"scope": 850,
							"sourceUnit": 928,
							"src": "57:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 320,
							"nodeType": "ImportDirective",
							"scope": 850,
							"sourceUnit": 316,
							"src": "80:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 321,
							"nodeType": "ImportDirective",
							"scope": 850,
							"sourceUnit": 992,
							"src": "114:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
							"file": "../../Initializable.sol",
							"id": 322,
							"nodeType": "ImportDirective",
							"scope": 850,
							"sourceUnit": 120,
							"src": "148:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 324,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 119,
										"src": "1369:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$119",
											"typeString": "contract Initializable"
										}
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "1369:13:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 326,
										"name": "ContextUpgradeSafe",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 44,
										"src": "1384:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
											"typeString": "contract ContextUpgradeSafe"
										}
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "1384:18:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 328,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 927,
										"src": "1404:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$927",
											"typeString": "contract IERC20"
										}
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "1404:6:3"
								}
							],
							"contractDependencies": [
								44,
								119,
								927
							],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "183:1156:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20MinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 849,
							"linearizedBaseContracts": [
								849,
								927,
								44,
								119
							],
							"name": "ERC20UpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 332,
									"libraryName": {
										"contractScope": null,
										"id": 330,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 315,
										"src": "1423:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$315",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1417:27:3",
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1436:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 335,
									"libraryName": {
										"contractScope": null,
										"id": 333,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 991,
										"src": "1455:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$991",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1449:26:3",
									"typeName": {
										"id": 334,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1467:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1481:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 338,
										"keyType": {
											"id": 336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1490:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1501:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 345,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1534:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 344,
										"keyType": {
											"id": 340,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1534:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 343,
											"keyType": {
												"id": 341,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1563:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1554:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1574:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1610:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1610:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1645:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1645:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1671:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1671:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "1699:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 352,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1699:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2131:89:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 363,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2141:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2141:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2141:26:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 367,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 368,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2206:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 366,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "2177:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2177:36:3"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1729:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 361,
											"modifierName": {
												"argumentTypes": null,
												"id": 360,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "2119:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2119:11:3"
										}
									],
									"name": "__ERC20_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "2068:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2068:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "2088:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2067:42:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:0:3"
									},
									"scope": 849,
									"src": "2046:174:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2321:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 381,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2333:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 382,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "2341:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2333:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2333:12:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 385,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2355:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 386,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2365:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2355:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "2355:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 389,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2381:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2393:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2381:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2381:14:3"
											}
										]
									},
									"documentation": null,
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 379,
											"modifierName": {
												"argumentTypes": null,
												"id": 378,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 92,
												"src": "2309:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2309:11:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "2258:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2258:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "2278:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2278:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2257:42:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:3"
									},
									"scope": 849,
									"src": "2226:177:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2521:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2538:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 399,
												"id": 401,
												"nodeType": "Return",
												"src": "2531:12:3"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2410:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:2:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "2506:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2506:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2505:15:3"
									},
									"scope": 849,
									"src": "2469:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2717:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 408,
												"id": 410,
												"nodeType": "Return",
												"src": "2727:14:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2556:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:3"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "2702:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2701:15:3"
									},
									"scope": 849,
									"src": "2663:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "3419:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 418,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "3436:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 417,
												"id": 419,
												"nodeType": "Return",
												"src": "3429:16:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2754:612:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3388:2:3"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "3412:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 415,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3412:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3411:7:3"
									},
									"scope": 849,
									"src": "3371:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										858
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3574:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 428,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 347,
													"src": "3591:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "3584:19:3"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "3458:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3547:8:3"
									},
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:2:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "3565:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:9:3"
									},
									"scope": 849,
									"src": "3512:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3743:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "3760:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3770:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3760:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 443,
												"nodeType": "Return",
												"src": "3753:25:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3616:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3716:8:3"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "3687:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3686:17:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "3734:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3733:9:3"
									},
									"scope": 849,
									"src": "3668:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "4080:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 457,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "4100:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4100:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 459,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4114:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 460,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4125:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "4090:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4090:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "4090:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4149:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 455,
												"id": 464,
												"nodeType": "Return",
												"src": "4142:11:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3791:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 452,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4056:8:3"
									},
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "4006:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "4025:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4025:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4005:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "4074:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4074:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4073:6:3"
									},
									"scope": 849,
									"src": "3988:172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										886
									],
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4316:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 477,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "4333:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 479,
														"indexExpression": {
															"argumentTypes": null,
															"id": 478,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4345:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4333:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 481,
													"indexExpression": {
														"argumentTypes": null,
														"id": 480,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "4352:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4333:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 482,
												"nodeType": "Return",
												"src": "4326:34:3"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "4166:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 473,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4289:8:3"
									},
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4237:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4252:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4236:32:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "4307:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4306:9:3"
									},
									"scope": 849,
									"src": "4218:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "4594:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 496,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "4613:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4613:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4627:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4636:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4604:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4604:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4604:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4660:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 494,
												"id": 503,
												"nodeType": "Return",
												"src": "4653:11:3"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4373:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4570:8:3"
									},
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "4522:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "4539:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4521:33:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "4588:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4588:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4587:6:3"
									},
									"scope": 849,
									"src": "4505:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										908
									],
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5243:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 519,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5263:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 520,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5271:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5282:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5253:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5253:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5253:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 525,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5308:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 526,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "5316:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5316:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 535,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "5368:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5376:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 528,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "5330:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 530,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 529,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "5342:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5330:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 533,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 531,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "5350:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5350:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5330:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 193,
																"src": "5330:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5330:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5299:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5299:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5437:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 517,
												"id": 541,
												"nodeType": "Return",
												"src": "5430:11:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "4677:449:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5219:8:3"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "5153:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "5169:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "5188:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5152:51:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "5237:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5237:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5236:6:3"
									},
									"scope": 849,
									"src": "5131:317:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "5937:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 554,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "5956:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5956:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5970:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 564,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "6018:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 557,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "5979:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 560,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 558,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "5991:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5991:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5979:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 562,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 561,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "6005:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5979:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 148,
																"src": "5979:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5979:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5947:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5947:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "5947:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6047:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 552,
												"id": 569,
												"nodeType": "Return",
												"src": "6040:11:3"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "5454:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "5870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "5887:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5869:37:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "5931:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5931:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5930:6:3"
									},
									"scope": 849,
									"src": "5843:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6644:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 582,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "6663:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6663:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 584,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "6677:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 592,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "6725:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6742:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 585,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "6686:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 588,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 586,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "6698:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6698:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6686:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 590,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 589,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "6712:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6686:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 193,
																"src": "6686:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6686:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "6654:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "6654:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6800:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 580,
												"id": 598,
												"nodeType": "Return",
												"src": "6793:11:3"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "6064:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "6572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "6589:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6571:42:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "6638:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6638:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6637:6:3"
									},
									"scope": 849,
									"src": "6545:266:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "7372:443:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 611,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "7390:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 612,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7390:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7382:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 621,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "7470:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 622,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7470:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7462:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 631,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7565:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 632,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7573:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7584:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "7544:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 636,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7602:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 638,
														"indexExpression": {
															"argumentTypes": null,
															"id": 637,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7612:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7602:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "7644:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7652:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 639,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "7622:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 641,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 640,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "7632:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7622:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 193,
															"src": "7622:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7622:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7602:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "7602:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 648,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7703:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 650,
														"indexExpression": {
															"argumentTypes": null,
															"id": 649,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7713:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7703:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 655,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "7751:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 651,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "7726:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 653,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 652,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "7736:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7726:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "7726:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7726:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7703:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "7703:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 660,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "7782:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 661,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7790:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7801:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "7773:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7773:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "7768:40:3"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6817:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "7304:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "7320:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7320:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "7339:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7303:51:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:3"
									},
									"scope": 849,
									"src": "7285:530:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "8150:305:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "8168:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8187:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8179:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 676,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8179:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8179:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8168:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8191:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8160:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8160:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "8160:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8265:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8257:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 685,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8257:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 689,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 690,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "8278:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "8236:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8236:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "8236:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "8296:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "8328:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 694,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "8311:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "8311:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8311:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8296:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "8296:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 700,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8345:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 702,
														"indexExpression": {
															"argumentTypes": null,
															"id": 701,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8355:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8345:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 707,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "8389:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 703,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "8366:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 705,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 704,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "8376:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8366:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "8366:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8366:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8345:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "8345:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8428:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8420:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8420:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8420:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 716,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8432:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 717,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "8441:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 711,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "8411:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "EmitStatement",
												"src": "8406:42:3"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "7821:259:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "8100:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 721,
												"src": "8117:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8099:33:3"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8150:0:3"
									},
									"scope": 849,
									"src": "8085:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "8839:345:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 730,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "8857:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8876:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8868:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 731,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8868:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8868:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8857:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8880:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8849:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8849:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "8849:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 740,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "8948:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8965:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 745,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8969:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "8927:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8927:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "8927:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 748,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8987:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 750,
														"indexExpression": {
															"argumentTypes": null,
															"id": 749,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "8997:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8987:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 755,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "9031:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9039:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 751,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "9008:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 753,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 752,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "9018:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9008:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 193,
															"src": "9008:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9008:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8987:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "8987:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 760,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "9086:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "9118:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 761,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "9101:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 165,
															"src": "9101:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9101:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9086:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "9086:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "9149:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9166:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9158:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9158:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9158:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "9170:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "9140:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9140:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "9135:42:3"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "8461:308:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "8789:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8789:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "8806:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8806:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8788:33:3"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8839:0:3"
									},
									"scope": 849,
									"src": "8774:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "9692:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 788,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "9710:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9727:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9719:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9719:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9719:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9710:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9731:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9702:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9702:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "9702:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 798,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "9788:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9807:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9799:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9799:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9799:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9788:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9811:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9780:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9780:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "9780:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 807,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9859:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 810,
															"indexExpression": {
																"argumentTypes": null,
																"id": 808,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "9871:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9859:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 811,
														"indexExpression": {
															"argumentTypes": null,
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "9878:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9859:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 812,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "9889:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9859:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "9859:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 816,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "9919:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "9926:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "9935:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9910:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9910:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "9905:37:3"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "9190:414:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "9627:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "9642:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9642:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "9659:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9659:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9626:48:3"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9692:0:3"
									},
									"scope": 849,
									"src": "9609:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "10322:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 828,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "10332:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 829,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "10344:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10332:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "10332:21:3"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "9955:312:3",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "10296:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 824,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10296:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10295:17:3"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10322:0:3"
									},
									"scope": 849,
									"src": "10272:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "11036:3:3",
										"statements": []
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "10366:576:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "10977:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "10991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 844,
												"src": "11003:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11003:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10976:42:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11036:0:3"
									},
									"scope": 849,
									"src": "10947:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 848,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 849,
									"src": "11045:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$44_storage",
										"typeString": "uint256[44]"
									},
									"typeName": {
										"baseType": {
											"id": 845,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11045:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 847,
										"length": {
											"argumentTypes": null,
											"hexValue": "3434",
											"id": 846,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11053:2:3",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_44_by_1",
												"typeString": "int_const 44"
											},
											"value": "44"
										},
										"nodeType": "ArrayTypeName",
										"src": "11045:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$44_storage_ptr",
											"typeString": "uint256[44]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 850,
							"src": "1340:9733:3"
						}
					],
					"src": "0:11074:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							927
						]
					},
					"id": 928,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 851,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 852,
								"nodeType": "StructuredDocumentation",
								"src": "25:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "119:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:4"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 858,
												"src": "236:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:9:4"
									},
									"scope": 927,
									"src": "190:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "251:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "347:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:17:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "387:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "386:9:4"
									},
									"scope": 927,
									"src": "328:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "402:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "634:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "653:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "633:35:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 876,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:6:4"
									},
									"scope": 927,
									"src": "616:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "699:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 886,
												"src": "987:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 886,
												"src": "1002:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "986:32:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 886,
												"src": "1042:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1041:9:4"
									},
									"scope": 927,
									"src": "968:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "1057:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 896,
												"src": "1721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 896,
												"src": "1738:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1720:33:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 896,
												"src": "1772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:6:4"
									},
									"scope": 927,
									"src": "1704:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1784:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2107:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2123:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2142:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2106:51:4"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "2176:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2175:6:4"
									},
									"scope": 927,
									"src": "2085:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2188:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 917,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "2366:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "2388:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "2408:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2365:57:4"
									},
									"src": "2351:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "2429:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 926,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "2597:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "2620:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 926,
												"src": "2645:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:63:4"
									},
									"src": "2582:78:4"
								}
							],
							"scope": 928,
							"src": "96:2566:4"
						}
					],
					"src": "0:2663:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							991
						]
					},
					"id": 992,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 929,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "25:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 991,
							"linearizedBaseContracts": [
								991
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "751:544:5",
										"statements": [
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 955,
														"src": "1003:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 938,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:16:5"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 955,
														"src": "1029:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 941,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1029:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1051:66:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1029:88:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1192:36:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1218:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1206:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:20:5"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1194:8:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 933,
														"isOffset": false,
														"isSlot": false,
														"src": "1218:7:5",
														"valueSize": 1
													},
													{
														"declaration": 939,
														"isOffset": false,
														"isSlot": false,
														"src": "1194:8:5",
														"valueSize": 1
													}
												],
												"id": 945,
												"nodeType": "InlineAssembly",
												"src": "1183:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 946,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "1245:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 947,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "1257:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1245:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 949,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "1272:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1284:3:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1272:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1245:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 953,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1244:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 937,
												"id": 954,
												"nodeType": "Return",
												"src": "1237:51:5"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "115:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "705:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:17:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 956,
												"src": "745:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:5"
									},
									"scope": 991,
									"src": "685:610:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2283:320:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 967,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2309:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$991",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$991",
																				"typeString": "library Address"
																			}
																		],
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2301:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 965,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2301:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2301:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2301:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 970,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2326:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2301:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2334:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2293:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "2293:73:5"
											},
											{
												"assignments": [
													976,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 989,
														"src": "2455:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 975,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2455:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 983,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 977,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2473:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2473:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 979,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2496:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2473:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 985,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "2526:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2518:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2518:78:5"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1301:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "2231:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 990,
												"src": "2258:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:43:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:5"
									},
									"scope": 991,
									"src": "2212:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 992,
							"src": "93:2512:5"
						}
					],
					"src": "0:2606:5"
				},
				"id": 5
			}
		}
	}
}